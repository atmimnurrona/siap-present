[{"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\index.js":"1","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\App.js":"2","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\reportWebVitals.js":"3","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\store.js":"4","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\routes.js":"5","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\account\\SignIn.js":"6","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\account\\SignUp.js":"7","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\account\\AccountList.js":"8","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\transaction\\TransactionDetail.js":"9","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\customer\\DetailCustomer.js":"10","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\report\\ReportList.js":"11","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\reasonUse\\ReasonUse.js":"12","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\reasonUse\\ReasonForm.js":"13","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\transaction\\listTransactionByStaff\\ListTransactionByStaff.js":"14","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\report\\reportByStaff\\ListReportByStaff.js":"15","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\profile\\EditPassword.js":"16","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\profile\\EditProfile.js":"17","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\role\\RoleMenu.js":"18","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\role\\RoleList.js":"19","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\verification\\VerificationPage.js":"20","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\customer\\listCustomerByStaff\\ListCustomerByStaff.js":"21","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\actions\\loginAction.js":"22","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\sagas\\index.js":"23","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\reducers\\index.js":"24","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\Error\\index.js":"25","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\transaction\\transactionForm\\index.js":"26","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\transaction\\transactionList\\index.js":"27","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\customer\\customerForm\\index.js":"28","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\customer\\listCustomer\\index.js":"29","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\components\\dashboard\\index.js":"30","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\actions\\signupAction.js":"31","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\components\\dashboard\\Footer.js":"32","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\components\\dashboard\\Header.js":"33","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\actions\\roleAction.js":"34","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\components\\dashboard\\Menu.js":"35","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\account\\AccountRow.js":"36","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\actions\\approvalAction.js":"37","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\actions\\customerAction.js":"38","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\components\\Containers\\Container.js":"39","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\customer\\listCustomerByStaff\\RowList.js":"40","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\reasonUse\\ReasonRow.js":"41","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\role\\RoleRow.js":"42","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\actions\\userAction.js":"43","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\actions\\reportAction.js":"44","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\report\\reportByStaff\\Row.js":"45","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\constants\\actions.js":"46","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\transaction\\listTransactionByStaff\\Row.js":"47","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\actions\\transactionAction.js":"48","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\actions\\needAction.js":"49","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\report\\ReportRow.js":"50","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\sagas\\customerSaga.js":"51","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\sagas\\signupSaga.js":"52","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\sagas\\approvalSaga.js":"53","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\sagas\\totalSaga.js":"54","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\sagas\\needSaga.js":"55","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\sagas\\roleSaga.js":"56","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\sagas\\transactionSaga.js":"57","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\sagas\\reportSaga.js":"58","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\sagas\\loginSaga.js":"59","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\reducers\\customerReducer.js":"60","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\reducers\\transactionReducer.js":"61","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\reducers\\loginReducer.js":"62","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\reducers\\signupReducer.js":"63","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\reducers\\reportReducer.js":"64","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\reducers\\approvalReducer.js":"65","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\reducers\\needReducer.js":"66","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\reducers\\roleReducer.js":"67","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\reducers\\userReducer.js":"68","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\reducers\\totalReducer.js":"69","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\sagas\\userSaga.js":"70","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\Error\\Error.js":"71","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\components\\Buttons\\index.js":"72","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\transaction\\transactionForm\\TransactionForm.js":"73","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\transaction\\transactionList\\TransactionList.js":"74","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\customer\\customerForm\\CustomerForm.js":"75","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\customer\\listCustomer\\ListCustomer.js":"76","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\components\\dashboard\\Home.js":"77","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\sagas\\pagination.js":"78","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\api.js":"79","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\components\\Buttons\\Buttons.js":"80","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\transaction\\transactionList\\TransactionRow.js":"81","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\customer\\listCustomer\\RowCustomer.js":"82","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\actions\\totalAction.js":"83","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\components\\DropdownList\\DropdownList.js":"84"},{"size":549,"mtime":1617510743000,"results":"85","hashOfConfig":"86"},{"size":848,"mtime":1617510743000,"results":"87","hashOfConfig":"86"},{"size":362,"mtime":1617510743000,"results":"88","hashOfConfig":"86"},{"size":339,"mtime":1617510743000,"results":"89","hashOfConfig":"86"},{"size":4046,"mtime":1617510743000,"results":"90","hashOfConfig":"86"},{"size":7671,"mtime":1617510743000,"results":"91","hashOfConfig":"86"},{"size":19259,"mtime":1617510743000,"results":"92","hashOfConfig":"86"},{"size":7794,"mtime":1617510743000,"results":"93","hashOfConfig":"86"},{"size":22453,"mtime":1617510743000,"results":"94","hashOfConfig":"86"},{"size":9863,"mtime":1617510743000,"results":"95","hashOfConfig":"86"},{"size":10314,"mtime":1617510743000,"results":"96","hashOfConfig":"86"},{"size":7514,"mtime":1617510743000,"results":"97","hashOfConfig":"86"},{"size":9828,"mtime":1617510743000,"results":"98","hashOfConfig":"86"},{"size":7989,"mtime":1617510743000,"results":"99","hashOfConfig":"86"},{"size":9366,"mtime":1617510743000,"results":"100","hashOfConfig":"86"},{"size":22220,"mtime":1617510743000,"results":"101","hashOfConfig":"86"},{"size":12080,"mtime":1617510743000,"results":"102","hashOfConfig":"86"},{"size":20915,"mtime":1617510743000,"results":"103","hashOfConfig":"86"},{"size":7421,"mtime":1617510743000,"results":"104","hashOfConfig":"86"},{"size":1113,"mtime":1617510743000,"results":"105","hashOfConfig":"86"},{"size":7659,"mtime":1617510743000,"results":"106","hashOfConfig":"86"},{"size":183,"mtime":1617510743000,"results":"107","hashOfConfig":"86"},{"size":2301,"mtime":1617510743000,"results":"108","hashOfConfig":"86"},{"size":2385,"mtime":1617510743000,"results":"109","hashOfConfig":"86"},{"size":33,"mtime":1617510743000,"results":"110","hashOfConfig":"86"},{"size":41,"mtime":1617510743000,"results":"111","hashOfConfig":"86"},{"size":41,"mtime":1617510743000,"results":"112","hashOfConfig":"86"},{"size":38,"mtime":1617510743000,"results":"113","hashOfConfig":"86"},{"size":38,"mtime":1617510743000,"results":"114","hashOfConfig":"86"},{"size":1026,"mtime":1617510743000,"results":"115","hashOfConfig":"86"},{"size":704,"mtime":1617510743000,"results":"116","hashOfConfig":"86"},{"size":274,"mtime":1617510743000,"results":"117","hashOfConfig":"86"},{"size":4319,"mtime":1617510743000,"results":"118","hashOfConfig":"86"},{"size":714,"mtime":1617510743000,"results":"119","hashOfConfig":"86"},{"size":6276,"mtime":1617510743000,"results":"120","hashOfConfig":"86"},{"size":940,"mtime":1617510743000,"results":"121","hashOfConfig":"86"},{"size":1295,"mtime":1617510743000,"results":"122","hashOfConfig":"86"},{"size":683,"mtime":1617510743000,"results":"123","hashOfConfig":"86"},{"size":474,"mtime":1617510743000,"results":"124","hashOfConfig":"86"},{"size":1164,"mtime":1617510743000,"results":"125","hashOfConfig":"86"},{"size":575,"mtime":1617510743000,"results":"126","hashOfConfig":"86"},{"size":570,"mtime":1617510743000,"results":"127","hashOfConfig":"86"},{"size":333,"mtime":1617510743000,"results":"128","hashOfConfig":"86"},{"size":266,"mtime":1617510743000,"results":"129","hashOfConfig":"86"},{"size":2653,"mtime":1617510743000,"results":"130","hashOfConfig":"86"},{"size":8095,"mtime":1617510743000,"results":"131","hashOfConfig":"86"},{"size":1052,"mtime":1617510743000,"results":"132","hashOfConfig":"86"},{"size":789,"mtime":1617510743000,"results":"133","hashOfConfig":"86"},{"size":843,"mtime":1617510743000,"results":"134","hashOfConfig":"86"},{"size":3210,"mtime":1617510743000,"results":"135","hashOfConfig":"86"},{"size":3229,"mtime":1617510743000,"results":"136","hashOfConfig":"86"},{"size":3093,"mtime":1617510743000,"results":"137","hashOfConfig":"86"},{"size":5311,"mtime":1617510743000,"results":"138","hashOfConfig":"86"},{"size":662,"mtime":1617510743000,"results":"139","hashOfConfig":"86"},{"size":3663,"mtime":1617510743000,"results":"140","hashOfConfig":"86"},{"size":3381,"mtime":1617510743000,"results":"141","hashOfConfig":"86"},{"size":4101,"mtime":1617510743000,"results":"142","hashOfConfig":"86"},{"size":2058,"mtime":1617510743000,"results":"143","hashOfConfig":"86"},{"size":768,"mtime":1617510743000,"results":"144","hashOfConfig":"86"},{"size":4638,"mtime":1617510743000,"results":"145","hashOfConfig":"86"},{"size":5275,"mtime":1617510743000,"results":"146","hashOfConfig":"86"},{"size":860,"mtime":1617510743000,"results":"147","hashOfConfig":"86"},{"size":3548,"mtime":1617510743000,"results":"148","hashOfConfig":"86"},{"size":2639,"mtime":1617510743000,"results":"149","hashOfConfig":"86"},{"size":5804,"mtime":1617510743000,"results":"150","hashOfConfig":"86"},{"size":4634,"mtime":1617510743000,"results":"151","hashOfConfig":"86"},{"size":3976,"mtime":1617510743000,"results":"152","hashOfConfig":"86"},{"size":1073,"mtime":1617510743000,"results":"153","hashOfConfig":"86"},{"size":927,"mtime":1617510743000,"results":"154","hashOfConfig":"86"},{"size":869,"mtime":1617510743000,"results":"155","hashOfConfig":"86"},{"size":1386,"mtime":1617510743000,"results":"156","hashOfConfig":"86"},{"size":42,"mtime":1617510743000,"results":"157","hashOfConfig":"86"},{"size":24656,"mtime":1617510743000,"results":"158","hashOfConfig":"86"},{"size":7819,"mtime":1617510743000,"results":"159","hashOfConfig":"86"},{"size":25094,"mtime":1617510743000,"results":"160","hashOfConfig":"86"},{"size":8516,"mtime":1617510743000,"results":"161","hashOfConfig":"86"},{"size":6463,"mtime":1617510743000,"results":"162","hashOfConfig":"86"},{"size":462,"mtime":1617510743000,"results":"163","hashOfConfig":"86"},{"size":638,"mtime":1617510743000,"results":"164","hashOfConfig":"86"},{"size":3862,"mtime":1617510743000,"results":"165","hashOfConfig":"86"},{"size":1467,"mtime":1617510743000,"results":"166","hashOfConfig":"86"},{"size":1211,"mtime":1617510743000,"results":"167","hashOfConfig":"86"},{"size":142,"mtime":1617510743000,"results":"168","hashOfConfig":"86"},{"size":793,"mtime":1617510743000,"results":"169","hashOfConfig":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},"1oa1wwv",{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"172"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"172"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"172"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"172"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"172"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"172"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"172"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"172"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"172"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"172"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"172"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"172"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"172"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"172"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"172"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"172"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"172"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"172"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"172"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"172"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"172"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"172"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"172"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"172"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"172"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"172"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"172"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"172"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"172"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"172"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"172"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"172"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"172"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"172"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"172"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"172"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"172"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"172"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"172"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\index.js",[],["378","379"],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\App.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\reportWebVitals.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\store.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\routes.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\account\\SignIn.js",["380"],"import React, {useEffect, useState} from \"react\";\nimport {faKey, faUser} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {Button} from \"reactstrap\";\nimport logoku from \"../../assets/images/logoku.png\"\nimport \"./login.css\"\nimport {useHistory} from \"react-router\";\nimport {connect} from \"react-redux\";\nimport {loginRequestAction} from \"../../actions/loginAction\";\nimport swal from \"sweetalert\";\n\n\nconst SignIn = ({loginData, isLoading, error, dispatchLoginAction}) => {\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [usernameError, setUsernameError] = useState('');\n    const [passwordError, setPasswordError] = useState('');\n\n    const [validation, setValidation] = useState('');\n\n    const history = useHistory();\n\n    const handleLogin = (e) => {\n        e.preventDefault()\n        const isValid = validate();\n\n        if (isValid) {\n            const data = {\n                username: username,\n                password: password\n            }\n            dispatchLoginAction(data)\n        }\n    }\n\n    useEffect(() => {\n        // jika login sukses\n        if (loginData) {\n            localStorage.setItem('token', loginData.token)\n            localStorage.setItem('roles', loginData.roles)\n            localStorage.setItem('username', loginData.username)\n            localStorage.setItem('fullName', loginData.fullName)\n            localStorage.setItem('inputCustomer', loginData.inputCustomer)\n            localStorage.setItem('readAllCustomer', loginData.readAllCustomer)\n            localStorage.setItem('inputTransaction', loginData.inputTransaction)\n            localStorage.setItem('readAllTransaction', loginData.readAllTransaction)\n            localStorage.setItem('approveTransaction', loginData.approveTransaction)\n            localStorage.setItem('readAllReport', loginData.readAllReport)\n            localStorage.setItem('readAllReportByTransaction', loginData.readAllReportByTransaction)\n            localStorage.setItem('master', loginData.master)\n\n            swal(\"Login Success!\", \"\", \"success\").then((value) => {\n              window.location.href = \"/dashboard\"\n            });\n\n        }\n        if (error) {\n            setValidation(\"*Username or Password invalid!\")\n            swal(\"Login Error!\", \"\", \"error\")\n        }\n\n    }, [loginData, error])\n\n    useEffect(() => {\n        setValidation(\"\")\n        setUsernameError(\"\")\n        setPasswordError(\"\")\n    }, [username, password])\n\n    const validate = () => {\n        //var kosong, agar bisa di update isinya\n        let usernameError = \"\";\n        let passwordError = \"\";\n\n        if (!username) {\n            usernameError = \"*please enter username\"\n        }\n        if (!password) {\n            passwordError = \"*please enter password\"\n        }\n        if (usernameError || passwordError) {\n            setUsernameError(usernameError);\n            setPasswordError(passwordError);\n            return false;\n        }\n        return true;\n    }\n\n    const handleUsernameChange = (e) => {\n        const inputValue = e.target.value;\n        const isEmpty = inputValue === \"\";\n        setUsername(inputValue)\n        setUsernameError(isEmpty)\n    }\n\n    const handlePasswordChange = (e) => {\n        const inputValue = e.target.value;\n        const isEmpty = inputValue === \"\";\n        setPassword(inputValue)\n        setPasswordError(isEmpty)\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"row align-items-center\">\n                <div className=\"col-md-5 pr-lg-5 mb-md-0\">\n                    <div>\n                        <img src={logoku} alt=\"\"\n                             className=\"img-fluid d-none d-md-block\"/>\n                        <p style={{color: \"#e42256\", fontSize: \"30px\"}}>OK200</p>\n                        <p style={{color: \"#e42256\", fontSize: \"30px\"}}>Credit Risk Scoring</p>\n                    </div>\n\n                </div>\n\n                <div className=\"col-md-7 col-lg-6 ml-auto\">\n                    <form onSubmit={handleLogin}>\n                        <div className=\"row\">\n                            <div className=\"input-group col-lg-12 mb-4\">\n                                <div className=\"input-group-prepend\">\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\n                                            <FontAwesomeIcon icon={faUser}/>\n                                        </span>\n                                </div>\n                                <input id=\"username\"\n                                       type=\"text\"\n                                       name=\"username\"\n                                       placeholder=\"Username\"\n                                       onChange={(e) => handleUsernameChange(e)}\n                                       value={username}\n                                       className=\"form-control bg-white border-left-0 border-md\"/>\n                            </div>\n                            <div style={{\n                                marginLeft: \"20px\",\n                                marginTop: \"-25px\",\n                                marginBottom: \"20px\",\n                                color: \"red\"\n                            }}>\n                                {usernameError}\n                            </div>\n\n                            <div className=\"input-group col-lg-12 mb-4\">\n                                <div className=\"input-group-prepend\">\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\n                                            <FontAwesomeIcon icon={faKey}/>\n                                        </span>\n                                </div>\n                                <input id=\"password\"\n                                       type=\"password\"\n                                       name=\"password\"\n                                       placeholder=\"Password\"\n                                       onChange={(e) => handlePasswordChange(e)}\n                                       className=\"form-control bg-white border-left-0 border-md\"/>\n                            </div>\n                            <div style={{\n                                marginLeft: \"20px\",\n                                marginTop: \"-25px\",\n                                marginBottom: \"20px\",\n                                color: \"red\"\n                            }}>{passwordError}</div>\n\n                            <div className=\"form-group col-lg-12 mx-auto mb-0\">\n                                <div style={{fontSize: 12, color: \"red\"}}>{validation}</div>\n                                <Button\n                                    style={{background: \"#e42256\"}}\n                                    type=\"submit\"\n                                    block>\n                                        <span className=\"font-weight-bold\"\n                                              style={{color: \"#ffff\"}}>SIGN IN</span>\n                                </Button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loginData: state.loginReducer.data,\n        isLoading: state.loginReducer.isLoading,\n        error: state.loginReducer.error\n    }\n}\n\nconst mapDispatchToProps = {\n    dispatchLoginAction: loginRequestAction\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\account\\SignUp.js",["381","382","383","384","385","386","387","388","389","390","391","392","393"],"import React, {useEffect, useState} from 'react';\nimport {Redirect, useHistory, useParams} from 'react-router-dom'\nimport undraw_Updated_resume_re_q1or from \"../../assets/images/undraw_Updated_resume_re_q1or.svg\"\nimport {\n    faArrowLeft,\n    faEnvelope, faKey, faSave,\n    faUser,\n    faUserCircle\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport \"./login.css\"\nimport {Spinner, Button, Form, Col, Label, Input, FormGroup, Row} from \"reactstrap\";\nimport {findAccountByIdAction, saveAccountAction} from \"../../actions/signupAction\";\nimport {connect} from \"react-redux\";\nimport Header from \"../../components/dashboard/Header\";\nimport Menu from \"../../components/dashboard/Menu\";\nimport swal from \"sweetalert\";\nimport Error from \"../Error\";\nimport {findAllRoleAction} from \"../../actions/roleAction\";\nimport Footer from \"../../components/dashboard/Footer\";\n\nconst SignUp = ({saveDispatch, error, saveAccount, account, isLoading, findAccountByIdAction, roles, findAllRoleAction}) => {\n    const {id} = useParams()\n    const [redirect] = useState(false)\n\n    const [photo, setPhoto] = useState({\n        profilePicture: {}\n    })\n    const [data, setData] = useState({\n        username: \"\",\n        fullName: \"\",\n        email: \"\",\n        password: \"\",\n        profilePicture: \"\",\n        role: \"\"\n    })\n    const history = useHistory()\n\n    const onReload = () => {\n        findAllRoleAction()\n    }\n    useEffect(onReload, [findAllRoleAction])\n\n    useEffect(() => {\n        findAllRoleAction()\n    }, [findAllRoleAction])\n\n    useEffect(() => {\n        if (id) {\n            findAccountByIdAction(id)\n        }\n        console.log(\"\")\n    }, [id, findAccountByIdAction])\n\n    useEffect(() => {\n        if (id && account) {\n            setData({...account})\n        }\n    }, [account])\n    console.log(\"ini id\", id)\n\n    useEffect(() => {\n        if (saveAccount) {\n            swal(\"Register Success\", \"\", \"success\")\n            history.push('/master')\n        }\n        if (error) {\n            swal(\"Register error\", `${error.message}`, \"error\")\n        }\n    }, [saveAccount, history, error])\n\n    const handlePhoto = async (e) => {\n        let name = e.target.name\n        let value = e.target.files[0]\n        setPhoto({...photo, [name]: value})\n\n        const formData = new FormData()\n        formData.append(\"file\", value)\n        formData.append(\"upload_preset\", \"ve2u0qv8\")\n\n        const response = await fetch(\"https://api.cloudinary.com/v1_1/nielnaga/image/upload\", {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            body: formData // body data type must match \"Content-Type\" header\n        }).then(res => res.json())\n            .then(res => {\n                console.log(res.url)\n                setData({\n                    ...data,\n                    [name]: res.url\n                })\n            })\n    }\n\n    const handleChange = (e) => {\n        let name = e.target.name\n        let value = e.target.value\n        setData({...data, [name]: value})\n    }\n\n    const handleRoles = (e) => {\n        setData({\n            ...data,\n            role: e\n        })\n    }\n\n    const handleSubmit = (e) => {\n\n        e.preventDefault()\n        saveDispatch(data)\n        swal(\"Save Success!\", \"\", \"success\");\n\n        console.log(\"submit\" , data)\n    }\n\n    if (redirect === true) {\n        return <Redirect to=\"/master\"/>\n    }\n\n    return (\n        <div>\n            {\n                localStorage.getItem(\"master\") == \"true\" ?\n                    <>\n                        <div>\n                            <Header/>\n                            <Menu/>\n                            <div className=\"content-wrapper\">\n                                <div className=\"content-header\">\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row mb-2\" style={{\n                                            marginTop: '30px',\n                                            display: \"flex\",\n                                            justifyContent: \"center\",\n                                            alignItems: \"center\"\n                                        }}>\n                                            <div className=\"col-sm-11\">\n                                                <h1 className=\"m-0 text-dark\">Account</h1>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"content\">\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row\" style={{display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n                                            <div className=\"col-lg-11\">\n                                                <div className=\"card\">\n                                                    <div className=\"card-body table-responsive p-md-5\">\n                                                        <div className=\"col-md-12\">\n                                                            <div className=\"form form-container\">\n\n                                                                        {!isLoading ?\n                                                                            <Form onSubmit={handleSubmit}>\n                                                                                <div className=\"row\">\n\n                                                                                    <Label htmlFor=\"type\" sm={3}\n                                                                                           style={{textAlign: \"left\"}}>Full Name</Label>\n                                                                                    <Col sm={12} style={{marginBottom:\"1vw\"}}>\n                                                                                        <Input\n                                                                                            required\n                                                                                            onChange={handleChange}\n                                                                                            value={data?.fullName || \"\"}\n                                                                                            type=\"text\"\n                                                                                            name=\"fullName\"\n                                                                                            placeholder=\"full name\"/>\n                                                                                    </Col>\n\n                                                                                    <Label htmlFor=\"type\" sm={3}\n                                                                                           style={{textAlign: \"left\"}}>Username</Label>\n                                                                                    <Col sm={12} style={{marginBottom:\"1vw\"}}>\n                                                                                        <Input\n                                                                                            required\n                                                                                            onChange={handleChange}\n                                                                                            value={data.username || \"\"}\n                                                                                            type=\"text\"\n                                                                                            name=\"username\"\n                                                                                            placeholder=\"username\"\n                                                                                            minLength={4}\n                                                                                            maxLength={10}/>\n                                                                                    </Col>\n\n                                                                                    <Label htmlFor=\"type\" sm={3}\n                                                                                           style={{textAlign: \"left\"}}>Email</Label>\n                                                                                    <Col sm={12} style={{marginBottom:\"1vw\"}}>\n                                                                                        <Input\n                                                                                            required\n                                                                                            onChange={handleChange}\n                                                                                            value={data.email || \"\"}\n                                                                                            type=\"email\"\n                                                                                            name=\"email\"\n                                                                                            placeholder=\"email address\"/>\n                                                                                    </Col>\n\n                                                                                    {\n                                                                                        window.location.pathname != \"/register\" ?\n<>\n                                                                                            <Label htmlFor=\"type\" sm={3}\n                                                                                                   style={{textAlign: \"left\"}}>New Password</Label>\n                                                                                            <Col sm={12} style={{marginBottom:\"1vw\"}}>\n                                                                                                <Input\n                                                                                                    required\n                                                                                                    onChange={handleChange}\n                                                                                                    value={data.password || \"\"}\n                                                                                                    type=\"password\"\n                                                                                                    name=\"password\"\n                                                                                                    placeholder=\"new password\"/>\n                                                                                            </Col>\n                                                                                            </>\n\n                                                                                            // <div\n                                                                                            //     className=\"input-group col-lg-12 mb-4\">\n                                                                                            //     <div\n                                                                                            //         className=\"input-group-prepend\">\n                                                                                            // <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\n                                                                                            //     <FontAwesomeIcon icon={faKey}/>\n                                                                                            // </span>\n                                                                                            //     </div>\n                                                                                            //     <input\n                                                                                            //         required\n                                                                                            //         onChange={handleChange}\n                                                                                            //         value={data.password || \"\"}\n                                                                                            //         type=\"password\"\n                                                                                            //         name=\"password\"\n                                                                                            //         placeholder=\"Input new password\"\n                                                                                            //         className=\"form-control bg-white border-left-0 border-md\"/><br/>\n                                                                                            // </div>\n: <> </>\n                                                                                    }\n\n                                                                                    <Label htmlFor=\"type\" sm={3}\n                                                                                           style={{textAlign: \"left\"}}>Role</Label>\n                                                                                    <Col sm={12} style={{marginBottom:\"1vw\"}}>\n                                                                                        <select\n                                                                                            style={{width:\"100%\", height:\"calc(1.5em + .75rem + 10px)\",\n                                                                                                borderRadius:\"0.2vw\", border: \"1px solid #ced4da\"}}\n                                                                                            onChange={e => setData({\n                                                                                                ...data,\n                                                                                                role: e.target.value\n                                                                                            })}>\n                                                                                            <option selected disabled hidden>Choose role\n                                                                                            </option>\n                                                                                            {roles?.list?.map((e, i) => (\n                                                                                                <option key={i} value={e.name}\n                                                                                                        data={e}\n                                                                                                        selected={e.id == data?.id || false}>{e.name}</option>\n                                                                                            ))}\n                                                                                        </select>\n                                                                                    </Col>\n                                                                                    </div>\n\n                                                                                    <Row>\n                                                                                        <Col sm={{size: 10, offset: 2}}\n                                                                                             style={{textAlign: \"right\"}}>\n                                                                                            <Button style={{background: \"#e42256\"}}>\n                                                                                                <FontAwesomeIcon icon={faSave} style={{marginRight:\"0.5vw\"}}/>\n                                                                                                Submit\n                                                                                            </Button> {' '}\n                                                                                            <Button href=\"/master\"\n                                                                                                    style={{background: \"#e42256\"}}>\n                                                                                                <FontAwesomeIcon\n                                                                                                    icon={faArrowLeft} style={{marginRight:\"0.5vw\"}}/>\n                                                                                                Cancel\n                                                                                            </Button>\n                                                                                        </Col>\n                                                                                    </Row>\n                                                                            </Form>\n                                                                            :\n                                                                            <div className=\"spinner\">\n                                                                                <Spinner style={{ width: '5rem', height: '5rem', color:\"#e42256\" }} />{' '}\n                                                                            </div>\n                                                                        }\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <Footer/>\n\n                        </div>\n                    </>\n                    :\n                    <div>\n                        <Error/>\n                    </div>\n            }\n        </div>\n\n    );\n\n}\nconst mapStateToProps = (state) => {\n    return {\n        account: state.findAccountByIdReducer.data,\n        saveAccount: state.saveAccountReducer.data,\n        error: state.saveAccountReducer.error,\n        isLoading: state.findAccountByIdReducer.isLoading || state.saveAccountReducer.isLoading,\n        update: state.updateAccountReducer,\n        roles: state.findAllRoleReducer.data\n    }\n}\n\nconst mapDispatchToProps = {\n    saveDispatch: saveAccountAction,\n    findAccountByIdAction,\n    findAllRoleAction\n}\n\nexport default connect(mapStateToProps,\n    mapDispatchToProps)(SignUp);","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\account\\AccountList.js",["394","395","396","397","398","399","400"],"import React, {useEffect, useState} from \"react\";\nimport AccountRow from \"./AccountRow\";\nimport {findAccountByIdAction, findAllAccountAction, removeByIdAccountAction} from \"../../actions/signupAction\";\nimport {connect} from \"react-redux\";\nimport Containers from '../../components/Containers/Container'\nimport Header from \"../../components/dashboard/Header\";\nimport Menu from \"../../components/dashboard/Menu\";\nimport Footer from \"../../components/dashboard/Footer\";\nimport swal from \"sweetalert\";\nimport Error from \"../Error\";\nimport {useParams} from 'react-router-dom';\nimport {PaginationButton} from \"../../components/Buttons\";\nimport TableScrollbar from \"react-table-scrollbar\";\nimport {Spinner} from \"reactstrap\";\n\n\nfunction AccountList({\n                         error,\n                         isLoading,\n                         accounts,\n                         findAllAccountAction,\n                         dispatchRemoveById,\n                         isRemoved\n                     }) {\n\n\n    const onReload = () => {\n        findAllAccountAction(\n        )\n    }\n\n    const onDelete = (id) => {\n        swal({\n            title: \"Are you sure to delete this data?\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n        })\n            .then(willDelete => {\n                if (willDelete) {\n                    dispatchRemoveById(id);\n                    swal(\"Successful deleted\", {\n                        icon: \"success\"\n                    });\n                } else {\n                    swal(\"Failed to delete\")\n                }\n            });\n    };\n\n    useEffect(onReload, [findAllAccountAction\n    ])\n\n    useEffect(() => {\n        onReload()\n    }, [])\n\n    useEffect(() => {\n        if (isRemoved) {\n            onReload()\n        }\n    }, [isRemoved])\n\n    return (\n        <div>\n            {\n                localStorage.getItem(\"master\") == \"true\" ?\n                    <>\n                        <Containers error={error}>\n                            <Header/>\n                            <Menu/>\n                            <div className=\"content-wrapper\">\n                                <div className=\"content-header\">\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row mb-2\" style={{marginTop: '30px', display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n                                            <div className=\"col-sm-11\">\n                                                <h1 className=\"m-0 text-dark\">Management User</h1>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"content\">\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row\" style={{display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n                                            <div className=\"col-lg-11\">\n\n                                                <div className=\"card\">\n                                                    <div className=\"card-header border-0\">\n                                                        <div className=\"card-tools\">\n                                                            <a href=\"/register\" className=\"btn btn-tool btn-lg\">\n                                                                <i className=\"fas fa-user-plus\"/>\n                                                            </a>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"card-body table-responsive p-0\">\n                                                        <TableScrollbar rows={13}>\n                                                            <table className=\"table table-striped table-valign-middle table-bordered text-nowrap\">\n\n                                                                <thead\n                                                                    style={{textAlign: \"left\", background: \"#FCE051\"}}>\n                                                                <tr>\n                                                                    <th>No.</th>\n                                                                    <th>Username</th>\n                                                                    <th>Full Name</th>\n                                                                    <th>Email</th>\n                                                                    <th>Verification</th>\n                                                                    <th>Role</th>\n                                                                    <th>Action</th>\n                                                                </tr>\n                                                                </thead>\n                                                                <tbody style={{textAlign: \"left\"}}>\n                                                                {\n                                                                    !isLoading ?\n                                                                        accounts?.list?.map((e, i) => {\n\n                                                                            return (\n                                                                                <AccountRow\n                                                                                    onDeleted={() => onDelete(e.id)}\n                                                                                    key={i} data={e}\n                                                                                    number={(accounts.page * accounts.size) + 1 + i}/>\n                                                                            )\n                                                                        }) :\n                                                                        <div className=\"spinner\">\n                                                                            <Spinner style={{ width: '5rem', height: '5rem', color:\"#e42256\" }} />{' '}\n                                                                        </div>\n                                                                }\n                                                                </tbody>\n                                                            </table>\n                                                        </TableScrollbar>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <Footer/>\n                        </Containers>\n                    </>\n                    :\n                    <div>\n                        <Error/>\n                    </div>\n            }\n\n        </div>\n    )\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        accounts: state.findAllAccountReducer.data,\n        isLoading: state.findAllAccountReducer.isLoading,\n        error: state.findAllAccountReducer.error || state.removeAccountByIdReducer.error,\n        isRemoved: state.removeAccountByIdReducer\n    }\n}\n\nconst mapDispatchToProps = {\n    findAllAccountAction,\n    dispatchRemoveById: removeByIdAccountAction\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountList)\n","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\transaction\\TransactionDetail.js",["401","402","403","404","405","406","407","408","409","410","411","412","413","414"],"import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {useParams, useHistory, Redirect} from 'react-router-dom'\nimport Header from \"../../components/dashboard/Header\";\nimport Menu from \"../../components/dashboard/Menu\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCheck, faCheckCircle, faCross, faSave, faTimesCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport NumberFormat from \"react-number-format\"\nimport {Row, Col, Button} from \"reactstrap\";\nimport {\n    findByIdApprovalAction,\n    findByIdApprovalSubmitterAction,\n    saveApprovalAction\n} from \"../../actions/approvalAction\";\nimport Error from \"../Error\";\nimport swal from \"sweetalert\";\nimport Footer from \"../../components/dashboard/Footer\";\nimport TableScrollbar from \"react-table-scrollbar\";\n\n\nfunction TransactionDetail({findByIdDispatch, transaction, isLoading, saveApprovalAction, savedApprove, findByIdApprovalSubmitterAction, transactionSubmitter, error }) {\n\n    const {id} = useParams()\n    const [redirect] = useState(false)\n    const [data, setData] = useState({})\n    const [approval, setApproval] = useState({\n        id: null,\n        approve: null\n    })\n\n    const history = useHistory()\n\n    // const handleApproval = () => {\n    //     saveApprovalAction({\n    //         transaction: data?.transaction?.id,\n    //         approve: true\n    //     })\n    //     history.push('/report')\n    //     // console.log(\"handle\", )\n    // }\n\n    const handleApproval = () => {\n        setApproval({\n            id: data?.transaction?.id,\n            approve: true\n        })\n\n        saveApprovalAction({\n            id: data.id,\n            approve: {\n                approve: true\n            }\n        })\n        swal(\"Approve!\", \"Transaction has been approved!\", \"success\").then(() => {\n            return (\n                window.location.href = \"/report\"\n            )\n        })\n\n    }\n\n    const handleReject = () => {\n        setApproval({\n            id: data?.transaction?.id,\n            approve: false\n        })\n\n        saveApprovalAction({\n            id: data.id,\n            approve: {\n                approve: false\n            }\n        })\n        swal(\"Reject!\", \"Transaction has been rejected!\", \"success\").then(() => {\n            return (\n                window.location.href = \"/report\"\n            )\n        })\n    }\n\n    useEffect(() => {\n        if (savedApprove) {\n            history.push('/report')\n            console.log(\"useeffect\", savedApprove)\n        }\n    }, [savedApprove])\n\n    useEffect(() => {\n        if (id && transaction) {\n            console.log(\"ini data detail\", transaction)\n            setData({...transaction})\n        } else if (id && transactionSubmitter) {\n            console.log(\"ini data detail submiter\", transactionSubmitter)\n            setData({...transactionSubmitter})\n        }\n    }, [transaction, transactionSubmitter])\n\n    useEffect(() => {\n        if (id) {\n            if (localStorage.getItem('readAllTransaction') == \"true\") {\n                findByIdDispatch(id)\n                console.log(\"readALL\", findByIdDispatch)\n            } else if (localStorage.getItem('inputTransaction') == \"true\"){\n                findByIdApprovalSubmitterAction(id)\n                console.log(\"inputTransaction\", findByIdApprovalSubmitterAction)\n            }\n        }\n    }, [id, findByIdDispatch, findByIdApprovalSubmitterAction])\n\n    if (redirect === true) {\n        return <Redirect to=\"/report\"/>\n    }\n\n    return (\n        <div>\n            {\n                localStorage.getItem(\"inputTransaction\") == \"true\" || localStorage.getItem(\"readAllTransaction\") == \"true\" ?\n                    <>\n                        <div>\n                            <Header/>\n                            <Menu/>\n                            <div className=\"content-wrapper\">\n                                <div className=\"content-header\">\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row mb-2\" style={{marginTop: '30px', display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n                                            <div className=\"col-sm-11\">\n                                                <h1 className=\"m-0 text-dark\">Detail Transaction</h1>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"content\">\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row\" style={{display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n                                            <div className=\"col-lg-11\">\n                                                <div className=\"card\">\n                                                    <div className=\"card-header border-0\">\n                                                        <div className=\"card-tools\">\n                                                            {localStorage.getItem(\"inputTransaction\") == \"true\" ?\n                                                            <a href=\"/staff/transaction\" className=\"btn btn-tool btn-lg\">\n                                                                <i className=\"fas fa-arrow-left\"/>\n                                                            </a>:\n                                                                <a href=\"/transaction\" className=\"btn btn-tool btn-lg\">\n                                                                    <i className=\"fas fa-arrow-left\"/>\n                                                                </a>}\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"card-body table-responsive p-md-5\">\n\n                                                        <TableScrollbar rows={10}>\n                                                        <table className=\"table table-borderless table-valign-middle\">\n\n                                                            <tbody>\n                                                            <Row style={{width:\"100%\"}}>\n                                                                <Col style={{width:\"20%\"}}>\n                                                                    <tr>\n                                                                        <td style={{fontWeight:\"bold\", width:\"50%\"}}>Full Name</td>\n                                                                        <td>{data?.transaction?.customer?.name}</td>\n                                                                    </tr>\n                                                                    <tr>\n                                                                        <td style={{fontWeight:\"bold\"}}>Number Identity</td>\n                                                                        <td>{data?.transaction?.customer?.idNumber}</td>\n                                                                    </tr>\n                                                                    <tr>\n                                                                        <td style={{fontWeight:\"bold\"}}>Email</td>\n                                                                        <td>{data?.transaction?.customer?.email}</td>\n                                                                    </tr>\n                                                                    <tr>\n                                                                        <td style={{fontWeight:\"bold\"}}>Address</td>\n                                                                        <td>{data?.transaction?.customer?.address}</td>\n                                                                    </tr>\n                                                                    <tr>\n                                                                        <td style={{fontWeight:\"bold\"}}>Submitter</td>\n                                                                        <td>{data?.transaction?.customer?.submitter}</td>\n                                                                    </tr>\n                                                                    <tr>\n                                                                        <td style={{fontWeight:\"bold\"}}>Employee Type</td>\n                                                                        <td>{data?.transaction?.customer?.employeeType}</td>\n                                                                    </tr>\n                                                                    {data?.transaction?.customer?.employeeType == \"CONTRACT\"\n                                                                    &&\n                                                                    <>\n                                                                        <tr>\n                                                                            <td style={{fontWeight:\"bold\"}}>Contract Duration</td>\n                                                                            <td>{data?.transaction?.customer?.contractLength} month</td>\n                                                                        </tr>\n                                                                        <tr>\n                                                                            <td style={{fontWeight:\"bold\"}}>Contract Start</td>\n                                                                            <td>{data?.transaction?.customer?.contractStart}</td>\n                                                                        </tr>\n                                                                        <tr>\n                                                                            <td style={{fontWeight:\"bold\"}}>Contract End</td>\n                                                                            <td>{data?.transaction?.customer?.contractEnd}</td>\n                                                                        </tr>\n                                                                    </>}\n                                                                </Col>\n                                                                <Col>\n                                                                    <tr>\n                                                                        <td style={{fontWeight:\"bold\", width:\"50%\"}}>Income</td>\n                                                                        <td><NumberFormat value={data?.transaction?.income}\n                                                                            displayType={'text'}\n                                                                            thousandSeparator={true}\n                                                                            prefix={'Rp '}/></td>\n                                                                    </tr>\n\n                                                                    <tr>\n                                                                        <td style={{fontWeight:\"bold\"}}>Outcome</td>\n                                                                        <td><NumberFormat value={data?.transaction?.outcome}\n                                                                                          displayType={'text'}\n                                                                                          thousandSeparator={true}\n                                                                                          prefix={'Rp '}/></td>\n                                                                    </tr>\n                                                                    <tr>\n                                                                        <td style={{fontWeight:\"bold\"}}>Loan Amount</td>\n                                                                        <td><NumberFormat value={data?.transaction?.loan}\n                                                                                          displayType={'text'}\n                                                                                          thousandSeparator={true}\n                                                                                          prefix={'Rp '}/></td>\n                                                                    </tr>\n                                                                    <tr>\n                                                                        <td style={{fontWeight:\"bold\"}}>Tenor</td>\n                                                                        <td>{data?.transaction?.tenor} month</td>\n                                                                    </tr>\n                                                                    <tr>\n                                                                        <td style={{fontWeight:\"bold\"}}>Interest Rate</td>\n                                                                        <td>{data?.transaction?.interestRate} %</td>\n                                                                    </tr>\n                                                                </Col>\n                                                                <Col>\n                                                                    <tr>\n                                                                        <td style={{fontWeight:\"bold\", width:\"50%\"}}>Principal</td>\n                                                                        <td><NumberFormat value={data?.transaction?.mainLoan}\n                                                                                          displayType={'text'}\n                                                                                          thousandSeparator={true}\n                                                                                          prefix={'Rp '}/></td>\n                                                                    </tr>\n                                                                    <tr>\n                                                                        <td style={{fontWeight:\"bold\"}}>Interest</td>\n                                                                        <td><NumberFormat value={data?.transaction?.interest}\n                                                                                          displayType={'text'}\n                                                                                          thousandSeparator={true}\n                                                                                          prefix={'Rp '}/></td>\n                                                                    </tr>\n                                                                    <tr>\n                                                                        <td style={{fontWeight:\"bold\"}}>Installment</td>\n                                                                        <td><NumberFormat value={data?.transaction?.installment}\n                                                                                          displayType={'text'}\n                                                                                          thousandSeparator={true}\n                                                                                          prefix={'Rp '}/> /month</td>\n                                                                    </tr>\n                                                                    <tr>\n                                                                        <td style={{fontWeight:\"bold\"}}>Total Installment</td>\n                                                                        <td><NumberFormat value={data?.transaction?.installmentTotal}\n                                                                                          displayType={'text'}\n                                                                                          thousandSeparator={true}\n                                                                                          prefix={'Rp '}/></td>\n                                                                    </tr>\n                                                                    <tr>\n                                                                        <td style={{fontWeight:\"bold\"}}>Loan Purpose</td>\n                                                                        <td>{data?.transaction?.needType.type}</td>\n                                                                    </tr>\n\n                                                                    {localStorage.getItem(\"approveTransaction\") == \"true\" &&\n                                                                    <>\n                                                                        <tr>\n                                                                            <td style={{fontWeight:\"bold\"}}>Credit Ratio</td>\n                                                                            <td>{data?.transaction?.creditRatio} %</td>\n                                                                        </tr>\n                                                                        <tr>\n                                                                            <td style={{fontWeight:\"bold\"}}>Finance Criteria</td>\n                                                                            <td>{data?.transaction?.financeCriteria ?\n                                                                                \"PASS\" : \"NOT PASS\"\n                                                                            }</td>\n                                                                        </tr>\n                                                                        <tr>\n                                                                            <td style={{fontWeight:\"bold\"}}>Employee Criteria</td>\n                                                                            <td>{data?.transaction?.employeeCriteria ?\n                                                                                \"PASS\" : \"NOT PASS\"\n                                                                            }</td>\n                                                                        </tr>\n                                                                    </>}\n                                                                    <tr>\n                                                                        <td style={{fontWeight:\"bold\"}}>Notes</td>\n                                                                        <td>{data?.transaction?.notes}</td>\n                                                                    </tr>\n\n                                                                </Col>\n\n                                                            </Row>\n\n                                                            {localStorage.getItem(\"approveTransaction\") == \"true\" &&\n                                                            <tr>\n                                                                <div className=\"buttonForm\">\n                                                                <td>\n                                                                    <Button style={{background: \"#e42256\"}}\n                                                                            onClick={handleApproval}>\n                                                                        <FontAwesomeIcon icon={faCheckCircle}/>\n                                                                        Approve\n                                                                    </Button>\n                                                                </td>\n                                                                <td>\n                                                                    <Button style={{background: \"#e42256\"}}\n                                                                            onClick={handleReject}>\n                                                                        <FontAwesomeIcon icon={faTimesCircle}/>\n                                                                        Reject\n                                                                    </Button>\n                                                                </td>\n                                                                </div>\n                                                            </tr>}\n\n                                                            </tbody>\n                                                        </table>\n                                                        </TableScrollbar>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <Footer/>\n                        </div>\n                    </>\n                    :\n                    <div>\n                        <Error/>\n                    </div>\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isLoading: state.findApprovalByIdReducer.isLoading || state.saveApprovalReducer.isLoading || state.findApprovalSubmitterByIdReducer.isLoading,\n        transaction: state.findApprovalByIdReducer.data,\n        savedApprove: state.saveApprovalReducer.data,\n        transactionSubmitter: state.findApprovalSubmitterByIdReducer.data,\n        error: state.findApprovalByIdReducer.error || state.saveApprovalReducer.error || state.findApprovalSubmitterByIdReducer.error,\n    }\n}\n\nconst mapDispatchToProps = {\n    findByIdDispatch: findByIdApprovalAction, findByIdApprovalSubmitterAction,\n    saveApprovalAction\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionDetail)","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\customer\\DetailCustomer.js",["415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430"],"import React, {useEffect, useState} from \"react\";\nimport {useParams} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport {findCustomerByIdAction} from \"../../actions/customerAction\";\nimport Header from \"../../components/dashboard/Header\";\nimport Menu from \"../../components/dashboard/Menu\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faHandshake, faIdCard, faMailBulk, faUser} from \"@fortawesome/free-solid-svg-icons\";\nimport Footer from \"../../components/dashboard/Footer\";\nimport Error from \"../Error\";\nimport TableScrollbar from \"react-table-scrollbar\";\n\nfunction CustomerDetail({isLoading, customer, findCustomerByIdAction}) {\n\n    let {id} = useParams()\n    const {data, setData} = useState({\n        name : \"\"\n    })\n    useEffect(() => {\n        findCustomerByIdAction(id)\n    }, [findCustomerByIdAction])\n\n    useEffect(() => {\n        if (id > 0)\n            findCustomerByIdAction(id)\n    }, [findCustomerByIdAction])\n\n    return (\n        <div>\n            {\n                localStorage.getItem(\"inputCustomer\") == \"true\" || localStorage.getItem(\"readAllCustomer\") == \"true\" ?\n                    <>\n                        <div>\n                            <Header/>\n                            <Menu/>\n                            <div className=\"content-wrapper\">\n                                <div className=\"content-header\">\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row mb-2\" style={{marginTop: '30px', display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n                                            <div className=\"col-sm-11\">\n                                                <h1 className=\"m-0 text-dark\">Detail Customer</h1>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"content\">\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row\" style={{ display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n                                            <div className=\"col-lg-11\">\n                                                    <div className=\"card\">\n                                                        <div className=\"card-header border-0\">\n                                                            {/*<h3 className=\"card-title\">Detail Customer</h3>*/}\n                                                            <div className=\"card-tools\">\n                                                                {/*<a href=\"/customer/form\" className=\"btn btn-tool btn-sm\">*/}\n                                                                {/*    <i className=\"fas fa-pencil-alt\" />*/}\n                                                                {/*</a>*/}\n                                                                {localStorage.getItem(\"readAllCustomer\") == \"true\" ?\n                                                                    <a href=\"/customer\"\n                                                                       className=\"btn btn-tool btn-sm\">\n                                                                        <i className=\"fas fa-arrow-left\"/>\n                                                                    </a>\n                                                                    :\n                                                                    <a href=\"/staff/customer\"\n                                                                       className=\"btn btn-tool btn-sm\">\n                                                                        <i className=\"fas fa-arrow-left\"/>\n                                                                    </a>\n                                                                }\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"card-body table-responsive p-md-5\">\n                                                            <TableScrollbar rows={10}>\n\n                                                            <table className=\"table table-borderless table-valign-middle\">\n                                                                <tbody style={{textAlign: \"left\"}}>\n                                                                <tr>\n                                                                    <td style={{fontWeight:\"bold\", width:\"20%\"}}>Full Name</td>\n                                                                    <td>{customer.name}</td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <td style={{fontWeight:\"bold\"}}>Address</td>\n                                                                    <td>{customer.address}</td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <td style={{fontWeight:\"bold\"}}>Email</td>\n                                                                    <td>{customer.email}</td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <td style={{fontWeight:\"bold\"}}>Number Identity</td>\n                                                                    <td>{customer.idNumber}</td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <td style={{fontWeight:\"bold\"}}>Employee Type</td>\n                                                                    <td>{customer.employeeType}</td>\n                                                                </tr>\n                                                                {customer.employeeType == \"CONTRACT\"\n                                                                &&\n                                                                    <>\n                                                                        <tr>\n                                                                            <td style={{fontWeight:\"bold\"}}>Contract Duration</td>\n                                                                            <td>{customer.contractLength}</td>\n                                                                        </tr>\n                                                                        <tr>\n                                                                            <td style={{fontWeight:\"bold\"}}>Contract Start</td>\n                                                                            <td>{customer.contractStart}</td>\n                                                                        </tr>\n                                                                        <tr>\n                                                                            <td style={{fontWeight:\"bold\"}}>Contract End</td>\n                                                                            <td>{customer.contractEnd}</td>\n                                                                        </tr>\n                                                                    </>\n                                                                }\n                                                                        <tr>\n                                                                            <td style={{fontWeight:\"bold\"}}>ID Card Photo</td>\n                                                                            <td><img src={customer.idPhoto} width={100}/></td>\n                                                                        </tr>\n                                                                        <tr>\n                                                                            <td style={{fontWeight:\"bold\"}}>Profile Photo</td>\n                                                                            <td><img src={customer.profilePhoto} width={100}/></td>\n                                                                        </tr>\n                                                                </tbody>\n                                                            </table>\n                                                            </TableScrollbar>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <Footer/>\n\n                        </div>\n                    // </>\n                    :\n                    <div>\n                        <Error/>\n                    </div>\n            }\n        </div>\n\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isLoading: state.findCustomerByIdReducer.loading || state.saveCustomerReducer.loading,\n        customer: state.findCustomerByIdReducer.data || [],\n    }\n}\n\n//findById ambil dari action\nconst mapDispatchToProps = {findCustomerByIdAction}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerDetail)","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\report\\ReportList.js",["431","432","433","434","435","436","437","438"],"import Containers from '../../components/Containers/Container'\nimport React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport Header from \"../../components/dashboard/Header\";\nimport Menu from \"../../components/dashboard/Menu\";\nimport Footer from \"../../components/dashboard/Footer\";\nimport {findAllReportAction} from \"../../actions/reportAction\";\nimport ReportRow from \"./ReportRow\";\nimport TableScrollbar from 'react-table-scrollbar';\nimport Error from \"../Error\";\nimport {Button, ButtonGroup, Spinner} from \"reactstrap\";\nimport {PaginationButton} from \"../../components/Buttons\";\nimport {findReportByApprovedAction, findReportByRejectedAction} from \"../../actions/approvalAction\";\n\nfunction ReportList({\n    isLoading, reports, error,\n                        findAllReportAction,  size, total,\n                        currentPage, reportApproved, reportRejected,\n                        findReportByRejectedAction, findReportByApprovedAction\n                    }) {\n\n    const [report, setReport] = useState([])\n    const [pageParam, setPageParam] = useState(0)\n    const [sizeParam, setSizeParam] = useState(10)\n\n    const totalPage = Math.ceil(total/size)\n\n    useEffect(() => {\n        onReload()\n    }, [])\n\n    useEffect(() => {\n        onReload()\n    }, [pageParam, sizeParam])\n\n    useEffect(() => {\n        setReport(reports)\n    }, [reports])\n\n    useEffect(() => {\n        setReport(reportApproved)\n    }, [reportApproved])\n\n    useEffect(() => {\n        setReport(reportRejected)\n    }, [reportRejected])\n\n    const onReload = () => {\n        findAllReportAction({page: pageParam, size: sizeParam});\n    }\n\n    const handleLimit = (limit) => {\n        setSizeParam(limit)\n        setPageParam(0)\n    }\n\n    const handleApproved = () =>{\n        findReportByApprovedAction({page: pageParam, size: sizeParam})\n    }\n    const handleAll = () =>{\n        onReload()\n    }\n    const handleRejected = () =>{\n        findReportByRejectedAction({page: pageParam, size: sizeParam})\n    }\n\n\n    return (\n        <div>\n            {\n                localStorage.getItem(\"readAllReport\") == \"true\" ?\n                    <>\n                        <Containers error={error}>\n                            <Header/>\n                            <Menu/>\n                            <div className=\"content-wrapper\">\n                                <div className=\"content-header\">\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row mb-2\" style={{marginTop: '30px', display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n                                            <div className=\"col-sm-11\">\n                                                <h1 className=\"m-0 text-dark\">All Report</h1>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"content\">\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row\" style={{display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n                                            <div className=\"col-lg-11\">\n\n                                                <div className=\"card\">\n                                                    <div className=\"card-header border-0\" >\n                                                        <div className=\"card-tools\" >\n                                                            <a href=\"http://localhost:8085/report/download\" className=\"btn btn-tool btn-lg\" >\n                                                                <i className=\"fas fa-download\"/>\n                                                            </a>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"card-body table-responsive p-0\">\n                                                        <TableScrollbar rows={9}>\n                                                        <table className=\"table table-striped table-bordered table-align-middle table-head-fixed text-nowrap\">\n                                                            <thead style={{background:\"#FCE051\"}}>\n                                                            <tr >\n                                                                <th colSpan=\"6\" style={{textAlign: \"center\", backgroundColor:\"#F6FDFE\"}}> Customer Data</th>\n                                                                <th colSpan=\"9\" style={{textAlign: \"center\", backgroundColor:\"#FFFFFF\"}}>Transaction</th>\n                                                                <th colSpan=\"6\" style={{textAlign: \"center\", backgroundColor:\"#F6FDFE\"}}>Approved</th>\n                                                            </tr>\n                                                            <tr style={{textAlign: \"center\"}}>\n                                                                <th>No</th>\n                                                                <th>Full Name</th>\n                                                                <th>Email</th>\n                                                                <th>Number Identity</th>\n                                                                <th>Address</th>\n                                                                <th>Employee Type</th>\n                                                                <th>Income</th>\n                                                                <th>Outcome</th>\n                                                                <th>Loan Amount</th>\n                                                                <th>Interest Rate</th>\n                                                                <th>Tenor</th>\n                                                                <th>Principal</th>\n                                                                <th>Interest</th>\n                                                                <th>Installment</th>\n                                                                <th>Total Installment</th>\n                                                                <th>Credit Ratio</th>\n                                                                <th>Finance Criteria</th>\n                                                                <th>Employee Criteria</th>\n                                                                <th>Status</th>\n                                                                <th>Submitted Date</th>\n                                                                <th>Approved Date</th>\n                                                            </tr>\n                                                            </thead>\n\n                                                            <tbody>\n                                                            {\n                                                                ! isLoading ?\n                                                                    report?.map((e,i) => {\n                                                                        return (\n                                                                            <ReportRow key={i} data={e}\n                                                                            number={(pageParam * sizeParam) + 1 + i}/>\n                                                                        )\n                                                                    }) :\n                                                                    // <tr>\n                                                                        <div className=\"spinner\">\n                                                                            <Spinner style={{ width: '5rem', height: '5rem', color:\"#e42256\" }} />{' '}\n                                                                        </div>\n                                                                    // </tr>\n\n                                                            }\n                                                            </tbody>\n\n                                                        </table>\n                                                        </TableScrollbar>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <br/>\n                                        <PaginationButton\n                                            currentPage = {currentPage}\n                                            setPage={setPageParam}\n                                            totalPage={totalPage}\n                                            handleLimit={handleLimit}\n                                            size={sizeParam}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <Footer/>\n                        </Containers>\n\n                    </>\n                    :\n                    <div>\n                       <Error/>\n                    </div>\n            }\n        </div>\n\n    )\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        reports: state.findAllReportReducer.data || [],\n        reportApproved: state.findReportByApprovedReducer.data,\n        reportRejected: state.findReportByRejectedReducer.data,\n        error: state.findAllReportReducer.error,\n        isLoading: state.findAllReportReducer.isLoading,\n        size: state.findAllReportReducer.pagination.size,\n        total: state.findAllReportReducer.pagination.total,\n        currentPage: state.findAllReportReducer.pagination.page\n    }\n}\n\nconst mapDispatchToProps = {\n    findAllReportAction,\n    findReportByRejectedAction,\n    findReportByApprovedAction\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReportList);","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\reasonUse\\ReasonUse.js",["439","440","441"],"import React, {useEffect} from \"react\";\nimport Header from \"../../components/dashboard/Header\";\nimport Menu from \"../../components/dashboard/Menu\";\nimport {findAllNeedAction, removeByIdNeedAction} from \"../../actions/needAction\";\nimport {connect} from \"react-redux\";\nimport Containers from \"../../components/Containers/Container\";\nimport ReasonRow from \"./ReasonRow\";\nimport Footer from \"../../components/dashboard/Footer\";\nimport Error from \"../Error\";\nimport swal from \"sweetalert\";\nimport {Link} from \"react-router-dom\";\nimport {Spinner} from \"reactstrap\";\nimport TableScrollbar from \"react-table-scrollbar\";\n\n\nconst ReasonUse = ({\n                       findAllNeedAction,\n                       needs,\n                       error,\n                       isLoading,\n                       removeByIdNeedAction,\n                       isRemoved\n\n                   }) => {\n\n    const onReload = () => {\n        findAllNeedAction(\n        );\n    }\n\n    const onDelete = (id) => {\n        swal({\n            title: \"Are you sure to delete this data?\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n        })\n            .then(willDelete => {\n                if (willDelete) {\n                    removeByIdNeedAction(id);\n                    swal(\"Successful deleted\", {\n                        icon: \"success\"\n                    });\n                } else {\n                    swal(\"Failed to delete\")\n                }\n            });\n    };\n\n    useEffect(onReload, [findAllNeedAction,\n        // pageParam, sizeParam\n    ])\n\n    useEffect(() => {\n        onReload()\n    }, [findAllNeedAction])\n\n    useEffect(() => {\n        if (isRemoved) {\n            onReload()\n        }\n    }, [isRemoved])\n\n    return (\n        <div>\n            {\n                localStorage.getItem(\"master\") == \"true\" ?\n                    <>\n                        <Containers error={error}>\n                            <Header/>\n                            <Menu/>\n                            <div className=\"content-wrapper\">\n                                <div className=\"content-header\">\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row mb-2\" style={{marginTop: '30px', display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n                                            <div className=\"col-sm-11\">\n                                                <h1 className=\"m-0 text-dark\">Loan Purpose</h1>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"content\">\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row\" style={{display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n                                            <div className=\"col-lg-11\">\n\n                                                <div className=\"card\">\n                                                    <div className=\"card-header border-0\">\n                                                        {/*<h3 className=\"card-title\">List Customer</h3>*/}\n                                                        <div className=\"card-tools\">\n                                                            {/*<a href=\"#\" className=\"btn btn-tool btn-sm\">*/}\n                                                            {/*    <i className=\"fas fa-download\"/>*/}\n                                                            {/*</a>*/}\n                                                            <Link to=\"/need/form\" className=\"btn btn-tool btn-lg\">\n                                                                <i className=\"fas fa-plus-circle\"/>\n                                                            </Link>\n                                                        </div>\n                                                    </div>\n\n\n                                                    <div className=\"card-body table-responsive p-0\">\n\n                                                        <TableScrollbar rows={12}>\n                                                        <table className=\"table table-striped table-valign-middle table-bordered\">\n                                                            <thead style={{textAlign: \"left\", background:\"#FCE051\"}}>\n                                                            <tr>\n                                                                <th>No</th>\n                                                                <th>Type</th>\n                                                                <th>Action</th>\n                                                            </tr>\n                                                            </thead>\n                                                            <tbody style={{textAlign: \"left\"}}>\n                                                            {\n                                                                !isLoading ?\n                                                                    needs?.list?.map((e, i) => {\n                                                                        return (\n                                                                            <ReasonRow onDeleted={() => onDelete(e.id)}\n                                                                                       key={i} data={e}\n                                                                                       number={(needs.page * needs.size) + 1 + i}/>\n                                                                        )\n                                                                    }) :\n                                                                    <div className=\"spinner\">\n                                                                        <Spinner style={{ width: '5rem', height: '5rem', color:\"#e42256\" }} />{' '}\n                                                                    </div>\n                                                            }\n                                                            </tbody>\n                                                        </table>\n                                                        </TableScrollbar>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            {/*<Footer/>*/}\n\n                        </Containers>\n                        <Footer/>\n                    </>\n                    :\n                    <div>\n                        <Error/>\n                    </div>\n            }\n\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        needs: state.findAllNeedReducer.data,\n        error: state.findAllNeedReducer.error || state.removeNeedTypeByIdReducer.error,\n        isLoading: state.findAllNeedReducer.isLoading,\n        isRemoved: state.removeNeedTypeByIdReducer\n    }\n}\n\nconst mapDispatchToProps = {\n    findAllNeedAction,\n    removeByIdNeedAction\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReasonUse)","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\reasonUse\\ReasonForm.js",["442","443","444","445"],"import React, {useState, useEffect} from 'react'\nimport {useHistory, useParams} from 'react-router-dom'\nimport {Redirect} from \"react-router-dom\"\nimport {connect} from \"react-redux\"\nimport {Button, Form, FormGroup, Input, Label, Col, Spinner} from \"reactstrap\";\nimport {findAllNeedAction, findNeedByIdAction, saveNeedAction, updateNeedAction} from \"../../actions/needAction\";\nimport Header from \"../../components/dashboard/Header\";\nimport Menu from \"../../components/dashboard/Menu\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\nimport Footer from \"../../components/dashboard/Footer\";\nimport Error from \"../Error\";\nimport swal from \"sweetalert\";\n\nconst ReasonForm = ({saveNeedAction, saveNeedType, error, isLoading, needType, findNeedByIdAction, update, updateNeedAction, findAllNeedAction, needs}) => {\n    const {id} = useParams()\n    const [redirect] = useState(false)\n    console.log(\"handlesubmit\", error)\n\n    const [needUsed, setNeedUsed] = useState([])\n\n    useEffect(() => {\n        findAllNeedAction()\n    }, [findAllNeedAction])\n\n    useEffect(() => {\n        setNeedUsed(needs.list)\n    }, [needs.list])\n\n    console.log(\"needUsed\", needUsed)\n\n    const [data, setData] = useState({})\n    const history = useHistory()\n\n    useEffect(() => {\n        if (id) {\n            findNeedByIdAction(id)\n        }\n    }, [id, findNeedByIdAction])\n\n    useEffect(() => {\n        if (id && needType) {\n            setData({...needType})\n        }\n    }, [needType])\n\n    useEffect(() => {\n        if (saveNeedType) {\n            swal(\"Add Loan Purpose Success\", \"\", \"success\")\n            history.push('/need')\n        }\n        if (error) {\n            swal(\"Sorry data already exist\", '', \"error\")\n        }\n        console.log(\"error\", error)\n    }, [saveNeedType, history, error])\n\n    const handleChange = (e) => {\n        let name = e.target.name\n        let value = e.target.value\n        setData({...data, [name]: value.toUpperCase()})\n        console.log(\"handlechange\", data)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        let oke = true\n        needUsed.map((e,i)=>{\n            if(data.type == e.type){\n                oke = false\n            }\n        })\n        if(oke){\n            if (id) {\n                updateNeedAction(id, data)\n            } else {\n                saveNeedAction(data)\n            }\n            swal(\"Save Success!\", \"\", \"success\");\n            history.push('/need')\n        } else {\n            swal(\"Sorry loan purpose is already exist!\", \"\", \"error\")\n        }\n    }\n\n    if (redirect === true) {\n        return <Redirect to=\"/need\"/>\n    }\n\n    return (\n        <div>\n            {\n                localStorage.getItem(\"master\") == \"true\" ?\n                    <>\n                        <div>\n                            <Header/>\n                            <Menu/>\n                            <div className=\"content-wrapper\">\n                                <div className=\"content-header\">\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row mb-2\" style={{\n                                            marginTop: '30px',\n                                            display: \"flex\",\n                                            justifyContent: \"center\",\n                                            alignItems: \"center\"\n                                        }}>\n                                            <div className=\"col-sm-11\">\n                                                <h1 className=\"m-0 text-dark\">Loan Purpose</h1>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"content\">\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row\"\n                                             style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\n                                            <div className=\"col-lg-11\" style={{alignContent: \"center\"}}>\n                                                <div className=\"card\">\n                                                    <div className=\"card-body table-responsive p-md-5\">\n                                                        <div className=\"col-md-12\">\n                                                            <div className=\"form form-container\">\n                                                                {!isLoading ?\n                                                                    <Form onSubmit={(e) => handleSubmit(e)}>\n                                                                        <FormGroup row>\n                                                                            <Label htmlFor=\"type\" sm={3}\n                                                                                   style={{textAlign: \"left\"}}>Loan Purpose</Label>\n                                                                            <Col sm={12}>\n                                                                                <Input\n                                                                                    required\n                                                                                    onChange={handleChange}\n                                                                                    value={data?.type || ''}\n                                                                                    type=\"text\"\n                                                                                    name=\"type\"\n                                                                                    placeholder=\"loan purpose\"/>\n                                                                            </Col>\n                                                                        </FormGroup>\n                                                                        <FormGroup check >\n                                                                            {/*<Col sm={{size: 10, offset: 2}}>*/}\n                                                                            <div className=\"buttonForm\">\n                                                                                <Button style={{background: \"#e42256\", marginRight:\"0.2vw\"}}>\n                                                                                    <FontAwesomeIcon icon={faSave} style={{marginRight:\"0.5vw\"}}/>\n                                                                                    Submit\n                                                                                </Button>\n                                                                                <Button href=\"/need\"\n                                                                                        style={{background: \"#e42256\"}}>\n                                                                                    <FontAwesomeIcon\n                                                                                        icon={faArrowLeft} style={{marginRight:\"0.5vw\"}}/>\n                                                                                    Cancel\n                                                                                </Button>\n                                                                            </div>\n                                                                            {/*</Col>*/}\n                                                                        </FormGroup>\n\n                                                                    </Form> :\n                                                                    <div className=\"spinner\">\n                                                                        <Spinner style={{\n                                                                            width: '5rem',\n                                                                            height: '5rem',\n                                                                            color: \"#e42256\"\n                                                                        }}/>{' '}\n                                                                    </div>\n                                                                }\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <Footer/>\n                    </>\n                    :\n                    <div>\n                        <Error/>\n                    </div>\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        saveNeedType: state.saveNeedReducer.data,\n        error: state.saveNeedReducer.error,\n        isLoading: state.saveNeedReducer.isLoading || state.findNeedTypeByIdReducer.isLoading,\n        needType: state.findNeedTypeByIdReducer.data,\n        update: state.updateNeedTypeReducer.data,\n        needs: state.findAllNeedReducer.data || []\n    }\n}\n\nconst mapDispatchToProps = {\n    saveNeedAction,\n    updateNeedAction,\n    findNeedByIdAction,\n    findAllNeedAction\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReasonForm)","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\transaction\\listTransactionByStaff\\ListTransactionByStaff.js",["446","447","448","449","450","451","452","453"],"import {ButtonGroup, Button, Container, Table, Spinner} from \"reactstrap\";\nimport Containers from '../../../components/Containers/Container'\nimport React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {findAllTransactionAction} from \"../../../actions/transactionAction\";\nimport Header from \"../../../components/dashboard/Header\";\nimport Menu from \"../../../components/dashboard/Menu\";\nimport TableScrollbar from 'react-table-scrollbar';\nimport Row from \"../../transaction/listTransactionByStaff/Row\";\nimport {PaginationButton} from \"../../../components/Buttons\";\nimport Error from \"../../Error\";\nimport Footer from \"../../../components/dashboard/Footer\";\n\nfunction TransactionListByStaff({\n                             isLoading,\n                             transactions,\n                             error,\n                             findAllTransactionAction,\n    size, total, currentPage\n                         }) {\n\n    const [transaction, setTransaction] = useState([])\n    const [pageParam, setPageParam] = useState(0)\n    const [sizeParam, setSizeParam] = useState(50)\n\n    const totalPage = Math.ceil(total/size)\n\n    useEffect(() => {\n        onReload()\n    }, [pageParam, sizeParam])\n\n    console.log(\"SIZE\", sizeParam)\n\n    useEffect(() => {\n        onReload()\n    }, [])\n\n    useEffect(() => {\n        if(transaction) {\n            setTransaction(transactions)\n        }\n    }, [transactions])\n\n    const onReload = () => {\n        findAllTransactionAction(\n            {page: pageParam, size: sizeParam}\n        );\n    };\n\n    const handleLimit = (limit) => {\n        setSizeParam(limit)\n        setPageParam(0)\n    }\n\n    useEffect(onReload, [findAllTransactionAction, pageParam, sizeParam])\n\n\n    return (\n        <div>\n            {\n                localStorage.getItem(\"inputTransaction\")  == \"true\" ?\n                    <>\n                        <Containers error={error}>\n                            <Header/>\n                            <Menu/>\n                            <div className=\"content-wrapper\">\n                                <div className=\"content-header\">\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row mb-2\" style={{marginTop: '30px', display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n                                            <div className=\"col-sm-11\">\n                                                <h1 className=\"m-0 text-dark\">List Transaction</h1>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"content\">\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row\" style={{display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n                                            <div className=\"col-lg-11\">\n\n                                                <div className=\"card\">\n                                                    <div className=\"card-header border-0\">\n                                                        <div className=\"card-tools\">\n\n                                                        </div>\n                                                    </div>\n\n                                                    <div className=\"card-body table-responsive p-0\">\n                                                        <TableScrollbar rows={11}>\n                                                            <table className=\"table table-striped table-bordered table-align-middle\">\n                                                                <thead\n                                                                    style={{textAlign: \"left\", background: \"#FCE051\"}}>\n                                                                <tr>\n                                                                    <th>No</th>\n                                                                    <th>Name</th>\n                                                                    <th>Employee Type</th>\n                                                                    <th>Loan Amount</th>\n                                                                    <th>Tenor</th>\n                                                                    <th>Interest Rate</th>\n                                                                    <th>Pending Approval</th>\n                                                                </tr>\n                                                                </thead>\n                                                                <tbody style={{textAlign: \"left\"}}>\n                                                                {\n                                                                    !isLoading ?\n                                                                        transactions.map((e, i) => {\n                                                                            return (\n                                                                                <Row key={i} data={e}\n                                                                                     number={(pageParam * sizeParam) + 1 + i}/>\n                                                                            )\n                                                                        }) :\n                                                                        <tr>\n                                                                            <div className=\"spinner\">\n                                                                                <Spinner style={{ width: '5rem', height: '5rem', color:\"#e42256\" }} />{' '}\n                                                                            </div>\n                                                                        </tr>\n                                                                }\n                                                                </tbody>\n                                                            </table>\n                                                        </TableScrollbar>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <br/>\n                                        <PaginationButton\n                                            currentPage = {currentPage}\n                                            setPage={setPageParam}\n                                            totalPage={totalPage}\n                                            handleLimit={handleLimit}\n                                            size={sizeParam}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <Footer/>\n\n                        </Containers>\n                    </>\n                    :\n                    <div>\n                        <Error/>\n                    </div>\n            }\n        </div>\n\n    )\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        error: state.findAllTransactionByStaff.error,\n        transactions: state.findAllTransactionByStaff.data || [],\n        isLoading: state.findAllTransactionByStaff.isLoading,\n        size: state.findAllTransactionByStaff.pagination.size,\n        total: state.findAllTransactionByStaff.pagination.total,\n        currentPage: state.findAllTransactionByStaff.pagination.page\n\n    }\n}\n\nconst mapDispatchToProps = {\n    findAllTransactionAction\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionListByStaff);","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\report\\reportByStaff\\ListReportByStaff.js",["454","455","456","457","458","459","460"],"import Containers from '../../../components/Containers/Container'\nimport React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\n\nimport TableScrollbar from 'react-table-scrollbar';\nimport Header from \"../../../components/dashboard/Header\";\nimport Menu from \"../../../components/dashboard/Menu\";\nimport Row from \"./Row\";\nimport Footer from \"../../../components/dashboard/Footer\";\nimport {findAllReportAction} from \"../../../actions/reportAction\";\nimport Error from \"../../Error\";\nimport {Table, Button, ButtonGroup, Spinner} from \"reactstrap\";\nimport {PaginationButton} from \"../../../components/Buttons\";\n\nfunction ReportList({\n                        isLoading, reports, error, findAllReportAction, size, total, currentPage\n                    }) {\n\n    const [report, setReport] = useState([])\n\n    const [pageParam, setPageParam] = useState(0)\n    const [sizeParam, setSizeParam] = useState(10)\n\n    const totalPage = Math.ceil(total/size)\n\n    useEffect(() => {\n        onReload()\n    }, [pageParam, sizeParam])\n\n    useEffect(() => {\n        onReload()\n    }, [])\n\n    useEffect(() => {\n        if(report) {\n            setReport(reports)\n        }\n    }, [reports])\n\n    const onReload = () => {\n        findAllReportAction({page: pageParam, size: sizeParam});\n        console.log(\"ini data\", reports)\n    }\n\n    const handleLimit = (limit) => {\n        setSizeParam(limit)\n        setPageParam(0)\n    }\n\n    useEffect(onReload, [findAllReportAction, pageParam, sizeParam])\n\n    return (\n        <div>\n            {\n                localStorage.getItem(\"readAllReportByTransaction\") == \"true\" ?\n                    <>\n                        <Containers error={error}>\n                            <Header/>\n                            <Menu/>\n                            <div className=\"content-wrapper\">\n                                <div className=\"content-header\">\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row mb-2\" style={{marginTop: '30px', display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n                                            <div className=\"col-sm-11\">\n                                                <h1 className=\"m-0 text-dark\">Report</h1>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"content\">\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row\" style={{marginTop: '30px', display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n                                            <div className=\"col-lg-11\">\n\n                                                <div className=\"card\">\n                                                    <div className=\"card-header border-0\">\n                                                        <div className=\"card-tools\">\n                                                            {/*<a href=\"#\" className=\"btn btn-tool btn-sm\">*/}\n                                                            {/*    <i className=\"fas fa-download\"/>*/}\n                                                            {/*</a>*/}\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"card-body table-responsive p-0\">\n\n                                                        <TableScrollbar rows={10}>\n                                                            <Table className=\"table table-striped table-bordered table-align-middle table-head-fixed text-nowrap\">\n                                                                <thead style={{background:\"#FCE051\"}}>\n                                                                <tr >\n                                                                    <th colSpan=\"6\" style={{textAlign: \"center\"}}> Customer Data</th>\n                                                                    <th colSpan=\"11\" style={{textAlign: \"center\"}}>Transaction</th>\n                                                                    <th colSpan=\"4\" style={{textAlign: \"center\"}}>Approved</th>\n                                                                </tr>\n                                                                <tr>\n                                                                    <th>No</th>\n                                                                    <th>Name</th>\n                                                                    <th>Email</th>\n                                                                    <th>Id Card</th>\n                                                                    <th>Address</th>\n                                                                    <th>Employee Type</th>\n                                                                    <th>Income</th>\n                                                                    <th>Outcome</th>\n                                                                    <th>Loan Amount</th>\n                                                                    <th>Interest Rate</th>\n                                                                    <th>Tenor</th>\n                                                                    <th>Principal</th>\n                                                                    <th>Interest</th>\n                                                                    <th>Installment</th>\n                                                                    <th>Total Installment</th>\n                                                                    <th>Loan Purpose</th>\n                                                                    <th>Submitter</th>\n                                                                    <th>Status</th>\n                                                                    <th>Submitted Date</th>\n                                                                    <th>Approved Date</th>\n                                                                </tr>\n                                                                </thead>\n\n                                                                <tbody>\n                                                                {\n                                                                    ! isLoading ?\n                                                                        report.map((e,i) => {\n                                                                            return (\n                                                                                <Row key={i} data={e}\n                                                                                           number={(pageParam * sizeParam) + 1 + i}/>\n                                                                            )\n                                                                        }) :\n                                                                        <div className=\"spinner\">\n                                                                            <Spinner style={{ width: '5rem', height: '5rem', color:\"#e42256\" }} />{' '}\n                                                                        </div>\n\n                                                                }\n                                                                </tbody>\n\n                                                            </Table>\n                                                        </TableScrollbar>\n\n                                                    </div>\n\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <PaginationButton\n                                            currentPage = {currentPage}\n                                            setPage={setPageParam}\n                                            totalPage={totalPage}\n                                            handleLimit={handleLimit}\n                                            size={sizeParam}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <Footer/>\n                        </Containers>\n\n                    </>\n                    :\n                    <div>\n                        <Error/>\n                    </div>\n            }\n        </div>\n\n    )\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        reports: state.findAllReportByStaff.data || [],\n        error: state.findAllReportByStaff.error,\n        isLoading: state.findAllReportByStaff.isLoading,\n        size: state.findAllReportByStaff.pagination.size,\n        total: state.findAllReportByStaff.pagination.total,\n        currentPage: state.findAllReportByStaff.pagination.page\n    }\n}\n\nconst mapDispatchToProps = {\n    findAllReportAction\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReportList);","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\profile\\EditPassword.js",["461","462","463","464","465","466","467","468","469","470","471","472"],"import React, {useEffect, useState} from 'react';\nimport {Link, Redirect, useHistory, useParams} from 'react-router-dom'\nimport gambar from \"../../assets/images/undraw_authentication_fsn5.svg\"\nimport {\n    faArrowLeft,\n    faKey, faLock, faLockOpen, faSave,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport \"../account/login.css\"\nimport {Button, Col, Form, Input, Label, Row, Spinner} from \"reactstrap\";\nimport Header from \"../../components/dashboard/Header\";\nimport Menu from \"../../components/dashboard/Menu\";\nimport Footer from \"../../components/dashboard/Footer\";\nimport {connect} from \"react-redux\";\nimport {changePasswordAction} from \"../../actions/userAction\";\nimport swal from \"sweetalert\";\nimport Error from \"../Error\";\n\nconst EditPassword = ({isLoading, changePasswordAction, changePassword, error}) => {\n\n    const [oldPassword, setOldPassword] = useState('')\n    const [newPassword, setNewPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n\n    const [oldPasswordError, setOldPasswordError] = useState('')\n    const [newPasswordError, setNewPasswordError] = useState('')\n    const [confirmPasswordError, setConfirmPasswordError] = useState('')\n\n    const handleSubmit = () => {\n        const isValid = validate();\n        if(isValid) {\n            const data = {\n                password: newPassword,\n                oldPassword: oldPassword\n            }\n            changePasswordAction(data)\n        }\n    }\n\n    useEffect(() => {\n        if (changePassword) {\n            swal(\"Success!\", \"\", \"success\");\n            setOldPassword(\"\")\n            setNewPassword(\"\")\n            setConfirmPassword(\"\")\n        }\n\n        if (error) {\n            swal(\"Error!\", \"Old Password invalid!\", \"error\");\n        }\n    }, [changePassword, error])\n\n    const validate = () => {\n        let oldPasswordError = \"\";\n        let newPasswordError = \"\";\n        let confirmPasswordError = \"\";\n\n        if (newPassword.length < 6) {\n            newPasswordError = \"Password must be more than 6 characters!\";\n        }\n\n        if (confirmPassword !== newPassword) {\n            confirmPasswordError = \"Confirm Password must match to New Password\"\n        } else if (confirmPassword.length < 6) {\n            confirmPasswordError = \"Password must be more than 6 characters!\";\n        }\n\n        if (oldPasswordError || newPasswordError || confirmPasswordError) {\n            setOldPasswordError(oldPasswordError);\n            setNewPasswordError(newPasswordError);\n            setConfirmPasswordError(confirmPasswordError)\n            swal(\"Change Password Error!\", \"\", \"error\");\n            return false;\n        }\n        return true;\n    }\n\n\n\n    return (\n        <div>\n            {\n                localStorage.getItem(\"master\") == \"false\" ?\n                    <>\n                        <div>\n                            <Header/>\n                            <Menu/>\n                            <div className=\"content-wrapper\">\n                                <div className=\"content-header\">\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row mb-2\" style={{\n                                            marginTop: '30px',\n                                            display: \"flex\",\n                                            justifyContent: \"center\",\n                                            alignItems: \"center\"\n                                        }}>\n                                            <div className=\"col-sm-11\">\n                                                <h1 className=\"m-0 text-dark\">Change Password</h1>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"content\">\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row\" style={{display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n                                            <div className=\"col-lg-11\">\n                                                <div className=\"card\">\n                                                    {/*<div className=\"card-header border-0\">*/}\n                                                    {/*    <div className=\"card-tools\">*/}\n                                                    {/*        <Link to=\"/dashboard\" className=\"btn btn-tool btn-lg\">*/}\n                                                    {/*            <i className=\"fas fa-arrow-left\"/>*/}\n                                                    {/*        </Link>*/}\n                                                    {/*    </div>*/}\n                                                    {/*</div>*/}\n                                                    <div className=\"card-body table-responsive p-md-5\">\n                                                        <div className=\"col-md-12\">\n                                                            <div className=\"form form-container\">\n                                                                {/*<div className=\"row align-items-center\">*/}\n\n                                                                    {/*<div className=\"col-md-5 pr-lg-5 mb-5 mb-md-0\">*/}\n                                                                    {/*    <img src={gambar} alt=\"\"*/}\n                                                                    {/*         className=\"img-fluid mb-3 d-none d-md-block\"/>*/}\n                                                                    {/*</div>*/}\n\n                                                                    {/*<div className=\"col-md-7 col-lg-6 ml-auto\">*/}\n\n                                                                    {/*    <h1 style={{*/}\n                                                                    {/*        color: \"#e42256\",*/}\n                                                                    {/*        fontSize: \"55px\"*/}\n                                                                    {/*    }}>Change Password</h1>*/}\n                                                                        {!isLoading ?\n                                                                            <Form onSubmit={handleSubmit}>\n                                                                                <div className=\"row\">\n\n                                                                                    <Label htmlFor=\"type\" sm={3}\n                                                                                           style={{textAlign: \"left\"}}>Password</Label>\n                                                                                    <Col sm={12} style={{marginBottom:\"1vw\"}}>\n                                                                                        <Input\n                                                                                            required\n                                                                                            type=\"password\"\n                                                                                            name=\"password\"\n                                                                                            value={oldPassword}\n                                                                                            onChange={(e) => setOldPassword(e.target.value)}\n                                                                                            placeholder=\"password\"/>\n                                                                                    </Col>\n\n                                                                                    {/*<div*/}\n                                                                                    {/*    className=\"input-group col-lg-12 mb-4\">*/}\n                                                                                    {/*    <div*/}\n                                                                                    {/*        className=\"input-group-prepend\">*/}\n                                                                                    {/*            <span className=\"input-group-text bg-white px-4 border-md border-right-0\">*/}\n                                                                                    {/*                <FontAwesomeIcon icon={faLock}/>*/}\n                                                                                    {/*            </span>*/}\n                                                                                    {/*    </div>*/}\n                                                                                    {/*    <input*/}\n                                                                                    {/*        required*/}\n                                                                                    {/*        type=\"password\"*/}\n                                                                                    {/*        name=\"password\"*/}\n                                                                                    {/*        value={oldPassword}*/}\n                                                                                    {/*        onChange={(e) => setOldPassword(e.target.value)}*/}\n                                                                                    {/*        placeholder=\"old password\"*/}\n                                                                                    {/*        className=\"form-control bg-white border-left-0 border-md\"/><br/>*/}\n\n                                                                                    {/*</div>*/}\n                                                                                    {/*<p style={{fontSize: 12, color: \"red\"}}>{oldPasswordError}</p>*/}\n\n\n                                                                                    <Label htmlFor=\"type\" sm={3}\n                                                                                           style={{textAlign: \"left\"}}>New Password</Label>\n                                                                                    <Col sm={12} style={{marginBottom:\"1vw\"}}>\n                                                                                        <Input\n                                                                                            required\n                                                                                            type=\"password\"\n                                                                                            name=\"newPassword\"\n                                                                                            value={newPassword}\n                                                                                            onChange={(e) => setNewPassword(e.target.value)}\n                                                                                            placeholder=\"new password\"/>\n                                                                                    </Col>\n\n                                                                                    {/*<div*/}\n                                                                                    {/*    className=\"input-group col-lg-12 mb-4\">*/}\n                                                                                    {/*    <div*/}\n                                                                                    {/*        className=\"input-group-prepend\">*/}\n                                                                                    {/*        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">*/}\n                                                                                    {/*            <FontAwesomeIcon icon={faKey}/>*/}\n                                                                                    {/*        </span>*/}\n                                                                                    {/*    </div>*/}\n                                                                                    {/*    <input*/}\n                                                                                    {/*        required*/}\n                                                                                    {/*        type=\"password\"*/}\n                                                                                    {/*        name=\"newPassword\"*/}\n                                                                                    {/*        value={newPassword}*/}\n                                                                                    {/*        onChange={(e) => setNewPassword(e.target.value)}*/}\n                                                                                    {/*        placeholder=\"password\"*/}\n                                                                                    {/*        className=\"form-control bg-white border-left-0 border-md\"/>*/}\n\n                                                                                    {/*</div>*/}\n                                                                                    {/*<p style={{fontSize: 12, color: \"red\"}}>{newPasswordError}</p>*/}\n\n\n                                                                                    <Label htmlFor=\"type\" sm={3}\n                                                                                           style={{textAlign: \"left\"}}>Confirm Password</Label>\n                                                                                    <Col sm={12} style={{marginBottom:\"1vw\"}}>\n                                                                                        <Input\n                                                                                            required\n                                                                                            type=\"password\"\n                                                                                            name=\"confirmPassword\"\n                                                                                            value={confirmPassword}\n                                                                                            onChange={(e) => setConfirmPassword(e.target.value)}\n                                                                                            placeholder=\"confirm password\"/>\n                                                                                    </Col>\n\n                                                                                    {/*<div*/}\n                                                                                    {/*    className=\"input-group col-lg-12 mb-4\">*/}\n                                                                                    {/*    <div*/}\n                                                                                    {/*        className=\"input-group-prepend\">*/}\n                                                                                    {/*            <span className=\"input-group-text bg-white px-4 border-md border-right-0\">*/}\n                                                                                    {/*                <FontAwesomeIcon icon={faLockOpen}/>*/}\n                                                                                    {/*            </span>*/}\n                                                                                    {/*    </div>*/}\n                                                                                    {/*    <input*/}\n                                                                                    {/*        required*/}\n                                                                                    {/*        type=\"password\"*/}\n                                                                                    {/*        name=\"confirmPassword\"*/}\n                                                                                    {/*        value={confirmPassword}*/}\n                                                                                    {/*        onChange={(e) => setConfirmPassword(e.target.value)}*/}\n                                                                                    {/*        placeholder=\"confirm password\"*/}\n                                                                                    {/*        className=\"form-control bg-white border-left-0 border-md\"/><br/>*/}\n                                                                                    {/*</div>*/}\n                                                                                    {/*<p style={{fontSize: 12, color: \"red\"}}>{confirmPasswordError}</p>*/}\n                                                                                </div>\n\n                                                                                    <Row>\n                                                                                        <Col sm={{size: 10, offset: 2}}\n                                                                                             style={{textAlign: \"right\"}}>\n                                                                                            <Button onClick={handleSubmit} style={{background: \"#e42256\"}}>\n                                                                                                <FontAwesomeIcon icon={faSave} style={{marginRight:\"0.5vw\"}}/>\n                                                                                                Submit\n                                                                                            </Button> {' '}\n                                                                                            <Button href=\"/dashboard\"\n                                                                                                    style={{background: \"#e42256\"}}>\n                                                                                                <FontAwesomeIcon\n                                                                                                    icon={faArrowLeft} style={{marginRight:\"0.5vw\"}}/>\n                                                                                                Cancel\n                                                                                            </Button>\n                                                                                        </Col>\n                                                                                    </Row>\n\n                                                                                    {/*<div*/}\n                                                                                    {/*    className=\"form-group col-lg-12 mx-auto mb-0\">*/}\n                                                                                    {/*    <Button*/}\n                                                                                    {/*        onClick={handleSubmit}*/}\n                                                                                    {/*        style={{background: \"#e42256\"}}*/}\n                                                                                    {/*        block>*/}\n                                                                                    {/*            <span className=\"font-weight-bold\"*/}\n                                                                                    {/*                  style={{color: \"#ffff\"}}>CHANGE PASSWORD</span>*/}\n                                                                                    {/*    </Button>*/}\n                                                                                    {/*</div>*/}\n\n\n                                                                            </Form>\n                                                                            :\n                                                                            // <div>\n                                                                            //     <Spinner style={{ width: '5rem', height: '5rem', color:\"#e42256\" }} />{' '}\n                                                                            // </div>\n                                                                            <div className=\"spinner\">\n                                                                                <Spinner style={{ width: '5rem', height: '5rem', color:\"#e42256\" }} />{' '}\n                                                                            </div>\n                                                                        }\n\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                {/*    </div>*/}\n                                                {/*</div>*/}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <Footer/>\n\n                        </div>\n                    </>\n                    :\n                    <div>\n                        <Error/>\n                    </div>\n            }\n        </div>\n\n    );\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        changePassword: state.changePasswordReducer.data,\n        isLoading: state.changePasswordReducer.isLoading,\n        error: state.changePasswordReducer.error\n    }\n}\n\nconst mapDispatchToProps = {\n    changePasswordAction\n}\n\nexport default connect (mapStateToProps, mapDispatchToProps) (EditPassword);","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\profile\\EditProfile.js",["473","474","475","476","477","478","479","480"],"import React, {useEffect, useState} from 'react';\nimport {Redirect, useHistory, useParams} from 'react-router-dom'\nimport undraw_Updated_resume_re_q1or from \"../../assets/images/undraw_Updated_resume_re_q1or.svg\"\nimport {\n    faEnvelope,\n    faUser,\n    faUserCircle\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport \"../account/login.css\"\nimport {Spinner, Input, Label, FormGroup, Button, Container, Form, Col} from \"reactstrap\";\nimport Header from \"../../components/dashboard/Header\";\nimport Menu from \"../../components/dashboard/Menu\";\nimport Error from \"../Error\";\nimport Footer from \"../../components/dashboard/Footer\";\n\nconst EditProfile = () => {\n\n    return (\n        <div>\n            {\n                localStorage.getItem(\"master\") == \"false\" ?\n                    <>\n                        <div>\n                            <Header/>\n                            <Menu/>\n                            <div className=\"content-wrapper\">\n                                <div className=\"content-header\">\n\n                                </div>\n                                <div className=\"content\">\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row\">\n                                            <div className=\"col-lg-12\">\n                                                <div className=\"card\">\n                                                    <div className=\"card-header border-0\">\n\n                                                    </div>\n                                                    <div className=\"card-body table-responsive p-0\">\n                                                        <div className=\"col-md-12\">\n                                                            <div className=\"form form-container\">\n                                                                <div className=\"row align-items-center\">\n\n                                                                    <div className=\"col-md-5 pr-lg-5 mb-5 mb-md-0\">\n                                                                        <img src={undraw_Updated_resume_re_q1or} alt=\"\"\n                                                                             className=\"img-fluid mb-3 d-none d-md-block\"/>\n                                                                    </div>\n\n                                                                    <div className=\"col-md-7 col-lg-6 ml-auto\">\n\n                                                                        <h1 style={{\n                                                                            color: \"#e42256\",\n                                                                            fontSize: \"55px\"\n                                                                        }}>Edit Account</h1>\n\n                                                                        {/*{!isLoading ?*/}\n                                                                            <Form>\n                                                                                <div className=\"row\">\n                                                                                    <div\n                                                                                        className=\"input-group col-lg-12 mb-4\">\n                                                                                        <div\n                                                                                            className=\"input-group-prepend\">\n                                                                                            <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\n                                                                                                <FontAwesomeIcon icon={faUserCircle}/>\n                                                                                            </span>\n                                                                                        </div>\n                                                                                        <input\n                                                                                            required\n                                                                                            type=\"text\"\n                                                                                            name=\"fullName\"\n                                                                                            placeholder=\"Full Name\"\n                                                                                            className=\"form-control bg-white border-left-0 border-md\"/><br/>\n                                                                                    </div>\n\n\n                                                                                    <div\n                                                                                        className=\"input-group col-lg-12 mb-4\">\n                                                                                        <div\n                                                                                            className=\"input-group-prepend\">\n                                                                                            <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\n                                                                                                <FontAwesomeIcon icon={faUser}/>\n                                                                                            </span>\n                                                                                        </div>\n                                                                                        <input\n                                                                                            required\n                                                                                            type=\"text\"\n                                                                                            name=\"username\"\n                                                                                            placeholder=\"Username\"\n                                                                                            minLength={4}\n                                                                                            maxLength={10}\n                                                                                            className=\"form-control bg-white border-left-0 border-md\"/>\n                                                                                    </div>\n\n                                                                                    <div\n                                                                                        className=\"input-group col-lg-12 mb-4\">\n                                                                                        <div\n                                                                                            className=\"input-group-prepend\">\n                                                                                            <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\n                                                                                                <FontAwesomeIcon icon={faEnvelope}/>\n                                                                                            </span>\n                                                                                        </div>\n                                                                                        <input\n                                                                                            required\n                                                                                            type=\"email\"\n                                                                                            name=\"email\"\n                                                                                            placeholder=\"Email Address\"\n                                                                                            className=\"form-control bg-white border-left-0 border-md\"/><br/>\n                                                                                    </div>\n\n\n                                                                                    <div\n                                                                                        className=\"input-group col-lg-12 mb-4\">\n                                                                                        <FormGroup>\n                                                                                            <Label for=\"profilePicture\"\n                                                                                                   sm={4}>Profile\n                                                                                                Photo</Label>\n                                                                                            <Col sm={12}>\n                                                                                                <Input\n                                                                                                    type=\"file\"\n                                                                                                    name=\"profilePicture\"\n                                                                                                    accept=\"image/jpeg, image/png\"/>\n                                                                                            </Col>\n                                                                                        </FormGroup>\n                                                                                    </div>\n\n                                                                                    <div\n                                                                                        className=\"form-group col-lg-12 mx-auto mb-0\">\n                                                                                        <Button\n                                                                                            style={{background: \"#e42256\"}}\n                                                                                            block>\n                                                                                            <span className=\"font-weight-bold\"\n                                                                                                  style={{color: \"#ffff\"}}>CREATE ACCOUNT</span>\n                                                                                        </Button>\n                                                                                    </div>\n\n                                                                                </div>\n                                                                            </Form>\n\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <Footer/>\n\n                        </div>\n                    </>\n                    :\n                    <div>\n                        <Error/>\n                    </div>\n            }\n        </div>\n\n    );\n\n}\n\n\nexport default EditProfile;","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\role\\RoleMenu.js",["481","482","483","484","485"],"import React, {useEffect, useState} from \"react\";\nimport Header from \"../../components/dashboard/Header\";\nimport Menu from \"../../components/dashboard/Menu\";\nimport {connect} from \"react-redux\";\nimport {Redirect, useHistory, useParams} from 'react-router-dom'\nimport Containers from \"../../components/Containers/Container\";\nimport Footer from \"../../components/dashboard/Footer\";\nimport Error from \"../Error\";\nimport {Row, Col, FormGroup, Input, Label, Button} from \"reactstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\nimport swal from \"sweetalert\";\nimport {\n    findAllRoleAction,\n    findRoleByIdAction,\n    removeByIdRoleAction,\n    saveRoleAction,\n    updateRoleAction\n} from \"../../actions/roleAction\";\n\nconst RoleMenu = ({saveRoleAction, saveRole, error, isLoading, role, roles, findRoleByIdAction, updateRoleAction, findAllRoleAction}) => {\n    const {id} = useParams()\n    const [redirect] = useState(false)\n    const [roleUsed, setRoleUsed] = useState([])\n\n    useEffect(() => {\n        findAllRoleAction()\n    }, [findAllRoleAction])\n\n    useEffect(() => {\n        setRoleUsed(roles.list)\n    }, [roles.list])\n\n    console.log(\"list role\",roleUsed)\n\n    const [data, setData] = useState({\n        name: \"\",\n        inputCustomer: false,\n        readAllCustomer: false,\n        inputTransaction: false,\n        readAllTransaction: false,\n        approveTransaction: false,\n        readAllReport: false,\n        readAllReportByTransaction: false\n    })\n    const history = useHistory()\n\n    useEffect(() => {\n        if (id) {\n            findRoleByIdAction(id)\n        }\n    }, [id, findRoleByIdAction])\n\n    useEffect(() => {\n        if (id && role) {\n            setData({...role})\n        }\n    }, role)\n\n    useEffect(() => {\n        if (saveRole) {\n            swal(\"Add Loan Purpose Success\", \"\", \"success\")\n            history.push('/role')\n        }\n    }, [saveRole, history, error])\n\n    const handleChange = (e) => {\n        let name = e.target.name\n        let value = e.target.value\n        setData({...data, [name]: value.toUpperCase()})\n    }\n\n    const handleChecked = (e) => {\n        let name = e.target.name\n        let value = e.target.checked\n        setData({...data, [name]: value})\n        roleUsed.map((e,i)=>{\n            if(data.name == e.name){\n                setData({...data, name: \"\"})\n                swal(\"Sorry name is already exist\", '', \"error\")\n            }\n        })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (data.inputCustomer || data.readAllCustomer || data.inputTransaction || data.approveTransaction || data.readAllReportByTransaction || data.readAllReport || data.readAllTransaction){\n            if (id) {\n                updateRoleAction(id, data)\n            } else {\n                saveRoleAction(data)\n            }\n            swal(\"Save Success!\", \"\", \"success\");\n            history.push('/role')\n        } else {\n            swal(\"Please select role access!\", \"\", \"error\")\n        }\n    }\n\n    if (redirect === true) {\n        return <Redirect to=\"/role\"/>\n    }\n\n    return (\n        <div>\n            {\n                localStorage.getItem(\"master\") == \"true\" ?\n                    <>\n                        <Containers>\n                            <Header/>\n                            <Menu/>\n                            <div className=\"content-wrapper\">\n                                <div className=\"content-header\">\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row mb-2\" style={{display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n                                            <div className=\"col-sm-11\">\n                                                <h1 className=\"m-0 text-dark\">Management Role</h1>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"content\">\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row\" style={{display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n                                            <div className=\"col-lg-11\" >\n\n                                                <div className=\"card\">\n                                                    <div className=\"card-header border-0\">\n                                                    </div>\n\n                                                    <div className=\"card-body table-responsive  p-md-5\">\n                                                        <form onSubmit={handleSubmit}>\n                                                            <FormGroup row>\n                                                                <Label htmlFor=\"type\" sm={3}\n                                                                       style={{textAlign: \"left\"}}>Role Name\n                                                                {/*<span style={{color: \"red\"}}> *</span>*/}\n                                                                </Label>\n\n                                                                {/*<Col>*/}\n                                                                {/*    <h6 style={{textAlign: \"left\", color: \"grey\"}}>Role*/}\n                                                                {/*        name*/}\n                                                                {/*        <span style={{color: \"red\"}}> *</span>*/}\n                                                                {/*    </h6>*/}\n                                                                {/*</Col>*/}\n                                                                <Col sm={12} style={{textAlign: \"left\"}}>\n                                                                    <Input\n                                                                        required\n                                                                        onChange={handleChange}\n                                                                        value={data?.name}\n                                                                        type=\"text\"\n                                                                        name=\"name\"\n                                                                        placeholder=\"role name\"/>\n                                                                </Col>\n                                                            </FormGroup><br/>\n\n                                                            <Row>\n                                                                <Col>\n\n                                                                    <h6>Access :</h6>\n                                                                    <br/>\n                                                                </Col>\n                                                            </Row>\n\n                                                            <Row>\n                                                                <Col style={{textAlign: \"left\"}}>\n                                                                    <h6>Customer</h6>\n                                                                </Col>\n                                                                <Col style={{textAlign: \"left\"}}>\n                                                                    <div className=\"form-check\">\n                                                                        <input className=\"form-check-input\"\n                                                                               type=\"checkbox\"\n                                                                               name=\"inputCustomer\"\n                                                                               onChange={handleChecked}\n                                                                               checked={data.inputCustomer}\n                                                                               value={data.inputCustomer}\n                                                                               id=\"defaultCheck1\"/>\n                                                                        <label className=\"form-check-label\"\n                                                                               htmlFor=\"defaultCheck1\">\n                                                                            Input Customer\n                                                                        </label>\n                                                                    </div>\n                                                                    <div className=\"form-check\">\n                                                                        <input className=\"form-check-input\"\n                                                                               type=\"checkbox\"\n                                                                               name=\"readAllCustomer\"\n                                                                               onChange={handleChecked}\n                                                                               value={data?.readAllCustomer}\n                                                                               checked={data?.readAllCustomer}\n                                                                               id=\"defaultCheck2\"/>\n                                                                        <label className=\"form-check-label\"\n                                                                               htmlFor=\"defaultCheck2\">\n                                                                            Read All Customer\n                                                                        </label>\n                                                                    </div>\n                                                                </Col>\n                                                                <Col/>\n                                                            </Row>\n                                                            <hr/>\n                                                            <Row>\n                                                                <Col style={{textAlign: \"left\"}}>\n                                                                    <h6>Transaction</h6>\n                                                                </Col>\n                                                                <Col style={{textAlign: \"left\"}}>\n                                                                    <div className=\"form-check\">\n                                                                        <input className=\"form-check-input\"\n                                                                               type=\"checkbox\"\n                                                                               name=\"inputTransaction\"\n                                                                               onChange={handleChecked}\n                                                                               value={data?.inputTransaction}\n                                                                               checked={data?.inputTransaction}\n                                                                               id=\"defaultCheck2\"/>\n                                                                        <label className=\"form-check-label\"\n                                                                               htmlFor=\"defaultCheck2\">\n                                                                            Input Transaction\n                                                                        </label>\n                                                                    </div>\n                                                                    <div className=\"form-check\">\n                                                                        <input className=\"form-check-input\"\n                                                                               type=\"checkbox\"\n                                                                               name=\"readAllTransaction\"\n                                                                               onChange={handleChecked}\n                                                                               value={data?.readAllTransaction}\n                                                                               checked={data?.readAllTransaction}\n                                                                               id=\"defaultCheck2\"/>\n                                                                        <label className=\"form-check-label\"\n                                                                               htmlFor=\"defaultCheck2\">\n                                                                            Read All Transaction\n                                                                        </label>\n                                                                    </div>\n                                                                    <div className=\"form-check\">\n                                                                        <input className=\"form-check-input\"\n                                                                               type=\"checkbox\"\n                                                                               name=\"approveTransaction\"\n                                                                               onChange={handleChecked}\n                                                                               value={data?.approveTransaction}\n                                                                               checked={data?.approveTransaction}\n                                                                               id=\"defaultCheck2\"/>\n                                                                        <label className=\"form-check-label\"\n                                                                               htmlFor=\"defaultCheck2\">\n                                                                            Approval Transaction\n                                                                        </label>\n                                                                    </div>\n                                                                </Col>\n                                                                <Col/>\n                                                            </Row>\n                                                            <hr/>\n                                                            <Row>\n                                                                <Col style={{textAlign: \"left\"}}>\n                                                                    <h6>Report</h6>\n                                                                </Col>\n                                                                <Col style={{textAlign: \"left\"}}>\n                                                                    <div className=\"form-check\">\n                                                                        <input className=\"form-check-input\"\n                                                                               type=\"checkbox\"\n                                                                               name=\"readAllReport\"\n                                                                               onChange={handleChecked}\n                                                                               value={data?.readAllReport}\n                                                                               checked={data?.readAllReport}\n                                                                               id=\"defaultCheck2\"/>\n                                                                        <label className=\"form-check-label\"\n                                                                               htmlFor=\"defaultCheck2\">\n                                                                            Read All Report\n                                                                        </label>\n                                                                    </div>\n\n                                                                    <div className=\"form-check\">\n                                                                        <input className=\"form-check-input\"\n                                                                               type=\"checkbox\"\n                                                                               name=\"readAllReportByTransaction\"\n                                                                               onChange={handleChecked}\n                                                                               value={data?.readAllReportByTransaction}\n                                                                               checked={data?.readAllReportByTransaction}\n                                                                               id=\"defaultCheck2\"/>\n                                                                        <label className=\"form-check-label\"\n                                                                               htmlFor=\"defaultCheck2\">\n                                                                            Read Report By Submitter\n                                                                        </label>\n                                                                    </div>\n                                                                </Col>\n                                                                <Col/>\n                                                            </Row>\n                                                            <br/>\n\n                                                            <Row>\n                                                                <Col sm={{size: 10, offset: 2}}\n                                                                     style={{textAlign: \"right\"}}>\n                                                                    <Button style={{background: \"#e42256\"}}>\n                                                                        <FontAwesomeIcon icon={faSave} style={{marginRight:\"0.5vw\"}}/>\n                                                                         Submit\n                                                                    </Button> {' '}\n                                                                    <Button href=\"/role\"\n                                                                            style={{background: \"#e42256\"}}>\n                                                                        <FontAwesomeIcon\n                                                                            icon={faArrowLeft} style={{marginRight:\"0.5vw\"}}/>\n                                                                         Cancel\n                                                                    </Button>\n                                                                </Col>\n                                                            </Row>\n                                                        </form>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            {/*<Footer/>*/}\n\n                        </Containers>\n                        <Footer/>\n                    </>\n                    :\n                    <div>\n                        <Error/>\n                    </div>\n            }\n\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        saveRole: state.saveRoleReducer.data,\n        error: state.saveRoleReducer.error,\n        isLoading: state.saveRoleReducer.isLoading || state.findRoleByIdReducer.isLoading,\n        role: state.findRoleByIdReducer.data,\n        roles: state.findAllRoleReducer.data || []\n    }\n}\n\nconst mapDispatchToProps = {\n    saveRoleAction,\n    findRoleByIdAction,\n    removeByIdRoleAction,\n    updateRoleAction,\n    findAllRoleAction\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RoleMenu)","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\role\\RoleList.js",["486","487","488","489"],"import React, {useEffect} from \"react\";\nimport Header from \"../../components/dashboard/Header\";\nimport Menu from \"../../components/dashboard/Menu\";\nimport {connect} from \"react-redux\";\nimport Containers from \"../../components/Containers/Container\";\nimport Footer from \"../../components/dashboard/Footer\";\nimport Error from \"../Error\";\nimport RoleRow from \"./RoleRow\";\nimport {findAllRoleAction, removeByIdRoleAction} from \"../../actions/roleAction\";\nimport ReasonRow from \"../reasonUse/ReasonRow\";\nimport swal from \"sweetalert\";\nimport TableScrollbar from \"react-table-scrollbar\";\nimport {Spinner} from \"reactstrap\";\n\n\nconst ReasonUse = ({\n                       roles,\n                       findAllRoleAction,\n                       error,\n                       isLoading,\n                       removeByIdRoleAction,\n    isRemoved\n                   }) => {\n\n    const onReload = () => {\n        findAllRoleAction()\n    }\n\n    const onDelete = (id) => {\n        swal({\n            title: \"Are you sure to delete this data?\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n        })\n            .then(willDelete => {\n                if (willDelete) {\n                    removeByIdRoleAction(id);\n                    swal(\"Successful deleted\", {\n                        icon: \"success\"\n                    });\n                } else {\n                    swal(\"Failed to delete\")\n                }\n            });\n    };\n\n    useEffect(onReload, [findAllRoleAction])\n\n    useEffect(() => {\n        onReload()\n    }, [findAllRoleAction])\n\n    useEffect(() => {\n        if(isRemoved) {\n            onReload()\n        }\n    }, [isRemoved])\n\n    return (\n        <div>\n            {\n                localStorage.getItem(\"master\") == \"true\" ?\n                    <>\n                        <Containers error={error}>\n                            <Header/>\n                            <Menu/>\n                            <div className=\"content-wrapper\">\n                                <div className=\"content-header\">\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row mb-2\" style={{marginTop: '30px', display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n                                            <div className=\"col-sm-11\">\n                                                <h1 className=\"m-0 text-dark\">Management Role</h1>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"content\">\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row\" style={{display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n                                            <div className=\"col-lg-11\" >\n\n                                                <div className=\"card\">\n                                                    <div className=\"card-header border-0\">\n                                                        {/*<h3 className=\"card-title\">List Customer</h3>*/}\n                                                        <div className=\"card-tools\">\n                                                            {/*<a href=\"#\" className=\"btn btn-tool btn-sm\">*/}\n                                                            {/*    <i className=\"fas fa-download\"/>*/}\n                                                            {/*</a>*/}\n                                                            <a href=\"/role/form\" className=\"btn btn-tool btn-lg\">\n                                                                <i className=\"fas fa-plus\"/>\n                                                            </a>\n                                                        </div>\n                                                    </div>\n\n\n                                                    <div className=\"card-body table-responsive p-0\">\n                                                        <TableScrollbar rows={12}>\n                                                        <table className=\"table table-striped table-valign-middle table-bordered\">\n                                                            <thead style={{textAlign: \"left\", background:\"#FCE051\"}}>\n                                                            <tr>\n                                                                <th>No</th>\n                                                                <th>Role</th>\n                                                                <th>Action</th>\n                                                            </tr>\n                                                            </thead>\n                                                            <tbody style={{textAlign: \"left\"}}>\n                                                            {\n                                                                !isLoading ?\n                                                                    roles?.list?.map((e,i) => {\n                                                                        return(\n                                                                            <RoleRow onDeleted={() => onDelete(e.id)}\n                                                                                key={i} data={e}\n                                                                                     number={(roles.page * roles.size) + 1 + i}/>\n                                                                        )\n                                                                    }) :\n                                                                    <div className=\"spinner\">\n                                                                        <Spinner style={{ width: '5rem', height: '5rem', color:\"#e42256\" }} />{' '}\n                                                                    </div>\n                                                            }\n                                                            </tbody>\n                                                        </table>\n                                                        </TableScrollbar>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            {/*<Footer/>*/}\n\n                        </Containers>\n                        <Footer/>\n                    </>\n                    :\n                    <div>\n                        <Error/>\n                    </div>\n            }\n\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        roles: state.findAllRoleReducer.data,\n        error: state.findAllRoleReducer.error || state.removeRoleByIdReducer.error,\n        isLoading: state.findAllRoleReducer.isLoading,\n        isRemoved: state.removeRoleByIdReducer\n    }\n}\n\nconst mapDispatchToProps = {\n    findAllRoleAction,\n    removeByIdRoleAction\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReasonUse)","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\verification\\VerificationPage.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\customer\\listCustomerByStaff\\ListCustomerByStaff.js",["490","491","492","493","494","495","496","497","498"],"import React, {useEffect, useState} from 'react'\nimport {findAllCustomerAction} from '../../../actions/customerAction'\nimport {connect} from \"react-redux\"\nimport Containers from \"../../../components/Containers/Container\";\nimport Header from \"../../../components/dashboard/Header\";\nimport Menu from \"../../../components/dashboard/Menu\";\nimport TableScrollbar from 'react-table-scrollbar';\nimport RowList from \"./RowList\";\nimport Error from \"../../Error\";\nimport Footer from \"../../../components/dashboard/Footer\";\nimport {Row, Col, Button, ButtonGroup, Spinner} from \"reactstrap\";\nimport {PaginationButton} from \"../../../components/Buttons\";\n\nfunction CustomerListBySubmitter({\n                          error,\n                          isLoading,\n                          customers,\n                          findAllCustomerAction,\n                                     size, total, currentPage\n                      }) {\n\n    const [customer, setCustomer] = useState([])\n    const [pageParam, setPageParam] = useState(0)\n    const [sizeParam, setSizeParam] = useState(10)\n\n    const totalPage = Math.ceil(total/size)\n\n    useEffect(() => {\n        onReload()\n    }, [pageParam, sizeParam])\n\n    useEffect(() => {\n        onReload()\n    }, [])\n\n    useEffect(() => {\n        if(customer) {\n            setCustomer(customers)\n        }\n    }, [customers])\n\n    const onReload = () => {\n        findAllCustomerAction({page: pageParam, size: sizeParam});\n    };\n\n    const handleLimit = (limit) => {\n        setSizeParam(limit)\n        setPageParam(0)\n    }\n\n    useEffect(onReload, [findAllCustomerAction, pageParam, sizeParam])\n\n    return (\n\n        <div>\n            {\n                localStorage.getItem(\"inputCustomer\") == \"true\" ?\n                    <>\n                <Containers error={error}>\n                    <Header/>\n                    <Menu/>\n                    <div className=\"content-wrapper\">\n                        <div className=\"content-header\">\n                            <div className=\"container-fluid\">\n                                <div className=\"row mb-2\" style={{marginTop: '30px', display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n                                    <div className=\"col-sm-11\">\n                                        <h1 className=\"m-0 text-dark\">Customer</h1>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"content\">\n                            <div className=\"container-fluid\">\n                                <div className=\"row\" style={{display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n                                    <div className=\"col-lg-11\">\n\n                                        <div className=\"card\">\n                                            <div className=\"card-header border-0\">\n                                                <div className=\"card-tools\">\n                                                    {localStorage.getItem('inputCustomer') == \"true\" &&\n                                                    <a href=\"/customer/form\" className=\"btn btn-tool btn-lg\">\n                                                        <i className=\"fas fa-plus\"/>\n                                                    </a>}\n                                                </div>\n                                            </div>\n                                            <div className=\"card-body table-responsive p-0\">\n\n                                                <TableScrollbar rows={11}>\n                                                    <table className=\"table table-striped table-bordered table-align-middle table-head-fixed\">\n                                                        <thead style={{textAlign: \"left\", background:\"#FCE051\"}}>\n                                                        <tr style={{textAlign: \"left\", background:\"#FCE051\"}}>\n                                                            <th style={{background:\"#FCE051\"}}>Number</th>\n                                                            <th style={{background:\"#FCE051\"}}>Full Name</th>\n                                                            <th style={{background:\"#FCE051\"}}>Number Identity</th>\n                                                            <th style={{background:\"#FCE051\"}}>Employee Type</th>\n                                                            <th style={{background:\"#FCE051\"}}>Submitter</th>\n                                                            <th style={{background:\"#FCE051\"}}>Action</th>\n                                                        </tr>\n                                                        </thead>\n                                                        <tbody style={{textAlign: \"left\"}}>\n                                                        {\n                                                            !isLoading ?\n                                                                customer.map((e, i) => {\n\n                                                                    return (\n                                                                        <RowList key={i} data={e}\n                                                                                     number={(pageParam * sizeParam) + 1 + i}/>\n                                                                    )\n                                                                })\n                                                                :\n                                                                <div className=\"spinner\">\n                                                                    <Spinner style={{ width: '5rem', height: '5rem', color:\"#e42256\" }} />{' '}\n                                                                </div>\n                                                        }\n                                                        </tbody>\n                                                    </table>\n                                                </TableScrollbar>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <PaginationButton\n                                    currentPage = {currentPage}\n                                    setPage={setPageParam}\n                                    totalPage={totalPage}\n                                    handleLimit={handleLimit}\n                                    size={sizeParam}\n                                />\n                                <br/>\n                            </div>\n                        </div>\n                    </div>\n                    <Footer/>\n                </Containers>\n                 </>\n                :\n                <div>\n                    <Error/>\n                </div>\n            }\n        </div>\n\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        error: state.findAllCustomerBySubmitter.error,\n        customers: state.findAllCustomerBySubmitter.data || [],\n        isLoading: state.findAllCustomerBySubmitter.isLoading,\n        size: state.findAllCustomerBySubmitter.pagination.size,\n        total: state.findAllCustomerBySubmitter.pagination.total,\n        currentPage: state.findAllCustomerBySubmitter.pagination.page\n    }\n}\n\nconst mapDispatchToProps = {\n    findAllCustomerAction\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerListBySubmitter)\n","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\actions\\loginAction.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\sagas\\index.js",["499"],"import { all } from \"redux-saga/effects\";\nimport {\n  watchFindAllCustomer, watchFindAllCustomerByStaffSaga,\n  watchFindAllCustomerBySubmitter,\n  watchFindCustomerById,\n  watchSaveCustomer,\n  watchUpdateCustomer\n} from \"./customerSaga\";\nimport {\n  watchFindAllTransaction, watchFindAllTransactionByStaff,\n  watchFindTransactionById,\n  watchSaveTransaction,\n  watchUpdateTransactionById\n} from \"./transactionSaga\";\nimport {watchLoginSaga} from \"./loginSaga\";\nimport {\n  watchFindAllAccount,\n  watchFindByIdAccount,\n  watchRemoveById,\n  watchSaveAccount,\n  watchUpdateAccountById\n} from \"./signupSaga\";\nimport {watchFindAllReport, watchFindReportByStaff} from \"./reportSaga\";\nimport {\n  watchFindAllApproval,\n  watchFindApprovalById,\n  watchFindApprovalSubmitterByIdSaga, watchFindReportByApprovedSaga, watchFindReportByRejectedSaga,\n  watchSaveApproval\n} from \"./approvalSaga\";\nimport {watchFindAllNeed, watchFindByIdNeed, watchRemoveNeedById, watchSaveNeed, watchUpdateNeedById} from \"./needSaga\";\nimport {watchFindAllRole, watchFindByIdRole, watchRemoveRoleById, watchSaveRole, watchUpdateRoleById} from \"./roleSaga\";\nimport {watchChangePassword} from \"./userSaga\";\nimport {watchFindAllTotal} from \"./totalSaga\";\n\nexport default function* rootSaga() {\n  yield all([\n    watchFindAllCustomer(),\n    watchSaveCustomer(),\n    watchUpdateCustomer(),\n    watchFindCustomerById(),\n\n    watchFindAllTransaction(),\n    watchSaveTransaction(),\n    watchFindTransactionById(),\n    watchUpdateTransactionById(),\n\n    watchLoginSaga(),\n\n    watchFindAllAccount(),\n    watchSaveAccount(),\n    watchFindByIdAccount(),\n    watchUpdateAccountById(),\n    watchRemoveById(),\n\n    watchFindAllReport(),\n    watchFindReportByStaff(),\n\n    watchSaveApproval(),\n    watchFindAllApproval(),\n    watchFindApprovalById(),\n    watchFindApprovalSubmitterByIdSaga(),\n    watchFindReportByApprovedSaga(),\n    watchFindReportByRejectedSaga(),\n\n    watchFindAllCustomerByStaffSaga(),\n\n    watchSaveNeed(),\n    watchFindAllNeed(),\n    watchFindByIdNeed(),\n    watchUpdateNeedById(),\n    watchRemoveNeedById(),\n\n    watchFindAllTransactionByStaff(),\n\n    watchFindAllRole(),\n    watchSaveRole(),\n    watchRemoveRoleById(),\n    watchFindByIdRole(),\n    watchUpdateRoleById(),\n\n    watchChangePassword(),\n\n    watchFindAllTotal()\n  ])\n}","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\reducers\\index.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\Error\\index.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\transaction\\transactionForm\\index.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\transaction\\transactionList\\index.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\customer\\customerForm\\index.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\customer\\listCustomer\\index.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\components\\dashboard\\index.js",["500","501","502","503","504"],"import React from 'react'\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\nimport Footer from \"./Footer\";\nimport Content from \"./Home\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport ListCustomer from \"../../pages/customer/listCustomer\";\nimport TransactionList from \"../../pages/transaction/transactionList\";\n\nexport default function Dashboard() {\n    return (\n        <div>\n            <Header/>\n            <Menu/>\n            {/*<ListCustomer/>*/}\n            <Content/>\n            {/*<Router>*/}\n            {/*    <Switch>*/}\n            {/*        <Route path=\"/customer\" component={ListCustomer} exact />*/}\n            {/*        /!*<Route path=\"/customer/form\" component={CustomerForm} exact />*!/*/}\n            {/*        <Route path=\"/transaction\" component={TransactionList} exact />*/}\n            {/*        <Route path=\"/report\" component={Content} exact/>*/}\n            {/*    </Switch>*/}\n            {/*</Router>*/}\n            <Footer/>\n        </div>\n\n    )\n}","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\actions\\signupAction.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\components\\dashboard\\Footer.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\components\\dashboard\\Header.js",["505","506","507","508","509","510","511"],"import React from \"react\";\nimport {useHistory} from \"react-router\";\nimport {\n  faCogs,\n  faFolderPlus,\n  faHome, faLock,\n  faSignOutAlt,\n  faUserCog,\n  faUserPlus,\n  faUsers\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {Link} from \"react-router-dom\";\nimport swal from \"sweetalert\"\n\nexport default function Header() {\n\n  const history = useHistory();\n\n  const handleOnclick = () => {\n    swal({\n      title: \"Are you sure want to log out?\",\n      text: \"\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    })\n        .then((willDelete) => {\n          if (willDelete) {\n            swal(\"You have log out!\", {\n              icon: \"success\",\n            });\n            localStorage.removeItem('token')\n            localStorage.removeItem('roles')\n            localStorage.removeItem('username')\n            localStorage.removeItem('fullName')\n            localStorage.removeItem('inputCustomer')\n            localStorage.removeItem('readAllCustomer')\n            localStorage.removeItem('inputTransaction')\n            localStorage.removeItem('readAllTransaction')\n            localStorage.removeItem('approveTransaction')\n            localStorage.removeItem('readAllReport')\n            localStorage.removeItem('readAllReportByTransaction')\n            localStorage.removeItem('master')\n            history.push('/')\n          }\n        });\n\n  }\n\n  return (\n    <nav className=\"main-header navbar navbar-expand navbar-white navbar-light\" style={{background:\"#ff8370\"}}>\n      {/* Left navbar links */}\n      <ul className=\"navbar-nav\">\n        <li className=\"nav-item\">\n          <a className=\"nav-link\" data-widget=\"pushmenu\" href=\"#\" role=\"button\" >\n            <i className=\"fas fa-bars\" />\n          </a>\n        </li>\n        <li className=\"nav-item d-none d-sm-inline-block\">\n          <Link to=\"/dashboard\" className=\"nav-link\">\n            <FontAwesomeIcon icon={faHome}/>\n          </Link>\n        </li>\n      </ul>\n\n      {/* Right navbar links */}\n      <ul className=\"navbar-nav ml-auto\">\n        {/*{localStorage.getItem(\"roles\") == \"MASTER\" &&*/}\n        {/*<ul className=\"navbar-nav ml-auto\">*/}\n        {/*      <li className=\"nav-item\">*/}\n        {/*        <a className=\"nav-link\" href=\"/need\">*/}\n        {/*          <FontAwesomeIcon icon={faFolderPlus}/>*/}\n        {/*        </a>*/}\n        {/*      </li>*/}\n        {/*      <li className=\"nav-item\">*/}\n        {/*        <a className=\"nav-link\" href=\"/register\">*/}\n        {/*          <FontAwesomeIcon icon={faUserPlus}/>*/}\n        {/*        </a>*/}\n        {/*      </li>*/}\n        {/*</ul>*/}\n        {/*}*/}\n        {localStorage.getItem(\"master\") == \"false\" &&\n        // <>\n        //   <li className=\"nav-item dropdown\">\n        //     <a className=\"nav-link\" data-toggle=\"dropdown\" style={{width:\"2vw\", fontSize:\"1vw\"}}>\n        //       {/*<i className=\"far fa-bell\" />*/}\n        //       <FontAwesomeIcon icon={faCogs}/>\n        //     </a>\n        //     <div className=\"dropdown-menu dropdown-menu-lg dropdown-menu-right\">\n        //       <div className=\"dropdown-divider\" />\n        //       <Link to=\"/users\" className=\"dropdown-item\">\n        //         <FontAwesomeIcon icon={faUserCog}/> Setting Profile\n        //         <span className=\"float-right text-muted text-sm\"></span>\n        //       </Link>\n        //       <div className=\"dropdown-divider\" />\n        //       <Link to=\"/password\" className=\"dropdown-item\">\n        //         <FontAwesomeIcon icon={faLock} /> Change Password\n        //         <span className=\"float-right text-muted text-sm\"></span>\n        //       </Link>\n        //     </div>\n        //   </li>\n        // </>\n          <li className=\"nav-item\">\n          <Link\n          className=\"nav-link\"\n          to=\"/password\"\n          // style={{width:\"2vw\", fontSize:\"1vw\"}}\n          >\n          <FontAwesomeIcon icon={faCogs}/>\n          </Link>\n          </li>\n        }\n        <li className=\"nav-item\">\n          <Link\n            className=\"nav-link\"\n            onClick={handleOnclick}\n            // to=\"/\"\n            // style={{width:\"2vw\", fontSize:\"1vw\"}}\n          >\n            <FontAwesomeIcon icon={faSignOutAlt}/>\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\actions\\roleAction.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\components\\dashboard\\Menu.js",["512","513","514","515","516","517","518","519","520","521","522","523"],"import React from \"react\";\nimport {faCheckDouble, faUsers} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {Link} from \"react-router-dom\";\n\nexport default function Menu() {\n  return (\n      <aside className=\"main-sidebar sidebar-dark-primary elevation-4\" style={{background:\"#e42256\"}}>\n        {/* Brand Logo */}\n        <a className=\"brand-link\">\n          {/*<img*/}\n          {/*  src=\"dist/img/AdminLTELogo.png\"*/}\n          {/*  alt=\"AdminLTE Logo\"*/}\n          {/*  className=\"brand-image img-circle elevation-3\"*/}\n          {/*  style={{ opacity: \".8\" }}*/}\n          {/*/>*/}\n          <span className=\"brand-text font-weight-light\">OK' 200</span>\n        </a>\n        {/* Sidebar */}\n        <div className=\"sidebar\">\n          {/* Sidebar user panel (optional) */}\n          <div className=\"user-panel mt-3 pb-3 mb-3 d-flex\">\n            <div className=\"image\">\n              {/*<img*/}\n              {/*  src=\"dist/img/user2-160x160.jpg\"*/}\n              {/*  className=\"img-circle elevation-2\"*/}\n              {/*  alt=\"User Image\"*/}\n              {/*/>*/}\n            </div>\n            <div className=\"info\">\n              <a className=\"d-block\">\n                {localStorage.getItem('fullName')}\n              </a>\n            </div>\n          </div>\n          {/* Sidebar Menu */}\n          <nav className=\"mt-2\">\n            {localStorage.getItem(\"master\") == \"true\" &&\n            <ul\n                className=\"nav nav-pills nav-sidebar flex-column\"\n                data-widget=\"treeview\"\n                role=\"menu\"\n                data-accordion=\"false\"\n            >\n                <li className=\"nav-item has-treeview\">\n                    <Link to=\"/role\" className=\"nav-link\">\n                        <i className=\"nav-icon fas fa-cog\"/>\n                        <p>\n                            Management Role\n                        </p>\n                    </Link>\n                </li>\n              <li className=\"nav-item has-treeview\">\n                <Link to=\"/master\" className=\"nav-link\">\n                  <i className=\"nav-icon fas fa-users\"/>\n                  <p>\n                    Management User\n                  </p>\n                </Link>\n              </li>\n              <li className=\"nav-item has-treeview\">\n                <Link to=\"/need\" className=\"nav-link\">\n                  <i className=\"nav-icon fas fa-list-alt\"/>\n                  <p>\n                    Loan Purpose\n                  </p>\n                </Link>\n              </li>\n            </ul>\n            }\n            <ul\n                className=\"nav nav-pills nav-sidebar flex-column\"\n                data-widget=\"treeview\"\n                role=\"menu\"\n                data-accordion=\"false\"\n            >\n                {localStorage.getItem('inputCustomer') == \"true\" &&\n              <li className=\"nav-item has-treeview\">\n                <Link to=\"/staff/customer\" className=\"nav-link\">\n                  <i className=\"nav-icon fas fa-list-alt\"/>\n                  <p>\n                    Customer\n                  </p>\n                </Link>\n              </li>}\n                {localStorage.getItem('readAllCustomer') == \"true\" &&\n                <li className=\"nav-item has-treeview\">\n                    <Link to=\"/customer\" className=\"nav-link\">\n                        <i className=\"nav-icon fas fa-list-alt\"/>\n                        <p>\n                            All Customer\n                        </p>\n                    </Link>\n                </li>}\n                {localStorage.getItem('inputTransaction') == \"true\" &&\n                <li className=\"nav-item has-treeview\">\n                    <Link to=\"/staff/transaction\" className=\"nav-link\">\n                        <i className=\"nav-icon fas fa-wallet\"/>\n                        <p>\n                            Transaction\n                        </p>\n                    </Link>\n                </li>}\n                {localStorage.getItem('readAllTransaction') == \"true\" &&\n              <li className=\"nav-item has-treeview\">\n                <Link to=\"/transaction\" className=\"nav-link\">\n                  <i className=\"nav-icon fas fa-wallet\"/>\n                  <p>\n                    All Transaction\n                  </p>\n                </Link>\n              </li>}\n                {localStorage.getItem('readAllReportByTransaction') == \"true\" &&\n              <li className=\"nav-item has-treeview\">\n                <Link to=\"/report/staff\" className=\"nav-link\">\n                  <i className=\"nav-icon fas fa-check-double\"/>\n                  <p>\n                    Report\n                  </p>\n                </Link>\n              </li>}\n                {localStorage.getItem('readAllReport') == \"true\" &&\n                <li className=\"nav-item has-treeview\">\n                    <Link to=\"/report/\" className=\"nav-link\">\n                        <i className=\"nav-icon fas fa-check-double\"/>\n                        <p>\n                            All Report\n                        </p>\n                    </Link>\n                </li>}\n            </ul>\n\n\n            {/*{localStorage.getItem(\"roles\") == \"SUPERVISOR\" &&*/}\n            {/*<ul*/}\n            {/*    className=\"nav nav-pills nav-sidebar flex-column\"*/}\n            {/*    data-widget=\"treeview\"*/}\n            {/*    role=\"menu\"*/}\n            {/*    data-accordion=\"false\"*/}\n            {/*>*/}\n\n            {/*  <li className=\"nav-item has-treeview\">*/}\n            {/*    <Link to=\"/transaction\" className=\"nav-link\">*/}\n            {/*      <i className=\"nav-icon fas fa-wallet\"/>*/}\n            {/*      <p>*/}\n            {/*        Transaction*/}\n            {/*      </p>*/}\n            {/*    </Link>*/}\n            {/*  </li>*/}\n            {/*  <li className=\"nav-item has-treeview\">*/}\n            {/*    <Link to=\"/report\" className=\"nav-link\">*/}\n            {/*      <i className=\"nav-icon fas fa-check-double\"/>*/}\n            {/*      <p>*/}\n            {/*        Report*/}\n            {/*      </p>*/}\n            {/*    </Link>*/}\n            {/*  </li>*/}\n            {/*</ul>*/}\n\n\n          </nav>\n          {/* /.sidebar-menu */}\n        </div>\n        {/* /.sidebar */}\n      </aside>\n  );\n}","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\account\\AccountRow.js",["524","525","526"],"import React from \"react\";\nimport {Col} from \"reactstrap\";\nimport {Row} from \"reactstrap\";\n\n\nconst AccountRow = ({data, number, onUpdate, onDeleted}) => {\n    return (\n        <tr>\n            <td>{number}</td>\n            <td>{data.username}</td>\n            <td>{data.fullName}</td>\n            <td>{data.email}</td>\n            <td>\n                {data.isVerified ?\n                    \"Verified\" : \"Not Verified\"\n                }\n            </td>\n            <td>{data.role}</td>\n            <td>\n                        <a onClick={onUpdate} href={`/master/${data.id}`} className=\"text-muted btn-lg\">\n                            <i className=\"fas fa-pencil-alt\" />\n                        </a>\n                        <a onClick={onDeleted} className=\"text-muted btn-lg\">\n                            <i className=\"fas fa-trash-alt\" />\n                        </a>\n            </td>\n        </tr>\n    )\n}\n\nexport default AccountRow;","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\actions\\approvalAction.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\actions\\customerAction.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\components\\Containers\\Container.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\customer\\listCustomerByStaff\\RowList.js",["527","528"],"import React from 'react'\n\nconst RowList = ({data, onUpdate, number}) => {\n    return (\n        <tr>\n            <td>{number}</td>\n            <td>{data.name}</td>\n            <td>{data.idNumber} </td>\n            <td>{data.employeeType}</td>\n            <td>{data.submitter}</td>\n            <td style={{textAlign: \"left\"}}>\n                <a onClick={data} href={`/customer/${data.id}/detail`} className=\"text-muted btn-lg\">\n                    <i className=\"fas fa-info-circle\" />\n                </a>{' '}\n                {localStorage.getItem('inputCustomer') == \"true\" &&\n                    <>\n                <a onClick={onUpdate} href={`/customer/${data.id}/edit`} className=\"text-muted btn-lg\">\n                    <i className=\"fas fa-pencil-alt\"/>\n                </a>{' '}</>\n                }\n                {localStorage.getItem(\"inputTransaction\") == \"true\" &&\n                <>\n                <a onClick={data} href={`/transaction/form/${data.id}`} className=\"text-muted btn-lg\">\n                    <i className=\"fas fa-wallet\" />\n                </a>\n                    </>}\n            </td>\n        </tr>\n    )\n}\n\nexport default RowList;\n","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\reasonUse\\ReasonRow.js",["529"],"import React from 'react'\n\nconst ReasonRow = ({data, number, onUpdate, onDeleted}) => {\n    return (\n        <tr>\n            <td>{number}</td>\n            <td>{data.type} </td>\n            <td>\n                <a onClick={onUpdate} href={`/need/${data.id}`} className=\"text-muted btn-lg\">\n                    <i className=\"fas fa-pencil-alt\"/>\n                </a>{' '}\n                <a onClick={onDeleted} className=\"text-muted btn-lg\">\n                    <i className=\"fas fa-trash-alt\"/>\n                </a>{' '}</td>\n\n        </tr>\n    )\n}\n\nexport default ReasonRow;","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\role\\RoleRow.js",["530"],"import React from 'react'\n\nconst RoleRow = ({data, number, onDeleted, onUpdate}) => {\n    return (\n        <tr>\n            <td>{number}</td>\n            <td>{data.name}</td>\n            <td>\n                <a onClick={onUpdate} href={`/role/${data.id}`} className=\"text-muted btn-lg\">\n                    <i className=\"fas fa-pencil-alt\"/>\n                </a>{' '}\n                <a onClick={onDeleted} className=\"text-muted btn-lg\">\n                    <i className=\"fas fa-trash-alt\"/>\n                </a>{' '}</td>\n\n        </tr>\n    )\n}\n\nexport default RoleRow;","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\actions\\userAction.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\actions\\reportAction.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\report\\reportByStaff\\Row.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\constants\\actions.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\transaction\\listTransactionByStaff\\Row.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\actions\\transactionAction.js",["531"],"import {\n    FIND_ALL_TRANSACTION,\n    FIND_TRANSACTION_BY_ID,\n    SAVE_TRANSACTION,\n    UPDATE_TRANSACTION\n} from \"../configs/constants/actions\";\nimport pagination from \"../configs/sagas/pagination\";\n\nexport function findAllTransactionAction(pagination) {\n    return {\n        type: FIND_ALL_TRANSACTION,\n        pagination: {\n            page: pagination.page,\n            size: pagination.size\n        }\n\n    }\n}\n\nexport function saveTransactionAction(model) {\n    return {\n        type: SAVE_TRANSACTION,\n        model\n    }\n}\n\nexport function findByIdTransactionAction(id) {\n    console.log(\"masuk ke action\")\n    return{\n        type: FIND_TRANSACTION_BY_ID,\n        id\n    }\n}\n\nexport function update(payload) {\n    return {\n        type: UPDATE_TRANSACTION,\n        payload\n    }\n}","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\actions\\needAction.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\report\\ReportRow.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\sagas\\customerSaga.js",["532"],"import { put, takeLatest } from \"redux-saga/effects\"\nimport {\n  FIND_ALL_CUSTOMER_FAILURE,\n  FIND_ALL_CUSTOMER_SUCCESS,\n  FIND_ALL_CUSTOMER,\n\n  SAVE_CUSTOMER,\n  SAVE_CUSTOMER_FAILURE,\n  SAVE_CUSTOMER_SUCCESS,\n\n  FIND_CUSTOMER_BY_ID,\n  FIND_CUSTOMER_BY_ID_FAILURE,\n  FIND_CUSTOMER_BY_ID_SUCCESS,\n\n  UPDATE_CUSTOMER, FIND_CUSTOMER_BY_SUBMITTER_SUCCESS, FIND_CUSTOMER_BY_SUBMITTER_FAILURE, FIND_CUSTOMER_BY_SUBMITTER\n\n} from \"../constants/actions\"\nimport axios from \"../api\"\nimport pagination from \"./pagination\";\n\nfunction* findAllCustomerSaga(action) {\n  let parameter = pagination(action)\n\n  parameter = parameter.replace(/\\s+/g, '+')\n\n  let result = yield axios.get(`/customer?${parameter}`)\n    .then(data => {\n      return ({\n        type: FIND_ALL_CUSTOMER_SUCCESS,\n        data: data.list,\n        pagination: {\n          size: data.size,\n          total: data.total,\n          page: data.page\n        },\n      })\n    })\n    .catch(err => {\n      return ({\n        type: FIND_ALL_CUSTOMER_FAILURE,\n        error: err\n      })\n    })\n  yield put(result)\n}\n\nfunction* saveCustomerSaga(action) {\n  let model = action.model;\n  let method = 'POST', url = '/customer';\n  if (model.id) {\n    method = \"PATCH\";\n    url += `/${model.id}`\n  }\n\n  let result = yield axios({\n    url: url,\n    method: method,\n    data: model\n  })\n    .then( data => {\n      return {\n        type: SAVE_CUSTOMER_SUCCESS,\n        data: data\n      }\n    })\n    .catch(e => {\n      return {\n        type: SAVE_CUSTOMER_FAILURE,\n        error: e\n      }\n    })\n    yield put(result)\n}\n\nfunction* findCustomerByIdSaga(action) {\n  let result = yield axios.get(`/customer/${action.id}`)\n      .then(data => {\n        return ({\n          type: FIND_CUSTOMER_BY_ID_SUCCESS,\n          data: data\n        })\n      })\n      .catch(e => {\n        return ({\n          type: FIND_CUSTOMER_BY_ID_FAILURE,\n          error: e\n        })\n      })\n  yield put(result)\n}\n\nfunction* findCustomerByStaffSaga(action) {\n  let parameter = pagination(action)\n\n  // console.log(\"PARAMETER: \", action)\n\n  parameter = parameter.replace(/\\s+/g, '+')\n  let result = yield axios.get(`/customer/principal?${parameter}`)\n      .then(data => {\n        return ({\n          type: FIND_CUSTOMER_BY_SUBMITTER_SUCCESS,\n          data: data.list,\n          pagination: {\n            size: data.size,\n            total: data.total,\n            page: data.page\n          },\n        })\n      })\n      .catch(e => {\n        return ({\n          type: FIND_CUSTOMER_BY_SUBMITTER_FAILURE,\n          error: e\n        })\n      })\n  yield put(result)\n}\n\nfunction* updateCustomerSaga(action) {\n  let result = false\n\n  yield put({\n    type: UPDATE_CUSTOMER,\n    data: result\n  })\n}\n\n\nexport function* watchFindAllCustomer() {\n  yield takeLatest(FIND_ALL_CUSTOMER, findAllCustomerSaga)\n}\n\nexport function* watchSaveCustomer() {\n  yield takeLatest(SAVE_CUSTOMER, saveCustomerSaga)\n}\n\nexport function* watchFindCustomerById() {\n  yield takeLatest(FIND_CUSTOMER_BY_ID, findCustomerByIdSaga)\n}\n\nexport function* watchUpdateCustomer() {\n  yield takeLatest(UPDATE_CUSTOMER, updateCustomerSaga)\n}\n\nexport function* watchFindAllCustomerByStaffSaga() {\n  yield takeLatest(FIND_ALL_CUSTOMER, findCustomerByStaffSaga)\n}\n","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\sagas\\signupSaga.js",["533"],"import axios from \"../api\";\nimport {\n    FIND_ACCOUNT_BY_ID,\n    FIND_ACCOUNT_BY_ID_FAILURE,\n    FIND_ACCOUNT_BY_ID_SUCCESS,\n    FIND_ALL_ACCOUNT,\n    FIND_ALL_ACCOUNT_FAILURE,\n    FIND_ALL_ACCOUNT_SUCCESS,\n    REMOVE_ACCOUNT_BY_ID,\n    REMOVE_ACCOUNT_BY_ID_FAILURE,\n    REMOVE_ACCOUNT_BY_ID_SUCCESS,\n    SAVE_ACCOUNT,\n    SAVE_ACCOUNT_FAILURE,\n    SAVE_ACCOUNT_SUCCESS, UPDATE_ACCOUNT, UPDATE_CUSTOMER\n} from \"../constants/actions\";\nimport {put, takeLatest} from \"redux-saga/effects\"\n\nfunction* findAllAccountSaga() {\n    let result = yield axios.get(\"/master\")\n        .then(data => {\n            return ({\n                type: FIND_ALL_ACCOUNT_SUCCESS,\n                data: data\n            })\n        })\n        .catch(err => {\n            return ({\n                type: FIND_ALL_ACCOUNT_FAILURE,\n                error: err\n            })\n        })\n    yield put(result)\n}\n\n\nfunction* saveAccountSaga(action) {\n    let model = action.model;\n    let method = 'POST', url = '/master/signup';\n    if (model.id) {\n        method = \"PATCH\";\n        url = `/master/${model.id}`\n    }\n\n    let result = yield axios({\n        url: url,\n        method: method,\n        data: model\n    })\n        .then(data => {\n            return {\n                type: SAVE_ACCOUNT_SUCCESS,\n                data: data\n            }\n        })\n        .catch(e => {\n            return {\n                type: SAVE_ACCOUNT_FAILURE,\n                error: e\n            }\n        })\n    yield put(result)\n}\n\nfunction* findAccountByIdSaga(action) {\n    console.log(\"SAGA ID\", action)\n    let result = yield axios.get(`/master/${action.id}`)\n        .then(data => {\n            console.log(\"DATA\", data)\n            return ({\n                type: FIND_ACCOUNT_BY_ID_SUCCESS,\n                data: data\n            })\n        })\n        .catch(e => {\n            return ({\n                type: FIND_ACCOUNT_BY_ID_FAILURE,\n                error: e\n            })\n        })\n    yield put(result)\n}\n\nfunction* updateAccountSaga(action) {\n    let result = false\n\n    yield put({\n        type: UPDATE_ACCOUNT,\n        data: result\n    })\n}\n\nfunction* removeAccountById(action) {\n    let result = yield axios.delete(`/master/${action.id}`)\n        .then(data => {\n            console.log(\"ini action\", data)\n            return ({\n                type: REMOVE_ACCOUNT_BY_ID_SUCCESS,\n                data: data\n            })\n        })\n        .catch(err => {\n            return ({\n                type: REMOVE_ACCOUNT_BY_ID_FAILURE,\n                error: err\n            })\n        })\n    yield put(result)\n}\n\nexport function* watchFindAllAccount() {\n    yield takeLatest(FIND_ALL_ACCOUNT, findAllAccountSaga)\n}\n\nexport function* watchSaveAccount() {\n    yield takeLatest(SAVE_ACCOUNT, saveAccountSaga)\n}\n\nexport function* watchFindByIdAccount() {\n    yield takeLatest(FIND_ACCOUNT_BY_ID, findAccountByIdSaga)\n}\n\nexport function* watchUpdateAccountById() {\n    yield takeLatest(UPDATE_ACCOUNT, updateAccountSaga)\n}\n\nexport function* watchRemoveById() {\n    yield takeLatest(REMOVE_ACCOUNT_BY_ID, removeAccountById)\n}","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\sagas\\approvalSaga.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\sagas\\totalSaga.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\sagas\\needSaga.js",["534","535"],"import {\n    FIND_NEEDTYPE_BY_ID,\n    FIND_ALL_NEEDTYPE,\n    FIND_ALL_NEEDTYPE_FAILURE,\n    FIND_ALL_NEEDTYPE_SUCCESS,\n    REMOVE_NEEDTYPE_BY_ID,\n    REMOVE_NEEDTYPE_BY_ID_FAILURE,\n    REMOVE_NEEDTYPE_BY_ID_SUCCESS,\n    SAVE_NEEDTYPE,\n    SAVE_NEEDTYPE_FAILURE,\n    SAVE_NEEDTYPE_SUCCESS,\n    UPDATE_NEEDTYPE,\n    FIND_NEEDTYPE_BY_ID_SUCCESS,\n    FIND_NEEDTYPE_BY_ID_FAILURE, UPDATE_NEEDTYPE_SUCCESS\n} from \"../constants/actions\";\nimport {put, takeLatest} from \"redux-saga/effects\"\nimport axios from \"axios\";\nimport pagination from \"./pagination\";\n\nfunction* findAllNeedSaga() {\n\n    let result = yield axios.get('/need')\n        .then(data => {\n            return ({\n                type: FIND_ALL_NEEDTYPE_SUCCESS,\n                data: data,\n\n            })\n            console.log(\"saga ni\", data.size)\n        })\n        .catch(err => {\n            return ({\n                type: FIND_ALL_NEEDTYPE_FAILURE,\n                error: err\n            })\n        })\n    yield put(result)\n}\n\n\nfunction* saveNeedSaga(action) {\n    let model = action.model;\n    let method = 'POST', url = '/need';\n\n    let result = yield axios({\n        url: url,\n        method: method,\n        data: model\n    })\n        .then(data => {\n            return {\n                type: SAVE_NEEDTYPE_SUCCESS,\n                data: data\n            }\n        })\n        .catch(e => {\n            return {\n                type: SAVE_NEEDTYPE_FAILURE,\n                error: e\n            }\n        })\n    yield put(result)\n}\n\n\nfunction* findNeedByIdSaga(action) {\n    // console.log(\"SAGA ID\", action)\n    let result = yield axios.get(`/need/${action.id}`)\n        .then(data => {\n            // console.log(\"DATA\", data)\n            return ({\n                type: FIND_NEEDTYPE_BY_ID_SUCCESS,\n                data: data\n            })\n        })\n        .catch(e => {\n            return ({\n                type: FIND_NEEDTYPE_BY_ID_FAILURE,\n                error: e\n            })\n        })\n    yield put(result)\n}\n\n// function* updateNeedSaga(action) {\n//     let result = false\n//\n//     yield put({\n//         type: UPDATE_NEEDTYPE,\n//         data: result\n//     })\n// }\n\nfunction* updateNeedSaga(action) {\n    const url = `/need/${action.id}`\n    const method = 'PUT'\n    const model = action.payload\n\n    let result = yield axios({\n        url: url,\n        method: method,\n        data: model\n    })\n        .then(data => {\n            return ({\n                type: UPDATE_NEEDTYPE_SUCCESS,\n                data: result\n            })\n        })\n        .catch(err => {\n            return ({\n                type: FIND_NEEDTYPE_BY_ID_FAILURE,\n                error: err\n            })\n        })\n    yield put(result)\n}\n\nfunction* removeNeedById(action) {\n    let result = yield axios.delete(`/need/${action.id}`)\n        .then(data => {\n            console.log(\"ini action\", data)\n            return ({\n                type: REMOVE_NEEDTYPE_BY_ID_SUCCESS,\n                data: data\n            })\n        })\n        .catch(err => {\n            return ({\n                type: REMOVE_NEEDTYPE_BY_ID_FAILURE,\n                error: err\n            })\n        })\n    yield put(result)\n}\n\n\nexport function* watchFindAllNeed() {\n    yield takeLatest(FIND_ALL_NEEDTYPE, findAllNeedSaga)\n}\n\nexport function* watchSaveNeed() {\n    yield takeLatest(SAVE_NEEDTYPE, saveNeedSaga)\n}\n\nexport function* watchFindByIdNeed() {\n    yield takeLatest(FIND_NEEDTYPE_BY_ID, findNeedByIdSaga)\n}\n\nexport function* watchUpdateNeedById() {\n    yield takeLatest(UPDATE_NEEDTYPE, updateNeedSaga)\n}\n\nexport function* watchRemoveNeedById() {\n    yield takeLatest(REMOVE_NEEDTYPE_BY_ID, removeNeedById)\n}","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\sagas\\roleSaga.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\sagas\\transactionSaga.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\sagas\\reportSaga.js",["536","537","538"],"\nimport axios from \"../api\";\nimport {put, takeLatest} from \"redux-saga/effects\";\nimport {\n    FIND_ALL_REPORT,\n    FIND_ALL_REPORT_FAILURE,\n    FIND_ALL_REPORT_SUCCESS,\n    FIND_REPORT_BY_STAFF,\n    FIND_REPORT_BY_STAFF_FAILURE,\n    FIND_REPORT_BY_STAFF_SUCCESS,\n    FIND_TRANSACTION_BY_STAFF_FAILURE,\n    FIND_TRANSACTION_BY_STAFF_SUCCESS\n} from \"../constants/actions\";\nimport pagination from \"./pagination\";\n\n\nfunction* findAllReportSaga(data) {\n\n    let parameter = pagination(data)\n\n    // console.log(\"PARAMETER: \", action)\n\n    parameter = parameter.replace(/\\s+/g, '+')\n\n    let result = yield axios.get(`/report?${parameter}`)\n        .then (data => {\n            return ({\n                type: FIND_ALL_REPORT_SUCCESS,\n                data : data.list,\n                pagination: {\n                    size: data.size,\n                    total: data.total,\n                    page: data.page\n                }\n            })\n        })\n        .catch(err => {\n            return({\n                type: FIND_ALL_REPORT_FAILURE,\n                error: err\n            })\n        })\n    yield put (result)\n}\n\nfunction* findReportByStaffSaga(action) {\n    let parameter = pagination(action)\n\n    // console.log(\"PARAMETER: \", action)\n\n    parameter = parameter.replace(/\\s+/g, '+')\n\n    let result = yield axios.get(`/report/principal?${parameter}`)\n        .then(data => {\n            return ({\n                type: FIND_REPORT_BY_STAFF_SUCCESS,\n                data: data.list,\n                pagination: {\n                    size: data.size,\n                    total: data.total,\n                    page: data.page\n                },\n            })\n        })\n        .catch(e => {\n            return ({\n                type: FIND_REPORT_BY_STAFF_FAILURE,\n                error: e\n            })\n        })\n    yield put(result)\n}\n\nexport function* watchFindAllReport() {\n    yield takeLatest (FIND_ALL_REPORT, findAllReportSaga)\n}\n\nexport function* watchFindReportByStaff() {\n    yield takeLatest (FIND_ALL_REPORT, findReportByStaffSaga)\n}","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\sagas\\loginSaga.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\reducers\\customerReducer.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\reducers\\transactionReducer.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\reducers\\loginReducer.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\reducers\\signupReducer.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\reducers\\reportReducer.js",["539","540","541"],"import {\n    FIND_ALL_REPORT,\n    FIND_ALL_REPORT_FAILURE,\n    FIND_ALL_REPORT_SUCCESS, FIND_REPORT_BY_STAFF, FIND_REPORT_BY_STAFF_FAILURE, FIND_REPORT_BY_STAFF_SUCCESS,\n    FIND_TRANSACTION_BY_STAFF, FIND_TRANSACTION_BY_STAFF_FAILURE, FIND_TRANSACTION_BY_STAFF_SUCCESS\n} from \"../constants/actions\";\n\nconst initialState = {\n    data: null,\n    pagination: {\n        size: null,\n        total: null,\n        page: null\n    },\n    isLoading: false,\n    error: null\n}\n\nexport const findAllReportReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FIND_ALL_REPORT:\n            return {\n                ...state,\n                pagination: {\n                    size: null,\n                    total: null,\n                    page: null\n                },\n                isLoading: true\n            };\n        case FIND_ALL_REPORT_SUCCESS:\n            return {\n                data: action.data,\n                pagination: {\n                    size: action.pagination.size,\n                    total: action.pagination.total,\n                    page: action.pagination.page\n                },\n                isLoading: false,\n                error: null\n            };\n        case FIND_ALL_REPORT_FAILURE:\n            return {\n                ...state,\n                isLoading: false,\n                error: action.error\n            };\n        default:\n            return {\n                ...state,\n                isLoading: false,\n                error: null\n            };\n    }\n}\n\nexport const findAllReportByStaff = (state = initialState, action) => {\n    // console.log(\"ini action\", action)\n    switch (action.type) {\n        case FIND_REPORT_BY_STAFF:\n            return {\n                ...state,\n                pagination: {\n                    size: null,\n                    total: null,\n                    page: null\n                },\n                isLoading: true\n            };\n        case FIND_REPORT_BY_STAFF_SUCCESS:\n            return {\n                data: action.data,\n                pagination: {\n                    size: action.pagination.size,\n                    total: action.pagination.total,\n                    page: action.pagination.page\n                },\n                isLoading: false,\n                error: null\n            };\n        case FIND_REPORT_BY_STAFF_FAILURE:\n            return {\n                ...state,\n                isLoading: false,\n                error: action.error\n            };\n        default:\n            return {\n                ...state,\n                isLoading: false,\n                error: null\n            };\n    }\n}","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\reducers\\approvalReducer.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\reducers\\needReducer.js",["542","543"],"import {\n    FIND_ALL_NEEDTYPE,\n    FIND_ALL_NEEDTYPE_FAILURE,\n    FIND_ALL_NEEDTYPE_SUCCESS,\n    FIND_NEEDTYPE_BY_ID,\n    FIND_NEEDTYPE_BY_ID_FAILURE,\n    FIND_NEEDTYPE_BY_ID_SUCCESS,\n    REMOVE_NEEDTYPE_BY_ID, REMOVE_NEEDTYPE_BY_ID_SUCCESS,\n    SAVE_NEEDTYPE,\n    SAVE_NEEDTYPE_FAILURE,\n    SAVE_NEEDTYPE_SUCCESS,\n    UPDATE_NEEDTYPE, UPDATE_NEEDTYPE_FAILURE,\n    UPDATE_NEEDTYPE_SUCCESS\n} from \"../constants/actions\";\nimport {act} from \"@testing-library/react\";\n\nconst initialState = {\n    data: null,\n    // pagination: {\n    //     size: null,\n    //     total: null,\n    //     page: null\n    // },\n    isLoading: false,\n    error: null\n}\n\nexport const findAllNeedReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case FIND_ALL_NEEDTYPE:\n            return {\n                ...state,\n                // pagination: {\n                //     size: null,\n                //     total: null,\n                //     page: null\n                // },\n                isLoading: true\n            };\n        case FIND_ALL_NEEDTYPE_SUCCESS:\n            return {\n                data: action.data,\n                // pagination: {\n                //     size: action.pagination.size,\n                //     total: action.pagination.total,\n                //     page: action.pagination.page\n                // },\n                isLoading: false,\n                error: null\n            };\n        case FIND_ALL_NEEDTYPE_FAILURE:\n            return {\n                ...state,\n                isLoading: false,\n                error: action.error\n            };\n        default:\n            return {\n                ...state,\n                isLoading: false,\n                error: null\n            };\n    }\n    console.log(\"ini action reducer\", action.pagination.size)\n}\n\nexport const saveNeedReducer = (state = {...initialState}, action) => {\n\n    switch (action.type) {\n        case SAVE_NEEDTYPE:\n            return {\n                ...state,\n                data: null,\n                isLoading: true\n            }\n        case SAVE_NEEDTYPE_SUCCESS:\n            return {\n                data: action.data,\n                isLoading: false,\n                error: null\n            };\n        case SAVE_NEEDTYPE_FAILURE:\n            return {\n                data: null,\n                isLoading: false,\n                error: action.error\n            };\n        default:\n            return {\n                ...state,\n                data: null,\n                isLoading: false,\n                error: null\n            };\n    }\n}\n\nexport const findNeedTypeByIdReducer =(state = initialState, action) => {\n    switch (action.type) {\n        case FIND_NEEDTYPE_BY_ID:\n            return {\n                ...state,\n                data: null,\n                isLoading: true\n            };\n        case FIND_NEEDTYPE_BY_ID_SUCCESS:\n            return {\n                data: action.data,\n                isLoading: false,\n                error: null\n            };\n        case FIND_NEEDTYPE_BY_ID_FAILURE:\n            return {\n                data: null,\n                isLoading: false,\n                error: action.error\n            };\n        default:\n            return {\n                ...state,\n                data: null,\n                isLoading: false,\n                error: null,\n            };\n    }\n}\n\nexport const updateNeedTypeReducer = (state = {...initialState}, action) => {\n    switch (action.type){\n        case UPDATE_NEEDTYPE:\n            return {\n                ...state,\n                data: null,\n                isLoading: true\n            }\n        case UPDATE_NEEDTYPE_SUCCESS:\n            return {\n                data: action.data,\n                isLoading: false,\n                error: null\n            };\n        case UPDATE_NEEDTYPE_FAILURE:\n            return {\n                data: null,\n                isLoading: false,\n                error: action.error\n            };\n        default:\n            return {\n                ...state,\n                data: null,\n                isLoading: false,\n                error: null\n            };\n    }\n}\n\nexport const removeNeedTypeByIdReducer = (state = {...initialState, data: false}, action) => {\n\n    switch (action.type) {\n        case REMOVE_NEEDTYPE_BY_ID:\n            return {\n                ...state,\n                data: false,\n                loading: true\n            }\n        case REMOVE_NEEDTYPE_BY_ID_SUCCESS:\n            return {\n                data: action.data,\n                loading: true,\n                error: null\n            }\n        default:\n            return false;\n    }\n}\n","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\reducers\\roleReducer.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\reducers\\userReducer.js",["544","545","546"],"import {\n    CHANGE_PASSWORD_USER, CHANGE_PASSWORD_USER_FAILURE,\n    CHANGE_PASSWORD_USER_SUCCESS,\n    SAVE_CUSTOMER,\n    SAVE_CUSTOMER_FAILURE,\n    SAVE_CUSTOMER_SUCCESS\n} from \"../constants/actions\";\n\nconst initialState = {\n    data: null,\n    isLoading: false,\n    error: null\n}\n\nexport const changePasswordReducer = (state = {...initialState}, action) => {\n    switch (action.type) {\n        case CHANGE_PASSWORD_USER:\n            return {\n                ...state,\n                data: null,\n                isLoading: true\n            }\n        case CHANGE_PASSWORD_USER_SUCCESS:\n            return {\n                data: action.data,\n                isLoading: false,\n                error: null\n            };\n        case CHANGE_PASSWORD_USER_FAILURE:\n            return {\n                data: null,\n                isLoading: false,\n                error: action.error\n            };\n        default:\n            return {\n                ...state,\n                data: null,\n                isLoading: false,\n                error: null\n            };\n    }\n}","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\reducers\\totalReducer.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\sagas\\userSaga.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\Error\\Error.js",["547","548"],"import React from 'react'\nimport undraw_page_not_found_su7k from \"../../assets/images/undraw_page_not_found_su7k.svg\";\nimport {FaFontAwesome} from \"react-icons/all\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faArrowLeft, faHome} from \"@fortawesome/free-solid-svg-icons\";\nimport {Button} from \"reactstrap\";\n\nconst Error = () => {\n    return (\n        <div className=\"container\">\n            <div className=\"row align-items-center\">\n                <div className=\"col-md-5 pr-lg-5 mb-md-0\">\n                    <div>\n                        <img src={undraw_page_not_found_su7k} alt=\"\"\n                             className=\"img-fluid d-none d-md-block\"/>\n                    </div>\n                </div>\n\n                <div className=\"col-md-7 col-lg-6 ml-auto\">\n                    <h1 style={{color: \"#e42256\", fontSize: \"55px\"}}>Page not found!</h1><br/>\n                    <h4 style={{color: \"#e42256\"}}>Sorry, you can not access this page!</h4><br/>\n                    <h4 style={{color: \"#e42256\"}}>Please, back to home!</h4><br/>\n                    <Button href=\"/dashboard\"\n                            style={{background: \"#e42256\"}}>\n                        <FontAwesomeIcon\n                            icon={faHome}/> Back\n                    </Button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Error","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\components\\Buttons\\index.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\transaction\\transactionForm\\TransactionForm.js",["549","550","551","552","553"],"import {InputGroupText, InputGroup, FormGroup, Form, Input, Label, Button, Col, Spinner} from \"reactstrap\";\nimport Container from \"../../../components/Containers/Container\";\nimport {Redirect, useHistory, useParams} from 'react-router-dom'\nimport {saveTransactionAction} from \"../../../actions/transactionAction\";\nimport React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\nimport {findCustomerByIdAction} from \"../../../actions/customerAction\";\nimport Header from \"../../../components/dashboard/Header\";\nimport Menu from \"../../../components/dashboard/Menu\";\nimport NumberFormat from 'react-number-format';\nimport {findAllNeedAction} from \"../../../actions/needAction\";\nimport {findAllNeedReducer} from \"../../../configs/reducers/needReducer\";\nimport swal from \"sweetalert\";\nimport Error from \"../../Error\";\n\nconst TransactionForm = ({savedTransaction, isLoading, error, saveTransactionAction, customer, findCustomerByIdAction, needs, findAllNeedAction}) => {\n    const {id} = useParams()\n    const [redirect] = useState(false)\n    const [data, setData] = useState({\n        customer: \"\"\n    })\n    const [currency, setCurrency] = useState({})\n    const [checkLoan, setCheckLoan] = useState({\n        income: 0,\n        outcome: 0,\n        loan: 0\n    })\n    console.log(\"checkloan\",checkLoan.loan)\n    console.log(\"checkloan\",checkLoan.outcome)\n    console.log(\"checkloan\",checkLoan.income)\n    const history = useHistory()\n\n    const onReload = () => {\n        findAllNeedAction();\n    }\n\n    useEffect(onReload, [findAllNeedAction])\n\n    useEffect(() => {\n        findAllNeedAction()\n    }, [findAllNeedAction])\n\n    useEffect(() => {\n        if (id !== data.customer) {\n            findCustomerByIdAction(id);\n            setData({\n                ...data,\n                customer: id\n            })\n        }\n    }, [])\n\n    useEffect(() => {\n        // console.log(CUSTOMER , customer, DATA , data)\n        console.log(data)\n    }, [data])\n\n    useEffect(() => {\n        if (savedTransaction) {\n\n            // if (localStorage.getItem(\"roles\") == \"MASTER\") {\n            //     swal(\"Success!\", \"Add transaction success!\", \"success\");\n            //     history.push('/transaction')\n            // } else if (localStorage.getItem(\"roles\") == \"STAFF\") {\n            //     swal(\"Success!\", \"Add transaction success!\", \"success\");\n            //     history.push('/approval/staff')\n            // } else {\n            //     swal(\"*Sorry you are not allowed to sign here\")\n            // }\n            history.push('/staff/transaction')\n            swal(\"Success!\", \"Add transaction success!\", \"success\")\n        }\n    }, [savedTransaction, history])\n\n    const handleChange = (e) => {\n        let name = e.target.name\n        let value = e.target.value\n        setData({...data, [name]: value})\n    }\n\n    const handleCurrencyIncome = (e) => {\n        let name = e.target.name\n        let value = e.target.value\n        setCheckLoan({...checkLoan, income: parseInt(value.split(\",\").join(\"\"))})\n\n        if (parseInt(value) > 0) {\n            setCurrency({...currency, [name]: value})\n            setData({...data, [name]: value.split(\",\").join(\"\")})\n        } else {\n            swal(\"number must be positive!\", \"\", \"error\");\n        }\n    }\n    const handleCurrencyLoan = (e) => {\n        let name = e.target.name\n        let value = e.target.value\n        setCheckLoan({...checkLoan, loan: parseInt(value.split(\",\").join(\"\"))})\n\n        if (parseInt(value) > 0) {\n            setCurrency({...currency, [name]: value})\n            setData({...data, [name]: value.split(\",\").join(\"\")})\n        } else {\n            swal(\"number must be positive!\", \"\", \"error\");\n        }\n    }\n    const handleCurrencyOutcome = (e) => {\n        let name = e.target.name\n        let value = e.target.value\n        setCheckLoan({...checkLoan, outcome: parseInt(value.split(\",\").join(\"\"))})\n\n        if (parseInt(value) > 0) {\n            setCurrency({...currency, [name]: value})\n            setData({...data, [name]: value.split(\",\").join(\"\")})\n        } else {\n            swal(\"number must be positive!\", \"\", \"error\");\n        }\n    }\n\n    if (error){\n        swal(\"Error\", \"\", \"error\");\n    }\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        console.log(\"Checkloan\", checkLoan.loan)\n        if (checkLoan.loan < 1) {\n            swal(\"Error Loan\", \"\", \"error\")\n        } else if (checkLoan.income < 1) {\n            swal(\"Error Income\", \"\", \"error\")\n        } else if (checkLoan.outcome < 1) {\n            swal(\"Error Outcome\", \"\", \"error\")\n        } else {\n            saveTransactionAction(data)\n        }\n    }\n    // console.log(\"DATA s\",data)\n\n    if (redirect === true) {\n        return <Redirect to='/transaction'/>\n    }\n\n    return (\n        <div>\n            {\n                localStorage.getItem(\"inputTransaction\") == \"true\" ?\n                    <>\n                        <Container error={error}/>\n                        <Header/>\n                        <Menu/>\n                        <div className=\"content-wrapper\">\n                            <div className=\"content-header\">\n                                <div className=\"container-fluid\">\n                                    <div className=\"row mb-2\" style={{marginTop: '30px', display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n                                        <div className=\"col-sm-11\">\n                                            <h1 className=\"m-0 text-dark\">Form Transaction</h1>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"content\">\n                                <div className=\"container-fluid\">\n                                    <div className=\"row\" style={{display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n                                        <div className=\"col-lg-11\">\n                                            <div className=\"card\">\n                                                <div className=\"card-body table-responsive p-md-5\">\n                                                    <div className=\"col-md-12\">\n                                                        <div className=\"form form-container\">\n                                                            {!isLoading ? needs &&\n                                                                <Form onSubmit={handleSubmit}>\n                                                                    <FormGroup row>\n                                                                        <Label for=\"income\" sm={2}\n                                                                               style={{textAlign: \"left\"}}>Income\n                                                                            <span style={{color: \"red\"}}> *</span>\n                                                                        </Label>\n                                                                        <Col sm={12}>\n                                                                            <InputGroup>\n                                                                                <InputGroupText>Rp</InputGroupText>\n                                                                                {/*<Input >*/}\n                                                                                <NumberFormat\n                                                                                    style={{width:\"96%\", height:\"calc(1.5em + .75rem + 8px)\",\n                                                                                        borderRadius:\"0.2vw\", border: \"1px solid #ced4da\", paddingLeft:\"10px\"}}\n                                                                                    required\n                                                                                    name=\"income\"\n                                                                                    min=\"0\"\n                                                                                    id=\"tanpa-rupiah\"\n                                                                                    onChange={handleCurrencyIncome}\n                                                                                    placeholder=\"input nominal\"\n                                                                                    thousandSeparator={true}/>\n                                                                                {/*</Input>*/}\n                                                                                {/*<InputGroupText>.00</InputGroupText>*/}\n                                                                            </InputGroup>\n                                                                        </Col>\n                                                                    </FormGroup>\n                                                                    <FormGroup row>\n                                                                        <Label for=\"outcome\" sm={2}\n                                                                               style={{textAlign: \"left\"}}>Outcome\n                                                                            <span style={{color: \"red\"}}> *</span>\n                                                                        </Label>\n                                                                        <Col sm={12}>\n                                                                            <InputGroup>\n                                                                                <InputGroupText>Rp</InputGroupText>\n                                                                                <NumberFormat\n                                                                                    style={{width:\"96%\", height:\"calc(1.5em + .75rem + 8px)\",\n                                                                                        borderRadius:\"0.2vw\", border: \"1px solid #ced4da\", paddingLeft:\"10px\"}}\n                                                                                    required\n                                                                                    name=\"outcome\"\n                                                                                    min=\"0\"\n                                                                                    id=\"tanpa-rupiah\"\n                                                                                    onChange={handleCurrencyOutcome}\n                                                                                    placeholder=\"input nominal\"\n                                                                                    thousandSeparator={true}/>\n                                                                                {/*<InputGroupText>.00</InputGroupText>*/}\n                                                                            </InputGroup>\n                                                                        </Col>\n                                                                    </FormGroup>\n                                                                    <FormGroup row>\n                                                                        <Label for=\"loan\" sm={2}\n                                                                               style={{textAlign: \"left\"}}>Loan Amount\n                                                                            <span style={{color: \"red\"}}> *</span>\n                                                                        </Label>\n                                                                        <Col sm={12}>\n                                                                            <InputGroup>\n                                                                                <InputGroupText>Rp</InputGroupText>\n                                                                                <NumberFormat\n                                                                                    style={{width:\"96%\", height:\"calc(1.5em + .75rem + 8px)\",\n                                                                                        borderRadius:\"0.2vw\", border: \"1px solid #ced4da\", paddingLeft:\"10px\"}}\n                                                                                    required\n                                                                                    name=\"loan\"\n                                                                                    min=\"0\"\n                                                                                    id=\"tanpa-rupiah\"\n                                                                                    onChange={handleCurrencyLoan}\n                                                                                    placeholder=\"input nominal\"\n                                                                                    thousandSeparator={true}/>\n                                                                                {/*<InputGroupText>.00</InputGroupText>*/}\n                                                                            </InputGroup>\n                                                                        </Col>\n                                                                    </FormGroup>\n                                                                    <FormGroup row>\n                                                                        <Label htmlFor=\"tenor\" sm={2}\n                                                                               style={{textAlign: \"left\"}}>Tenor\n                                                                            <span style={{color: \"red\"}}> *</span>\n                                                                            <p style={{\n                                                                                fontSize: \"0.7vw\",\n                                                                                color: \"grey\",\n                                                                                marginBottom:'0px'\n                                                                            }}>(max. 6 month)</p>\n                                                                        </Label>\n                                                                        <Col sm={12}>\n                                                                            <Input required\n                                                                                   onChange={handleChange}\n                                                                                   type=\"number\" min=\"1\" max={6}\n                                                                                   name=\"tenor\"\n                                                                                   placeholder=\"month\"/>\n                                                                        </Col>\n                                                                    </FormGroup>\n                                                                    <FormGroup row>\n                                                                        <Label for=\"interestRate\" sm={2}\n                                                                               style={{textAlign: \"left\"}}>Interest Rate\n                                                                            <span style={{color: \"red\"}}> *</span>\n                                                                        </Label>\n                                                                        <Col sm={12}>\n                                                                            <InputGroup>\n                                                                                <Input\n                                                                                    required\n                                                                                    onChange={handleChange}\n                                                                                    name=\"interestRate\"\n                                                                                    placeholder=\"interest rate\" min={0}\n                                                                                    max={100}\n                                                                                    type=\"number\" min=\"0\" step=\"1\"/>\n                                                                                <InputGroupText>%</InputGroupText>\n                                                                            </InputGroup>\n                                                                        </Col>\n                                                                    </FormGroup>\n                                                                    <FormGroup row>\n                                                                        <Label for=\"select\" sm={2}\n                                                                               style={{textAlign: \"left\"}}>Loan Purpose\n                                                                            <span style={{color: \"red\"}}> *</span>\n                                                                        </Label>\n                                                                        <Col sm={12}>\n                                                                            <select\n                                                                                style={{width:\"100%\", height:\"calc(1.5em + .75rem + 10px)\",\n                                                                                    borderRadius:\"0.2vw\", outlineColor:\"#ced4da\", border: \"1px solid #ced4da\"}}\n                                                                                onChange={e => setData({\n                                                                                ...data,\n                                                                                needType: e.target.value\n                                                                            })}>\n                                                                                <option selected disabled hidden>Choose\n                                                                                    loan purpose\n                                                                                </option>\n                                                                                {needs?.list?.map((e, i) => (\n                                                                                    <option key={i} value={e.id}\n                                                                                            data={e}\n                                                                                            selected={e.id == data?.id || false}>{e.type}</option>\n                                                                                ))}\n                                                                            </select>\n                                                                        </Col>\n                                                                    </FormGroup>\n\n                                                                    <FormGroup row>\n                                                                        <Label for=\"notes\" sm={2}\n                                                                               style={{textAlign: \"left\"}}>Note\n                                                                            <span style={{color: \"red\"}}> *</span>\n                                                                            <p style={{\n                                                                                fontSize: \"0.7vw\",\n                                                                                color: \"grey\", marginBottom:'0px'\n                                                                            }}>(max. 250 character )</p>\n                                                                        </Label>\n                                                                        <Col sm={12}>\n                                                                            <Input\n                                                                                required\n                                                                                onChange={handleChange}\n                                                                                type=\"textarea\"\n                                                                                name=\"notes\"\n                                                                                id=\"notes\"\n                                                                                maxLength={250}\n                                                                                placeholder=\"input note\"/>\n                                                                        </Col>\n                                                                    </FormGroup>\n\n                                                                    <p style={{fontSize:\"1vw\", color:\"red\", marginBottom:'0px'}}>* is required</p>\n\n                                                                    <FormGroup check row>\n                                                                        <Col sm={{size: 10, offset: 2}} style={{textAlign: \"right\"}}>\n                                                                            <Button style={{background: \"#e42256\"}}>\n                                                                                <FontAwesomeIcon icon={faSave} style={{marginRight:\"0.5vw\"}}/>\n                                                                                Submit\n                                                                            </Button> {' '}\n                                                                            <Button href=\"/staff/customer\"\n                                                                                    style={{background: \"#e42256\"}}>\n                                                                                <FontAwesomeIcon icon={faArrowLeft} style={{marginRight:\"0.5vw\"}}/>\n                                                                                Cancel\n                                                                            </Button>\n                                                                        </Col>\n                                                                    </FormGroup>\n                                                                </Form> :\n                                                                <div className=\"spinner\">\n                                                                    <Spinner style={{ width: '5rem', height: '5rem', color:\"#e42256\" }} />{' '}\n                                                                </div>\n                                                            }\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                    :\n                    <div>\n                        <Error/>\n                    </div>\n            }\n        </div>\n\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        customer: state.findCustomerByIdReducer.data,\n        savedTransaction: state.saveTransactionReducer.data,\n        isLoading: state.saveTransactionReducer.isLoading,\n        error: state.saveTransactionReducer.error,\n        needs: state.findAllNeedReducer.data\n    }\n    console.log(\"mapStateToProps\", findAllNeedReducer.data)\n}\n\nconst mapDispatchToProps = {findCustomerByIdAction, saveTransactionAction, findAllNeedAction}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionForm)","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\transaction\\transactionList\\TransactionList.js",["554","555","556","557","558","559"],"import {Button, ButtonGroup,  Spinner} from \"reactstrap\";\nimport Containers from '../../../components/Containers/Container'\nimport React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {findAllTransactionAction} from \"../../../actions/transactionAction\";\nimport TransactionRow from \"./TransactionRow\";\nimport Header from \"../../../components/dashboard/Header\";\nimport Menu from \"../../../components/dashboard/Menu\";\nimport TableScrollbar from 'react-table-scrollbar';\nimport Error from \"../../Error\";\nimport {PaginationButton} from \"../../../components/Buttons\";\nimport Footer from \"../../../components/dashboard/Footer\";\n\nfunction TransactionList({\n                             isLoading,\n                             transactions,\n                             error,\n                             findAllTransactionAction,\n    size, total, currentPage\n                         }) {\n\n    const [transaction, setTransaction] = useState([])\n\n    const [pageParam, setPageParam] = useState(0)\n    const [sizeParam, setSizeParam] = useState(10)\n\n    const totalPage = Math.ceil(total/size)\n\n    useEffect(() => {\n        onReload()\n    }, [pageParam, sizeParam])\n\n    useEffect(() => {\n        onReload()\n    }, [])\n\n    useEffect(() => {\n        if(transaction) {\n            setTransaction(transactions)\n        }\n    }, [transactions])\n\n    const onReload = () => {\n        findAllTransactionAction(\n            {page: pageParam, size: sizeParam}\n        );\n    };\n\n    useEffect(onReload, [findAllTransactionAction, pageParam, sizeParam])\n\n    const handleLimit = (limit) => {\n        setSizeParam(limit)\n        setPageParam(0)\n    }\n\n    return (\n        <div>\n            {\n               localStorage.getItem(\"readAllTransaction\") == \"true\" ?\n                    <>\n                        <Containers error={error}>\n                            <Header/>\n                            <Menu/>\n                            <div className=\"content-wrapper\">\n                                <div className=\"content-header\">\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row mb-2\" style={{marginTop: '30px', display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n                                            <div className=\"col-sm-11\">\n                                                <h1 className=\"m-0 text-dark\">All Transaction</h1>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"content\">\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row\" style={{ display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n                                            <div className=\"col-lg-11\">\n\n                                                <div className=\"card\">\n                                                    <div className=\"card-header border-0\">\n                                                        {/*<h3 className=\"card-title\">List Customer</h3>*/}\n                                                        <div className=\"card-tools\">\n\n                                                        </div>\n                                                    </div>\n\n                                                    <div className=\"card-body table-responsive p-0\">\n\n                                                        <TableScrollbar rows={10}>\n                                                        <table className=\"table table-striped table-valign-middle\">\n                                                            <thead style={{textAlign: \"left\", background:\"#FCE051\"}}>\n                                                            <tr>\n                                                                <th>No</th>\n                                                                <th>Name</th>\n                                                                <th>Employee Type</th>\n                                                                <th>Loan</th>\n                                                                <th>Tenor</th>\n                                                                <th>Interest Rate</th>\n                                                                <th>Pending Approval</th>\n                                                            </tr>\n                                                            </thead>\n                                                            <tbody style={{textAlign: \"left\"}}>\n                                                            {\n                                                                !isLoading ?\n                                                                    // transactions?.list?.map((e, i) => {\n                                                                    transaction.map((e, i) => {\n                                                                        return (\n                                                                            <TransactionRow key={i} data={e}\n                                                                                            number={(pageParam * sizeParam) + 1 + i}/>\n                                                                        )\n                                                                    }) :\n                                                                    <div className=\"spinner\">\n                                                                        <Spinner style={{ width: '5rem', height: '5rem', color:\"#e42256\" }} />{' '}\n                                                                    </div>\n                                                            }\n                                                            </tbody>\n                                                        </table>\n                                                        </TableScrollbar>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <br/>\n                                        <PaginationButton\n                                            currentPage = {currentPage}\n                                            setPage={setPageParam}\n                                            totalPage={totalPage}\n                                            handleLimit={handleLimit}\n                                            size={sizeParam}\n                                        />\n                                        <br/>\n                                    </div>\n                                </div>\n                            </div>\n                            <Footer/>\n                        </Containers>\n                    </>\n                    :\n                    <div>\n                       <Error/>\n                    </div>\n            }\n        </div>\n    )\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        error: state.findAllTransactionReducer.error,\n        transactions: state.findAllTransactionReducer.data || [],\n        isLoading: state.findAllTransactionReducer.isLoading,\n        size: state.findAllTransactionReducer.pagination.size,\n        total: state.findAllTransactionReducer.pagination.total,\n        currentPage: state.findAllTransactionReducer.pagination.page\n    }\n}\n\nconst mapDispatchToProps = {\n    findAllTransactionAction\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionList);","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\customer\\customerForm\\CustomerForm.js",["560","561","562","563","564","565","566","567","568","569","570","571","572","573"],"import React, {useState, useEffect} from 'react'\nimport {useHistory, useParams} from 'react-router-dom'\nimport {findCustomerByIdAction, saveCustomerAction} from \"../../../actions/customerAction\"\nimport { Redirect} from \"react-router-dom\"\nimport {connect} from \"react-redux\"\nimport {Button, Form, FormGroup, Input, Label, Col, Spinner} from \"reactstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\nimport Container from \"../../../components/Containers/Container\";\nimport DropdownList from \"../../../components/DropdownList/DropdownList\";\nimport Header from \"../../../components/dashboard/Header\";\nimport Menu from \"../../../components/dashboard/Menu\";\nimport swal from \"sweetalert\";\nimport Error from \"../../Error\";\nimport Footer from \"../../../components/dashboard/Footer\";\n\nconst CustomerForm = ({error, isLoading, saveCustomer, saveCustomerAction, customer, findCustomerByIdAction}) => {\n    const {id} = useParams()\n    const [roles, setRoles] = useState(localStorage.getItem(\"roles\"))\n    const [redirect] = useState(false)\n    const [photo, setPhoto] = useState({\n        profilePhoto: {},\n        idPhoto: {}\n    })\n    const [data, setData] = useState({\n        name: \"\",\n        email: \"\",\n        idNumber: 0,\n        address: \"\",\n        employeeType: \"\",\n        contractLength: \"\",\n        contractStart: \"\",\n        idPhoto: \"\",\n        profilePhoto: \"\"\n    })\n    const history = useHistory()\n\n    useEffect(() => {\n        if (id !== data.id) {\n            findCustomerByIdAction(id);\n            setData(customer)\n        }\n    }, [customer])\n\n    useEffect(() => {\n        if (saveCustomer) {\n            history.push('/staff/customer')\n        }\n    }, [saveCustomer, history])\n\n    const handlePhoto = async (e) => {\n        let name = e.target.name\n        let value = e.target.files[0]\n        setPhoto({...photo, [name]: value})\n\n        const formData = new FormData()\n        formData.append(\"file\", value)\n        formData.append(\"upload_preset\", \"ve2u0qv8\")\n\n        const response = await fetch(\"https://api.cloudinary.com/v1_1/nielnaga/image/upload\", {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            body: formData // body data type must match \"Content-Type\" header\n        }).then(res => res.json())\n            .then(res => {\n                console.log(res.url)\n                setData({\n                    ...data,\n                    [name]: res.url\n                })\n            })\n    }\n\n    const uploadIdPhoto = async () => {\n        const formData = new FormData()\n        formData.append(\"file\", photo.idPhoto)\n        formData.append(\"upload_preset\", \"ve2u0qv8\")\n\n        const response = await fetch(\"https://api.cloudinary.com/v1_1/nielnaga/image/upload\", {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            body: formData // body data type must match \"Content-Type\" header\n        }).then(res => res.json())\n            .then(res => {\n                console.log(res.url)\n                setData({\n                    ...data,\n                    idPhoto: res.url\n                })\n            })\n    }\n\n    const uploadProfilePhoto = async () => {\n        const formData = new FormData()\n        formData.append(\"file\", photo.profilePhoto)\n        formData.append(\"upload_preset\", \"ve2u0qv8\")\n\n        const response = await fetch(\"https://api.cloudinary.com/v1_1/nielnaga/image/upload\", {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            body: formData // body data type must match \"Content-Type\" header\n        }).then(res => res.json())\n            .then(res => {\n                console.log(res.url)\n                setData({\n                    ...data,\n                    profilePhoto: res.url\n                })\n            })\n    }\n\n    const handleNumber = (e) => {\n        let name = e.target.name\n        let value = e.target.value\n        if(name = \"idNumber\") {\n            if(value.length <= 16)\n                setData({...data, [name]: value})\n        } else {\n            setData({...data, [name]: value})\n        }\n\n    }\n\n    const handleChange = (e) => {\n        let name = e.target.name\n        let value = e.target.value\n        if(data.idNumber.length >= 1){\n            if(data.idNumber.length != 16){\n                swal(\"Sorry Number Identity must be 16 digit!\", \"\", \"warning\");\n            }\n        }\n        setData({...data, [name]: value})\n    }\n\n    const handleEmployee = (e) => {\n        setData({...data, employeeType: e})\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if(data?.idNumber.length == 16  ) {\n            saveCustomerAction(data)\n            swal(\"Save Success!\", \"\", \"success\");\n        } else {\n            swal(\"Sorry Number Identity must be 16 digit!\", \"\", \"warning\");\n        }\n    }\n\n    if (redirect === true) {\n        return <Redirect to=\"/customer\"/>\n    }\n\n    return (\n        <div>\n            {\n                localStorage.getItem(\"inputCustomer\") == \"true\"  ?\n                    <>\n                        <div>\n                            <Container error={error}/>\n                            <Header/>\n                            <Menu/>\n                            <div className=\"content-wrapper\">\n                                <div className=\"content-header\">\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row mb-2\" style={{\n                                            marginTop: '30px',\n                                            display: \"flex\",\n                                            justifyContent: \"center\",\n                                            alignItems: \"center\"\n                                        }}>\n                                            <div className=\"col-sm-11\">\n                                                <h1 className=\"m-0 text-dark\">Form Customer</h1>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"content\">\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row\" style={{display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n                                            <div className=\"col-lg-11\">\n                                                <div className=\"card\">\n                                                    <div className=\"card-body table-responsive p-md-5\">\n                                                        <div className=\"col-md-12\">\n                                                            <div className=\"form form-container\">\n                                                                {!isLoading ?\n                                                                    <Form onSubmit={handleSubmit}>\n                                                                        <FormGroup row>\n                                                                            <Label htmlFor=\"name\" sm={3} style={{textAlign:\"left\"}}>Full Name\n                                                                                <span style={{color:\"red\"}}> *</span>\n                                                                            </Label>\n                                                                            <Col sm={12}>\n                                                                                <Input\n                                                                                    required\n                                                                                    onChange={handleChange}\n                                                                                    value={data?.name || ''}\n                                                                                    type=\"text\"\n                                                                                    name=\"name\"\n                                                                                    placeholder=\"input name\"/>\n                                                                            </Col>\n                                                                        </FormGroup>\n                                                                        <FormGroup row>\n                                                                            <Label htmlFor=\"email\" sm={3} style={{textAlign:\"left\"}}>Email\n                                                                                <span style={{color:\"red\"}}> *</span></Label>\n                                                                            <Col sm={12}>\n                                                                                <Input\n                                                                                    required\n                                                                                    onChange={handleChange}\n                                                                                    value={data?.email || ''}\n                                                                                    type=\"email\"\n                                                                                    name=\"email\"\n                                                                                    placeholder=\"input email\"/>\n                                                                            </Col>\n                                                                        </FormGroup>\n                                                                        <FormGroup row>\n                                                                            <Label htmlFor=\"idNumber\" sm={3} style={{textAlign:\"left\"}}>Number Identity\n                                                                                <span style={{color:\"red\"}}> *</span></Label>\n                                                                            <Col sm={12}>\n                                                                                <Input\n                                                                                    required\n                                                                                    onChange={handleNumber}\n                                                                                    value={data?.idNumber || ''}\n                                                                                    type=\"number\"\n                                                                                    name=\"idNumber\"\n                                                                                    disabled={false}\n                                                                                    minLength={16}\n                                                                                    placeholder=\"input ID number\"/>\n                                                                            </Col>\n                                                                        </FormGroup>\n                                                                        <FormGroup row>\n                                                                            <Label htmlFor=\"exampleText\"\n                                                                                   sm={3} style={{textAlign:\"left\"}}>Address\n                                                                                <span style={{color:\"red\"}}> *</span></Label>\n                                                                            <Col sm={12}>\n                                                                                <Input\n                                                                                    required\n                                                                                    onChange={handleChange}\n                                                                                    value={data?.address || ''}\n                                                                                    type=\"textarea\"\n                                                                                    name=\"address\"\n                                                                                    placeholder=\"address\"/>\n                                                                            </Col>\n                                                                        </FormGroup>\n                                                                        <FormGroup row>\n                                                                            <Label htmlFor=\"select\" sm={3} style={{textAlign:\"left\"}}>Employee Type\n                                                                                <span style={{color:\"red\"}}> *</span></Label>\n                                                                            <Col sm={12}>\n                                                                                <DropdownList\n                                                                                    data={[\n                                                                                        // {value: \"NON\", label: \"NON EMPLOYEE\"},\n                                                                                        {\n                                                                                            value: \"EMPLOYEE\",\n                                                                                            label: \"EMPLOYEE\"\n                                                                                        },\n                                                                                        {\n                                                                                            value: \"CONTRACT\",\n                                                                                            label: \"CONTRACT\"\n                                                                                        }\n                                                                                    ]}\n                                                                                    value={data?.employeeType}\n                                                                                    placeholder=\"Select Employee Type\"\n                                                                                    handleDropdown={handleEmployee}\n                                                                                />\n                                                                            </Col>\n                                                                        </FormGroup>\n\n                                                                        {data.employeeType == \"CONTRACT\"\n                                                                        &&\n                                                                        <div>\n                                                                            <FormGroup row>\n                                                                                <Label for=\"contractStart\" sm={3} style={{textAlign:\"left\"}}>Contract\n                                                                                    Start\n                                                                                    <span style={{color:\"red\"}}> *</span></Label>\n                                                                                <Col sm={12}>\n                                                                                    <Input\n                                                                                        required\n                                                                                        onChange={handleChange}\n                                                                                        value={data?.contractStart || ''}\n                                                                                        type=\"date\"\n                                                                                        name=\"contractStart\"\n                                                                                        id=\"contractStart\"\n                                                                                        placeholder=\"contract start\"/>\n                                                                                </Col>\n                                                                            </FormGroup>\n                                                                            <FormGroup row>\n                                                                                <Label for=\"contractLength\" sm={3} style={{textAlign:\"left\"}}>Contract\n                                                                                    Duration\n                                                                                    <span style={{color:\"red\"}}> *</span>\n                                                                                    <p style={{fontSize:\"0.7vw\", color:\"grey\", marginBottom:'0'}}>Month</p></Label>\n                                                                                <Col sm={12}>\n                                                                                    <Input\n                                                                                        required\n                                                                                        onChange={handleChange}\n                                                                                        value={data?.contractLength || ''}\n                                                                                        type=\"number\" min=\"1\"\n                                                                                        name=\"contractLength\"\n                                                                                        id=\"contractLength\"\n                                                                                        placeholder=\"contract duration\"/>\n                                                                                </Col>\n                                                                            </FormGroup>\n                                                                        </div>\n                                                                        }\n                                                                        <FormGroup row>\n                                                                            <Label for=\"idPhoto\" sm={3} style={{textAlign:\"left\"}}>ID Card\n                                                                                <span style={{color:\"red\"}}> *</span>\n                                                                                <p style={{fontSize:\"0.7vw\", color:\"grey\", marginBottom:'0px'}}>image (.jpeg / .png)</p></Label>\n                                                                            <Col sm={12}>\n                                                                                <Input\n                                                                                    required\n                                                                                    type=\"file\"\n                                                                                    name=\"idPhoto\"\n                                                                                    onChange={handlePhoto}\n                                                                                    accept=\"image/jpeg, image/png\">\n                                                                                </Input>\n                                                                            </Col>\n                                                                        </FormGroup>\n                                                                        <FormGroup row>\n                                                                            <Label for=\"profilePhoto\" sm={3} style={{textAlign:\"left\"}}>Profile\n                                                                                Photo\n                                                                                <span style={{color:\"red\"}}> *</span>\n                                                                                <p style={{fontSize:\"0.7vw\", color:\"grey\", marginBottom:'0px'}}>image (.jpeg / .png)</p></Label>\n                                                                            <Col sm={12}>\n                                                                                <Input\n                                                                                    required\n                                                                                    type=\"file\"\n                                                                                    name=\"profilePhoto\"\n                                                                                    onChange={handlePhoto}\n                                                                                    accept=\"image/jpeg, image/png\"/>\n                                                                            </Col>\n                                                                        </FormGroup>\n\n                                                                        <p style={{fontSize:\"1vw\", color:\"red\", marginBottom:'0px'}}>* is required</p>\n\n\n                                                                    <FormGroup check row>\n                                                                            <Col sm={{size: 10, offset: 2}}\n                                                                                 style={{textAlign: \"right\"}}>\n                                                                                <Button style={{background: \"#e42256\"}}>\n                                                                                    <FontAwesomeIcon icon={faSave} style={{marginRight:\"0.5vw\"}}/>\n                                                                                    Submit\n                                                                                </Button> {' '}\n                                                                                <Button href=\"/staff/customer\"\n                                                                                        style={{background: \"#e42256\"}}>\n                                                                                    <FontAwesomeIcon\n                                                                                        icon={faArrowLeft} style={{marginRight:\"0.5vw\"}}/>\n                                                                                    Cancel\n                                                                                </Button>\n                                                                            </Col>\n                                                                        </FormGroup>\n                                                                    </Form> :\n                                                                    <div className=\"spinner\">\n                                                                        <Spinner style={{ width: '5rem', height: '5rem', color:\"#e42256\" }} />{' '}\n                                                                    </div>\n                                                                }\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <Footer/>\n\n                        </div>\n                        // </>\n                    :\n                    <div>\n                        <Error/>\n                    </div>\n            }\n        </div>\n    )\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        // call reducer\n        error: state.findCustomerByIdReducer.error || state.saveCustomerReducer.error,\n        customer: state.findCustomerByIdReducer.data,\n        isLoading: state.findCustomerByIdReducer.isLoading,\n        update: state.updateCustomerReducer,\n        saveCustomer: state.saveCustomerReducer.data\n    }\n}\n\nconst mapDispatchToProps = {findCustomerByIdAction, saveCustomerAction}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerForm)\n","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\customer\\listCustomer\\ListCustomer.js",["574","575","576","577","578"],"import React, {useEffect, useState} from 'react'\nimport {findAllCustomerAction} from '../../../actions/customerAction'\nimport {connect} from \"react-redux\"\nimport Containers from \"../../../components/Containers/Container\";\nimport RowCustomer from \"./RowCustomer\";\nimport Header from \"../../../components/dashboard/Header\";\nimport Menu from \"../../../components/dashboard/Menu\";\nimport TableScrollbar from 'react-table-scrollbar';\nimport Error from \"../../Error\";\nimport Footer from \"../../../components/dashboard/Footer\";\nimport {PaginationButton} from \"../../../components/Buttons\";\nimport {Spinner} from \"reactstrap\";\n\nfunction CustomerList({\n                          error,\n                          isLoading,\n                          customers,\n                          findAllCustomerAction\n    ,size, total, currentPage\n                      }) {\n\n    const [customer, setCustomer] = useState([])\n\n    const [pageParam, setPageParam] = useState(0)\n    const [sizeParam, setSizeParam] = useState(10)\n\n    const totalPage = Math.ceil(total/size)\n\n    useEffect(() => {\n        onReload()\n    }, [pageParam, sizeParam])\n\n    useEffect(() => {\n        onReload()\n    }, [])\n\n    useEffect(() => {\n        if (customer) {\n            setCustomer(customers)\n        }\n    }, [customers])\n\n    console.log(\"ini customers\", customer)\n\n    const onReload = () => {\n        findAllCustomerAction(\n            {page: pageParam, size: sizeParam}\n        );\n    };\n\n    const handleLimit = (limit) => {\n        setSizeParam(limit)\n        setPageParam(0)\n    }\n\n    useEffect(onReload, [findAllCustomerAction, pageParam, sizeParam])\n\n    return (\n\n        <div>\n            {\n                localStorage.getItem(\"readAllCustomer\") == \"true\" ?\n                    <>\n                        <Containers error={error}>\n                            <Header/>\n                            <Menu/>\n                            <div className=\"content-wrapper\">\n                                <div className=\"content-header\">\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row mb-2\" style={{marginTop: '30px', display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n                                            <div className=\"col-sm-11\">\n                                                <h1 className=\"m-0 text-dark\">All Customer</h1>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"content\">\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row\" style={{marginTop: '30px', display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n                                            <div className=\"col-lg-11\">\n\n                                                <div className=\"card\">\n                                                    <div className=\"card-header border-0\">\n                                                        {/*<h3 className=\"card-title\">List Customer</h3>*/}\n                                                        <div className=\"card-tools\">\n                                                            {\n                                                                localStorage.getItem(\"inputCustomer\") == \"true\" &&\n                                                                <a href=\"/customer/form\" className=\"btn btn-tool btn-sm\">\n                                                                    <i className=\"fas fa-plus-circle\"/>\n                                                                </a>\n                                                            }\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"card-body table-responsive p-0\">\n                                                        <TableScrollbar rows={10}>\n                                                        <table className=\"table table-striped table-bordered table-align-middle table-head-fixed text-nowrap\">\n                                                            <thead >\n                                                            <tr style={{textAlign: \"left\", background:\"#FCE051\"}}>\n                                                                <th style={{background:\"#FCE051\"}} >Number</th>\n                                                                <th style={{background:\"#FCE051\"}}>Full Name</th>\n                                                                <th style={{background:\"#FCE051\"}}>Number Identity</th>\n                                                                <th style={{background:\"#FCE051\"}}>Employee Type</th>\n                                                                <th style={{background:\"#FCE051\"}}>Submitter</th>\n                                                                <th style={{background:\"#FCE051\"}}>Action</th>\n                                                            </tr>\n                                                            </thead>\n                                                            <tbody style={{textAlign: \"left\"}}>\n                                                            {\n                                                                !isLoading ?\n                                                                    // customers?.list?.map((e, i) => {\n                                                                    customer.map((e, i) => {\n\n                                                                        return (\n                                                                            <RowCustomer key={i} data={e}\n                                                                                         number={(pageParam * sizeParam) + i + 1}/>\n                                                                        )\n                                                                    })\n                                                                    :\n                                                                    <div className=\"spinner\">\n                                                                        <Spinner style={{ width: '5rem', height: '5rem', color:\"#e42256\" }} />{' '}\n                                                                    </div>\n                                                            }\n                                                            </tbody>\n                                                        </table>\n                                                        </TableScrollbar>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <br/>\n                                        <PaginationButton\n                                            currentPage = {currentPage}\n                                            setPage={setPageParam}\n                                            totalPage={totalPage}\n                                            handleLimit={handleLimit}\n                                            size={sizeParam}\n                                        />\n                                        <br/>\n                                    </div>\n                                </div>\n                            </div>\n                            <Footer/>\n                        </Containers>\n                     </>\n                    :\n                    <div>\n                        <Error/>\n                    </div>\n            }\n        </div>\n\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        error: state.findAllCustomerReducer.error,\n        customers: state.findAllCustomerReducer.data || [],\n        isLoading: state.findAllCustomerReducer.isLoading,\n        size: state.findAllCustomerReducer.pagination.size,\n        total: state.findAllCustomerReducer.pagination.total,\n        currentPage: state.findAllCustomerReducer.pagination.page\n    }\n}\n\nconst mapDispatchToProps = {\n    findAllCustomerAction\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerList)\n","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\components\\dashboard\\Home.js",["579","580"],"import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {findAllTotalAction} from \"../../actions/totalAction\";\nimport Containers from '../../components/Containers/Container'\nimport {Card} from \"react-bootstrap\";\nimport CardDeck from 'react-bootstrap/CardDeck';\n\nfunction Content({\n                     findAllTotalAction,\n                     error,\n                     isLoading,\n                     dashboard\n                 }) {\n\n    const [data, setData] = useState([])\n\n    const onReload = () => {\n        findAllTotalAction()\n    }\n\n    useEffect(() => {\n        onReload()\n    }, [])\n\n    useEffect(() => {\n\n        setData(dashboard)\n\n        console.log(\"ini data\", data)\n    }, [dashboard])\n\n    useEffect(onReload, [findAllTotalAction])\n\n    return (\n        <Containers error={error}>\n            <div className=\"content-wrapper\">\n                {/* Content Header (Page header) */}\n                <div className=\"content-header\">\n                    <div className=\"container-fluid\">\n                        <div className=\"row mb-2\" style={{marginTop: '30px', display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n                            <div className=\"col-sm-11\">\n                                <h1 className=\"m-0 text-dark\" style={{fontSize:\"1.5vw\"}}>Dashboard</h1>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"content\">\n                    <div className=\"container-fluid\">\n                        <div className=\"row\" style={{display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n                            <div className=\"col-lg-11\">\n                                <div className=\"card p-lg-5\">\n                        {/*<Card style={{padding:\"2vw\"}}>*/}\n                            <CardDeck>\n                                <Card>\n                                    <Card.Header style={{height:\"3vw\"}}>\n                                        <p className=\"text-success text-xl \" >\n                                            <i className=\"ion ion-ios-people-outline\"/>\n                                        </p>\n                                    </Card.Header>\n                                    <Card.Body>\n                                        <Card.Title style={{fontSize:\"1.3vw\"}}>Total Customer</Card.Title>\n\n                                        <Card.Text  style={{fontSize:\"2.5vw\", height:\"7vw\"}}>\n                                            {data?.totalCustomer}\n                                        </Card.Text>\n                                    </Card.Body>\n                                    <Card.Footer>\n                                        <small className=\"text-muted\">  </small>\n                                    </Card.Footer>\n                                </Card>\n                                <Card >\n                                    <Card.Header style={{height:\"3vw\"}}>\n                                        <p className=\"text-warning text-xl\">\n                                            <i className=\"ion ion-ios-cart-outline\"/>\n                                        </p>\n                                    </Card.Header>\n                                    <Card.Body>\n                                        <Card.Title style={{fontSize:\"1.3vw\"}}>Total Transaction</Card.Title>\n\n                                        <Card.Text  style={{fontSize:\"2.5vw\", height:\"7vw\"}}>\n                                            {data?.totalTransaction}\n                                        </Card.Text>\n                                    </Card.Body>\n                                    <Card.Footer>\n                                        <small className=\"text-muted\">  </small>\n                                    </Card.Footer>\n                                </Card>\n                                <Card >\n                                    <Card.Header style={{height:\"3vw\"}}>\n                                        <p className=\"text-danger text-xl\">\n                                            <i className=\"ion ion-ios-list-outline\"/>\n                                        </p>\n                                    </Card.Header>\n                                    <Card.Body>\n                                        <Card.Title style={{fontSize:\"1.3vw\"}}>Total Approved</Card.Title>\n                                        <Card.Text  style={{fontSize:\"2.5vw\", height:\"7vw\"}}>\n                                            {data?.totalApproved}\n                                        </Card.Text>\n                                    </Card.Body>\n                                    <Card.Footer>\n                                        <small className=\"text-muted\">  </small>\n                                    </Card.Footer>\n                                </Card>\n                                <Card >\n                                    <Card.Header style={{height:\"3vw\"}}>\n                                        <p className=\"text-success text-xl\">\n                                            <i className=\"ion ion-ios-people-outline\"/>\n                                        </p>\n                                    </Card.Header>\n                                    <Card.Body>\n                                        <Card.Title style={{fontSize:\"1.3vw\"}}>Total Rejected</Card.Title>\n\n                                        <Card.Text  style={{fontSize:\"2.5vw\", height:\"7vw\"}}>\n                                            {data?.totalRejected}\n                                        </Card.Text>\n                                    </Card.Body>\n                                    <Card.Footer>\n                                        <small className=\"text-muted\">  </small>\n                                    </Card.Footer>\n                                </Card>\n\n                            </CardDeck>\n                        {/*</Card>*/}\n                                </div></div></div>\n                    </div>\n                </div>\n            </div>\n        </Containers>\n\n    );\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        error: state.findAllTotalReducer.error,\n        dashboard: state.findAllTotalReducer.data\n    }\n}\n\nconst mapDispatchToProps = {\n    findAllTotalAction\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Content);\n","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\sagas\\pagination.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\configs\\api.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\components\\Buttons\\Buttons.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\transaction\\transactionList\\TransactionRow.js",["581","582","583","584"],"import React from 'react'\nimport {Button} from \"reactstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCheckCircle, faInfoCircle, faPencilAlt, faQuestionCircle, faTrash} from \"@fortawesome/free-solid-svg-icons\";\nimport NumberFormat from \"react-number-format\";\n\nconst TransactionRow = ({data, onUpdate, number}) => {\n\n    console.log(data)\n\n    return (\n\n        <tr>\n            <td>{number}</td>\n            <td>{data.transaction.customer.name}</td>\n            <td>{data.transaction.customer.employeeType} </td>\n            <td><NumberFormat value={data.transaction.loan}\n                              displayType={'text'}\n                              thousandSeparator={true}\n                              prefix={'Rp '}/></td>\n            <td>{data.transaction.tenor} month</td>\n            <td>{data.transaction.interestRate} %</td>\n            {/*{data.approve == true &&*/}\n            <td>\n                {/*<a href={`/transaction/${data.id}/detail`} className=\"text-muted\">*/}\n                {/*    <i className=\"fas fa-info-circle\" />*/}\n                {/*</a>{' '}*/}\n                {/*{localStorage.getItem(\"approveTransaction\") == \"true\" &&*/}\n                <Button href={`/approval/${data.id}`} style={{background:\"#e42256\"}}>\n                    <FontAwesomeIcon icon={faQuestionCircle}/>\n                </Button>\n                {/*}*/}\n\n            </td>\n        </tr>\n    )\n}\n\nexport default TransactionRow;\n\n","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\pages\\customer\\listCustomer\\RowCustomer.js",["585","586"],"import React from 'react'\n\nconst CustomerRow = ({data, onUpdate, number}) => {\n    return (\n        <tr>\n            <td>{number}</td>\n            <td>{data.name}</td>\n            <td>{data.idNumber} </td>\n            <td>{data.employeeType}</td>\n            <td>{data.submitter}</td>\n            <td style={{textAlign: \"left\"}}>\n                <a onClick={data} href={`/customer/${data.id}/detail`} className=\"text-muted btn-lg\">\n                    <i className=\"fas fa-info-circle\" />\n                </a>{' '}\n                {localStorage.getItem(\"inputCustomer\") == \"true\" &&\n                    <>\n                <a onClick={onUpdate} href={`/customer/${data.id}/edit`} className=\"text-muted btn-lg\">\n                    <i className=\"fas fa-pencil-alt\"/>\n                </a>{' '}\n                </>\n                }\n                {\n                    localStorage.getItem(\"inputTransaction\") == \"true\" &&\n                <>\n                <a onClick={data} href={`/transaction/form/${data.id}`} className=\"text-muted btn-lg\">\n                    <i className=\"fas fa-wallet\" />\n                </a>{' '}\n                </>}\n            </td>\n        </tr>\n    )\n}\n\nexport default CustomerRow;\n","D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\actions\\totalAction.js",[],"D:\\PRESENTASI\\ok-200-credit-21-tampilan-spv\\final\\src\\components\\DropdownList\\DropdownList.js",[],{"ruleId":"587","replacedBy":"588"},{"ruleId":"589","replacedBy":"590"},{"ruleId":"591","severity":1,"message":"592","line":23,"column":11,"nodeType":"593","messageId":"594","endLine":23,"endColumn":18},{"ruleId":"591","severity":1,"message":"595","line":3,"column":8,"nodeType":"593","messageId":"594","endLine":3,"endColumn":37},{"ruleId":"591","severity":1,"message":"596","line":6,"column":5,"nodeType":"593","messageId":"594","endLine":6,"endColumn":15},{"ruleId":"591","severity":1,"message":"597","line":6,"column":17,"nodeType":"593","messageId":"594","endLine":6,"endColumn":22},{"ruleId":"591","severity":1,"message":"598","line":7,"column":5,"nodeType":"593","messageId":"594","endLine":7,"endColumn":11},{"ruleId":"591","severity":1,"message":"599","line":8,"column":5,"nodeType":"593","messageId":"594","endLine":8,"endColumn":17},{"ruleId":"591","severity":1,"message":"600","line":12,"column":51,"nodeType":"593","messageId":"594","endLine":12,"endColumn":60},{"ruleId":"601","severity":1,"message":"602","line":59,"column":8,"nodeType":"603","endLine":59,"endColumn":17,"suggestions":"604"},{"ruleId":"591","severity":1,"message":"605","line":72,"column":11,"nodeType":"593","messageId":"594","endLine":72,"endColumn":22},{"ruleId":"591","severity":1,"message":"606","line":81,"column":15,"nodeType":"593","messageId":"594","endLine":81,"endColumn":23},{"ruleId":"591","severity":1,"message":"607","line":100,"column":11,"nodeType":"593","messageId":"594","endLine":100,"endColumn":22},{"ruleId":"608","severity":1,"message":"609","line":123,"column":48,"nodeType":"610","messageId":"611","endLine":123,"endColumn":50},{"ruleId":"608","severity":1,"message":"612","line":195,"column":114,"nodeType":"610","messageId":"611","endLine":195,"endColumn":116},{"ruleId":"608","severity":1,"message":"609","line":245,"column":120,"nodeType":"610","messageId":"611","endLine":245,"endColumn":122},{"ruleId":"591","severity":1,"message":"613","line":1,"column":27,"nodeType":"593","messageId":"594","endLine":1,"endColumn":35},{"ruleId":"591","severity":1,"message":"614","line":3,"column":9,"nodeType":"593","messageId":"594","endLine":3,"endColumn":30},{"ruleId":"591","severity":1,"message":"615","line":11,"column":9,"nodeType":"593","messageId":"594","endLine":11,"endColumn":18},{"ruleId":"591","severity":1,"message":"616","line":12,"column":9,"nodeType":"593","messageId":"594","endLine":12,"endColumn":25},{"ruleId":"601","severity":1,"message":"617","line":56,"column":8,"nodeType":"603","endLine":56,"endColumn":10,"suggestions":"618"},{"ruleId":"601","severity":1,"message":"617","line":62,"column":8,"nodeType":"603","endLine":62,"endColumn":19,"suggestions":"619"},{"ruleId":"608","severity":1,"message":"609","line":67,"column":48,"nodeType":"610","messageId":"611","endLine":67,"endColumn":50},{"ruleId":"591","severity":1,"message":"620","line":7,"column":9,"nodeType":"593","messageId":"594","endLine":7,"endColumn":16},{"ruleId":"591","severity":1,"message":"621","line":7,"column":33,"nodeType":"593","messageId":"594","endLine":7,"endColumn":40},{"ruleId":"591","severity":1,"message":"622","line":7,"column":42,"nodeType":"593","messageId":"594","endLine":7,"endColumn":48},{"ruleId":"591","severity":1,"message":"623","line":26,"column":12,"nodeType":"593","messageId":"594","endLine":26,"endColumn":20},{"ruleId":"601","severity":1,"message":"624","line":86,"column":8,"nodeType":"603","endLine":86,"endColumn":22,"suggestions":"625"},{"ruleId":"601","severity":1,"message":"602","line":96,"column":8,"nodeType":"603","endLine":96,"endColumn":43,"suggestions":"626"},{"ruleId":"608","severity":1,"message":"609","line":100,"column":60,"nodeType":"610","messageId":"611","endLine":100,"endColumn":62},{"ruleId":"608","severity":1,"message":"609","line":103,"column":65,"nodeType":"610","messageId":"611","endLine":103,"endColumn":67},{"ruleId":"608","severity":1,"message":"609","line":117,"column":58,"nodeType":"610","messageId":"611","endLine":117,"endColumn":60},{"ruleId":"608","severity":1,"message":"609","line":117,"column":114,"nodeType":"610","messageId":"611","endLine":117,"endColumn":116},{"ruleId":"608","severity":1,"message":"609","line":139,"column":103,"nodeType":"610","messageId":"611","endLine":139,"endColumn":105},{"ruleId":"608","severity":1,"message":"609","line":180,"column":112,"nodeType":"610","messageId":"611","endLine":180,"endColumn":114},{"ruleId":"608","severity":1,"message":"609","line":263,"column":113,"nodeType":"610","messageId":"611","endLine":263,"endColumn":115},{"ruleId":"608","severity":1,"message":"609","line":291,"column":105,"nodeType":"610","messageId":"611","endLine":291,"endColumn":107},{"ruleId":"591","severity":1,"message":"627","line":7,"column":9,"nodeType":"593","messageId":"594","endLine":7,"endColumn":24},{"ruleId":"591","severity":1,"message":"628","line":8,"column":9,"nodeType":"593","messageId":"594","endLine":8,"endColumn":20},{"ruleId":"591","severity":1,"message":"629","line":8,"column":22,"nodeType":"593","messageId":"594","endLine":8,"endColumn":30},{"ruleId":"591","severity":1,"message":"630","line":8,"column":32,"nodeType":"593","messageId":"594","endLine":8,"endColumn":42},{"ruleId":"591","severity":1,"message":"598","line":8,"column":44,"nodeType":"593","messageId":"594","endLine":8,"endColumn":50},{"ruleId":"591","severity":1,"message":"631","line":16,"column":12,"nodeType":"593","messageId":"594","endLine":16,"endColumn":16},{"ruleId":"591","severity":1,"message":"632","line":16,"column":18,"nodeType":"593","messageId":"594","endLine":16,"endColumn":25},{"ruleId":"601","severity":1,"message":"602","line":21,"column":8,"nodeType":"603","endLine":21,"endColumn":32,"suggestions":"633"},{"ruleId":"601","severity":1,"message":"602","line":26,"column":8,"nodeType":"603","endLine":26,"endColumn":32,"suggestions":"634"},{"ruleId":"608","severity":1,"message":"609","line":31,"column":55,"nodeType":"610","messageId":"611","endLine":31,"endColumn":57},{"ruleId":"608","severity":1,"message":"609","line":31,"column":108,"nodeType":"610","messageId":"611","endLine":31,"endColumn":110},{"ruleId":"608","severity":1,"message":"609","line":57,"column":106,"nodeType":"610","messageId":"611","endLine":57,"endColumn":108},{"ruleId":"608","severity":1,"message":"609","line":95,"column":88,"nodeType":"610","messageId":"611","endLine":95,"endColumn":90},{"ruleId":"635","severity":1,"message":"636","line":114,"column":81,"nodeType":"637","endLine":114,"endColumn":122},{"ruleId":"635","severity":1,"message":"636","line":118,"column":81,"nodeType":"637","endLine":118,"endColumn":127},{"ruleId":"638","severity":1,"message":"639","line":132,"column":31,"nodeType":"640","endLine":133,"endColumn":24},{"ruleId":"591","severity":1,"message":"641","line":11,"column":9,"nodeType":"593","messageId":"594","endLine":11,"endColumn":15},{"ruleId":"591","severity":1,"message":"642","line":11,"column":17,"nodeType":"593","messageId":"594","endLine":11,"endColumn":28},{"ruleId":"601","severity":1,"message":"617","line":30,"column":8,"nodeType":"603","endLine":30,"endColumn":10,"suggestions":"643"},{"ruleId":"601","severity":1,"message":"617","line":34,"column":8,"nodeType":"603","endLine":34,"endColumn":30,"suggestions":"644"},{"ruleId":"591","severity":1,"message":"645","line":57,"column":11,"nodeType":"593","messageId":"594","endLine":57,"endColumn":25},{"ruleId":"591","severity":1,"message":"646","line":60,"column":11,"nodeType":"593","messageId":"594","endLine":60,"endColumn":20},{"ruleId":"591","severity":1,"message":"647","line":63,"column":11,"nodeType":"593","messageId":"594","endLine":63,"endColumn":25},{"ruleId":"608","severity":1,"message":"609","line":71,"column":55,"nodeType":"610","messageId":"611","endLine":71,"endColumn":57},{"ruleId":"601","severity":1,"message":"617","line":56,"column":8,"nodeType":"603","endLine":56,"endColumn":27,"suggestions":"648"},{"ruleId":"601","severity":1,"message":"617","line":62,"column":8,"nodeType":"603","endLine":62,"endColumn":19,"suggestions":"649"},{"ruleId":"608","severity":1,"message":"609","line":67,"column":48,"nodeType":"610","messageId":"611","endLine":67,"endColumn":50},{"ruleId":"601","severity":1,"message":"602","line":45,"column":8,"nodeType":"603","endLine":45,"endColumn":18,"suggestions":"650"},{"ruleId":"651","severity":1,"message":"652","line":68,"column":27,"nodeType":"653","messageId":"654","endLine":68,"endColumn":29},{"ruleId":"608","severity":1,"message":"609","line":69,"column":26,"nodeType":"610","messageId":"611","endLine":69,"endColumn":28},{"ruleId":"608","severity":1,"message":"609","line":93,"column":48,"nodeType":"610","messageId":"611","endLine":93,"endColumn":50},{"ruleId":"591","severity":1,"message":"642","line":1,"column":9,"nodeType":"593","messageId":"594","endLine":1,"endColumn":20},{"ruleId":"591","severity":1,"message":"641","line":1,"column":22,"nodeType":"593","messageId":"594","endLine":1,"endColumn":28},{"ruleId":"591","severity":1,"message":"655","line":1,"column":30,"nodeType":"593","messageId":"594","endLine":1,"endColumn":39},{"ruleId":"591","severity":1,"message":"656","line":1,"column":41,"nodeType":"593","messageId":"594","endLine":1,"endColumn":46},{"ruleId":"601","severity":1,"message":"617","line":30,"column":8,"nodeType":"603","endLine":30,"endColumn":30,"suggestions":"657"},{"ruleId":"601","severity":1,"message":"617","line":36,"column":8,"nodeType":"603","endLine":36,"endColumn":10,"suggestions":"658"},{"ruleId":"601","severity":1,"message":"659","line":42,"column":8,"nodeType":"603","endLine":42,"endColumn":22,"suggestions":"660"},{"ruleId":"608","severity":1,"message":"609","line":61,"column":59,"nodeType":"610","messageId":"611","endLine":61,"endColumn":61},{"ruleId":"591","severity":1,"message":"641","line":12,"column":16,"nodeType":"593","messageId":"594","endLine":12,"endColumn":22},{"ruleId":"591","severity":1,"message":"642","line":12,"column":24,"nodeType":"593","messageId":"594","endLine":12,"endColumn":35},{"ruleId":"601","severity":1,"message":"617","line":28,"column":8,"nodeType":"603","endLine":28,"endColumn":30,"suggestions":"661"},{"ruleId":"601","severity":1,"message":"617","line":32,"column":8,"nodeType":"603","endLine":32,"endColumn":10,"suggestions":"662"},{"ruleId":"601","severity":1,"message":"663","line":38,"column":8,"nodeType":"603","endLine":38,"endColumn":17,"suggestions":"664"},{"ruleId":"601","severity":1,"message":"665","line":50,"column":25,"nodeType":"603","endLine":50,"endColumn":68,"suggestions":"666"},{"ruleId":"608","severity":1,"message":"609","line":55,"column":68,"nodeType":"610","messageId":"611","endLine":55,"endColumn":70},{"ruleId":"591","severity":1,"message":"667","line":2,"column":9,"nodeType":"593","messageId":"594","endLine":2,"endColumn":13},{"ruleId":"591","severity":1,"message":"668","line":2,"column":15,"nodeType":"593","messageId":"594","endLine":2,"endColumn":23},{"ruleId":"591","severity":1,"message":"669","line":2,"column":25,"nodeType":"593","messageId":"594","endLine":2,"endColumn":35},{"ruleId":"591","severity":1,"message":"615","line":2,"column":37,"nodeType":"593","messageId":"594","endLine":2,"endColumn":46},{"ruleId":"591","severity":1,"message":"670","line":3,"column":8,"nodeType":"593","messageId":"594","endLine":3,"endColumn":14},{"ruleId":"591","severity":1,"message":"597","line":6,"column":5,"nodeType":"593","messageId":"594","endLine":6,"endColumn":10},{"ruleId":"591","severity":1,"message":"671","line":6,"column":12,"nodeType":"593","messageId":"594","endLine":6,"endColumn":18},{"ruleId":"591","severity":1,"message":"672","line":6,"column":20,"nodeType":"593","messageId":"594","endLine":6,"endColumn":30},{"ruleId":"591","severity":1,"message":"673","line":25,"column":12,"nodeType":"593","messageId":"594","endLine":25,"endColumn":28},{"ruleId":"591","severity":1,"message":"674","line":26,"column":12,"nodeType":"593","messageId":"594","endLine":26,"endColumn":28},{"ruleId":"591","severity":1,"message":"675","line":27,"column":12,"nodeType":"593","messageId":"594","endLine":27,"endColumn":32},{"ruleId":"608","severity":1,"message":"609","line":83,"column":48,"nodeType":"610","messageId":"611","endLine":83,"endColumn":50},{"ruleId":"591","severity":1,"message":"676","line":1,"column":16,"nodeType":"593","messageId":"594","endLine":1,"endColumn":25},{"ruleId":"591","severity":1,"message":"613","line":1,"column":27,"nodeType":"593","messageId":"594","endLine":1,"endColumn":35},{"ruleId":"591","severity":1,"message":"668","line":2,"column":9,"nodeType":"593","messageId":"594","endLine":2,"endColumn":17},{"ruleId":"591","severity":1,"message":"669","line":2,"column":19,"nodeType":"593","messageId":"594","endLine":2,"endColumn":29},{"ruleId":"591","severity":1,"message":"615","line":2,"column":31,"nodeType":"593","messageId":"594","endLine":2,"endColumn":40},{"ruleId":"591","severity":1,"message":"677","line":11,"column":9,"nodeType":"593","messageId":"594","endLine":11,"endColumn":16},{"ruleId":"591","severity":1,"message":"655","line":11,"column":51,"nodeType":"593","messageId":"594","endLine":11,"endColumn":60},{"ruleId":"608","severity":1,"message":"609","line":22,"column":48,"nodeType":"610","messageId":"611","endLine":22,"endColumn":50},{"ruleId":"601","severity":1,"message":"678","line":58,"column":8,"nodeType":"593","endLine":58,"endColumn":12},{"ruleId":"601","severity":1,"message":"679","line":58,"column":8,"nodeType":"593","endLine":58,"endColumn":12,"suggestions":"680"},{"ruleId":"651","severity":1,"message":"652","line":77,"column":27,"nodeType":"653","messageId":"654","endLine":77,"endColumn":29},{"ruleId":"608","severity":1,"message":"609","line":78,"column":26,"nodeType":"610","messageId":"611","endLine":78,"endColumn":28},{"ruleId":"608","severity":1,"message":"609","line":107,"column":48,"nodeType":"610","messageId":"611","endLine":107,"endColumn":50},{"ruleId":"591","severity":1,"message":"681","line":10,"column":8,"nodeType":"593","messageId":"594","endLine":10,"endColumn":17},{"ruleId":"601","severity":1,"message":"617","line":52,"column":8,"nodeType":"603","endLine":52,"endColumn":27,"suggestions":"682"},{"ruleId":"601","severity":1,"message":"617","line":58,"column":8,"nodeType":"603","endLine":58,"endColumn":19,"suggestions":"683"},{"ruleId":"608","severity":1,"message":"609","line":63,"column":48,"nodeType":"610","messageId":"611","endLine":63,"endColumn":50},{"ruleId":"591","severity":1,"message":"684","line":11,"column":9,"nodeType":"593","messageId":"594","endLine":11,"endColumn":12},{"ruleId":"591","severity":1,"message":"685","line":11,"column":14,"nodeType":"593","messageId":"594","endLine":11,"endColumn":17},{"ruleId":"591","severity":1,"message":"641","line":11,"column":19,"nodeType":"593","messageId":"594","endLine":11,"endColumn":25},{"ruleId":"591","severity":1,"message":"642","line":11,"column":27,"nodeType":"593","messageId":"594","endLine":11,"endColumn":38},{"ruleId":"601","severity":1,"message":"617","line":30,"column":8,"nodeType":"603","endLine":30,"endColumn":30,"suggestions":"686"},{"ruleId":"601","severity":1,"message":"617","line":34,"column":8,"nodeType":"603","endLine":34,"endColumn":10,"suggestions":"687"},{"ruleId":"601","severity":1,"message":"688","line":40,"column":8,"nodeType":"603","endLine":40,"endColumn":19,"suggestions":"689"},{"ruleId":"608","severity":1,"message":"609","line":57,"column":55,"nodeType":"610","messageId":"611","endLine":57,"endColumn":57},{"ruleId":"608","severity":1,"message":"609","line":80,"column":92,"nodeType":"610","messageId":"611","endLine":80,"endColumn":94},{"ruleId":"591","severity":1,"message":"690","line":4,"column":3,"nodeType":"593","messageId":"594","endLine":4,"endColumn":34},{"ruleId":"591","severity":1,"message":"691","line":6,"column":27,"nodeType":"593","messageId":"594","endLine":6,"endColumn":33},{"ruleId":"591","severity":1,"message":"692","line":6,"column":35,"nodeType":"593","messageId":"594","endLine":6,"endColumn":40},{"ruleId":"591","severity":1,"message":"693","line":6,"column":42,"nodeType":"593","messageId":"594","endLine":6,"endColumn":48},{"ruleId":"591","severity":1,"message":"694","line":7,"column":8,"nodeType":"593","messageId":"594","endLine":7,"endColumn":20},{"ruleId":"591","severity":1,"message":"695","line":8,"column":8,"nodeType":"593","messageId":"594","endLine":8,"endColumn":23},{"ruleId":"591","severity":1,"message":"696","line":5,"column":3,"nodeType":"593","messageId":"594","endLine":5,"endColumn":15},{"ruleId":"591","severity":1,"message":"671","line":6,"column":11,"nodeType":"593","messageId":"594","endLine":6,"endColumn":17},{"ruleId":"591","severity":1,"message":"697","line":8,"column":3,"nodeType":"593","messageId":"594","endLine":8,"endColumn":12},{"ruleId":"591","severity":1,"message":"698","line":9,"column":3,"nodeType":"593","messageId":"594","endLine":9,"endColumn":13},{"ruleId":"591","severity":1,"message":"699","line":10,"column":3,"nodeType":"593","messageId":"594","endLine":10,"endColumn":10},{"ruleId":"700","severity":1,"message":"701","line":56,"column":11,"nodeType":"637","endLine":56,"endColumn":82},{"ruleId":"608","severity":1,"message":"609","line":83,"column":41,"nodeType":"610","messageId":"611","endLine":83,"endColumn":43},{"ruleId":"591","severity":1,"message":"702","line":2,"column":9,"nodeType":"593","messageId":"594","endLine":2,"endColumn":22},{"ruleId":"591","severity":1,"message":"699","line":2,"column":24,"nodeType":"593","messageId":"594","endLine":2,"endColumn":31},{"ruleId":"591","severity":1,"message":"627","line":3,"column":9,"nodeType":"593","messageId":"594","endLine":3,"endColumn":24},{"ruleId":"700","severity":1,"message":"703","line":10,"column":9,"nodeType":"637","endLine":10,"endColumn":35},{"ruleId":"700","severity":1,"message":"703","line":31,"column":15,"nodeType":"637","endLine":31,"endColumn":38},{"ruleId":"608","severity":1,"message":"609","line":38,"column":45,"nodeType":"610","messageId":"611","endLine":38,"endColumn":47},{"ruleId":"608","severity":1,"message":"609","line":77,"column":56,"nodeType":"610","messageId":"611","endLine":77,"endColumn":58},{"ruleId":"608","severity":1,"message":"609","line":86,"column":58,"nodeType":"610","messageId":"611","endLine":86,"endColumn":60},{"ruleId":"608","severity":1,"message":"609","line":95,"column":59,"nodeType":"610","messageId":"611","endLine":95,"endColumn":61},{"ruleId":"608","severity":1,"message":"609","line":104,"column":61,"nodeType":"610","messageId":"611","endLine":104,"endColumn":63},{"ruleId":"608","severity":1,"message":"609","line":113,"column":69,"nodeType":"610","messageId":"611","endLine":113,"endColumn":71},{"ruleId":"608","severity":1,"message":"609","line":122,"column":56,"nodeType":"610","messageId":"611","endLine":122,"endColumn":58},{"ruleId":"591","severity":1,"message":"685","line":2,"column":9,"nodeType":"593","messageId":"594","endLine":2,"endColumn":12},{"ruleId":"591","severity":1,"message":"684","line":3,"column":9,"nodeType":"593","messageId":"594","endLine":3,"endColumn":12},{"ruleId":"700","severity":1,"message":"703","line":23,"column":25,"nodeType":"637","endLine":23,"endColumn":78},{"ruleId":"608","severity":1,"message":"609","line":15,"column":56,"nodeType":"610","messageId":"611","endLine":15,"endColumn":58},{"ruleId":"608","severity":1,"message":"609","line":21,"column":59,"nodeType":"610","messageId":"611","endLine":21,"endColumn":61},{"ruleId":"700","severity":1,"message":"703","line":12,"column":17,"nodeType":"637","endLine":12,"endColumn":70},{"ruleId":"700","severity":1,"message":"703","line":12,"column":17,"nodeType":"637","endLine":12,"endColumn":70},{"ruleId":"591","severity":1,"message":"704","line":7,"column":8,"nodeType":"593","messageId":"594","endLine":7,"endColumn":18},{"ruleId":"591","severity":1,"message":"705","line":15,"column":92,"nodeType":"593","messageId":"594","endLine":15,"endColumn":118},{"ruleId":"591","severity":1,"message":"706","line":14,"column":43,"nodeType":"593","messageId":"594","endLine":14,"endColumn":58},{"ruleId":"591","severity":1,"message":"704","line":18,"column":8,"nodeType":"593","messageId":"594","endLine":18,"endColumn":18},{"ruleId":"707","severity":1,"message":"708","line":29,"column":13,"nodeType":"709","messageId":"710","endLine":29,"endColumn":46},{"ruleId":"591","severity":1,"message":"711","line":8,"column":5,"nodeType":"593","messageId":"594","endLine":8,"endColumn":25},{"ruleId":"591","severity":1,"message":"712","line":11,"column":5,"nodeType":"593","messageId":"594","endLine":11,"endColumn":38},{"ruleId":"591","severity":1,"message":"713","line":12,"column":5,"nodeType":"593","messageId":"594","endLine":12,"endColumn":38},{"ruleId":"591","severity":1,"message":"714","line":5,"column":5,"nodeType":"593","messageId":"594","endLine":5,"endColumn":30},{"ruleId":"591","severity":1,"message":"712","line":5,"column":32,"nodeType":"593","messageId":"594","endLine":5,"endColumn":65},{"ruleId":"591","severity":1,"message":"713","line":5,"column":67,"nodeType":"593","messageId":"594","endLine":5,"endColumn":100},{"ruleId":"591","severity":1,"message":"715","line":15,"column":9,"nodeType":"593","messageId":"594","endLine":15,"endColumn":12},{"ruleId":"707","severity":1,"message":"708","line":65,"column":5,"nodeType":"709","messageId":"710","endLine":65,"endColumn":62},{"ruleId":"591","severity":1,"message":"716","line":4,"column":5,"nodeType":"593","messageId":"594","endLine":4,"endColumn":18},{"ruleId":"591","severity":1,"message":"717","line":5,"column":5,"nodeType":"593","messageId":"594","endLine":5,"endColumn":26},{"ruleId":"591","severity":1,"message":"718","line":6,"column":5,"nodeType":"593","messageId":"594","endLine":6,"endColumn":26},{"ruleId":"591","severity":1,"message":"719","line":3,"column":9,"nodeType":"593","messageId":"594","endLine":3,"endColumn":22},{"ruleId":"591","severity":1,"message":"720","line":5,"column":9,"nodeType":"593","messageId":"594","endLine":5,"endColumn":20},{"ruleId":"601","severity":1,"message":"721","line":53,"column":8,"nodeType":"603","endLine":53,"endColumn":10,"suggestions":"722"},{"ruleId":"608","severity":1,"message":"609","line":147,"column":58,"nodeType":"610","messageId":"611","endLine":147,"endColumn":60},{"ruleId":"723","severity":1,"message":"724","line":271,"column":99,"nodeType":"725","endLine":271,"endColumn":106},{"ruleId":"608","severity":1,"message":"609","line":295,"column":108,"nodeType":"610","messageId":"611","endLine":295,"endColumn":110},{"ruleId":"707","severity":1,"message":"708","line":370,"column":5,"nodeType":"709","messageId":"710","endLine":370,"endColumn":60},{"ruleId":"591","severity":1,"message":"641","line":1,"column":9,"nodeType":"593","messageId":"594","endLine":1,"endColumn":15},{"ruleId":"591","severity":1,"message":"642","line":1,"column":17,"nodeType":"593","messageId":"594","endLine":1,"endColumn":28},{"ruleId":"601","severity":1,"message":"617","line":31,"column":8,"nodeType":"603","endLine":31,"endColumn":30,"suggestions":"726"},{"ruleId":"601","severity":1,"message":"617","line":35,"column":8,"nodeType":"603","endLine":35,"endColumn":10,"suggestions":"727"},{"ruleId":"601","severity":1,"message":"659","line":41,"column":8,"nodeType":"603","endLine":41,"endColumn":22,"suggestions":"728"},{"ruleId":"608","severity":1,"message":"609","line":59,"column":59,"nodeType":"610","messageId":"611","endLine":59,"endColumn":61},{"ruleId":"591","severity":1,"message":"729","line":19,"column":12,"nodeType":"593","messageId":"594","endLine":19,"endColumn":17},{"ruleId":"591","severity":1,"message":"730","line":19,"column":19,"nodeType":"593","messageId":"594","endLine":19,"endColumn":27},{"ruleId":"601","severity":1,"message":"731","line":43,"column":8,"nodeType":"603","endLine":43,"endColumn":18,"suggestions":"732"},{"ruleId":"591","severity":1,"message":"606","line":60,"column":15,"nodeType":"593","messageId":"594","endLine":60,"endColumn":23},{"ruleId":"591","severity":1,"message":"733","line":73,"column":11,"nodeType":"593","messageId":"594","endLine":73,"endColumn":24},{"ruleId":"591","severity":1,"message":"606","line":78,"column":15,"nodeType":"593","messageId":"594","endLine":78,"endColumn":23},{"ruleId":"591","severity":1,"message":"734","line":91,"column":11,"nodeType":"593","messageId":"594","endLine":91,"endColumn":29},{"ruleId":"591","severity":1,"message":"606","line":96,"column":15,"nodeType":"593","messageId":"594","endLine":96,"endColumn":23},{"ruleId":"735","severity":1,"message":"736","line":112,"column":12,"nodeType":"737","messageId":"738","endLine":112,"endColumn":29},{"ruleId":"608","severity":1,"message":"612","line":125,"column":37,"nodeType":"610","messageId":"611","endLine":125,"endColumn":39},{"ruleId":"608","severity":1,"message":"609","line":138,"column":34,"nodeType":"610","messageId":"611","endLine":138,"endColumn":36},{"ruleId":"608","severity":1,"message":"609","line":153,"column":55,"nodeType":"610","messageId":"611","endLine":153,"endColumn":57},{"ruleId":"608","severity":1,"message":"609","line":263,"column":92,"nodeType":"610","messageId":"611","endLine":263,"endColumn":94},{"ruleId":"638","severity":1,"message":"639","line":362,"column":31,"nodeType":"640","endLine":363,"endColumn":28},{"ruleId":"601","severity":1,"message":"617","line":31,"column":8,"nodeType":"603","endLine":31,"endColumn":30,"suggestions":"739"},{"ruleId":"601","severity":1,"message":"617","line":35,"column":8,"nodeType":"603","endLine":35,"endColumn":10,"suggestions":"740"},{"ruleId":"601","severity":1,"message":"688","line":41,"column":8,"nodeType":"603","endLine":41,"endColumn":19,"suggestions":"741"},{"ruleId":"608","severity":1,"message":"609","line":62,"column":57,"nodeType":"610","messageId":"611","endLine":62,"endColumn":59},{"ruleId":"608","severity":1,"message":"609","line":87,"column":103,"nodeType":"610","messageId":"611","endLine":87,"endColumn":105},{"ruleId":"601","severity":1,"message":"617","line":23,"column":8,"nodeType":"603","endLine":23,"endColumn":10,"suggestions":"742"},{"ruleId":"601","severity":1,"message":"743","line":30,"column":8,"nodeType":"603","endLine":30,"endColumn":19,"suggestions":"744"},{"ruleId":"591","severity":1,"message":"745","line":4,"column":9,"nodeType":"593","messageId":"594","endLine":4,"endColumn":22},{"ruleId":"591","severity":1,"message":"746","line":4,"column":24,"nodeType":"593","messageId":"594","endLine":4,"endColumn":36},{"ruleId":"591","severity":1,"message":"747","line":4,"column":38,"nodeType":"593","messageId":"594","endLine":4,"endColumn":49},{"ruleId":"591","severity":1,"message":"748","line":4,"column":69,"nodeType":"593","messageId":"594","endLine":4,"endColumn":76},{"ruleId":"608","severity":1,"message":"609","line":15,"column":56,"nodeType":"610","messageId":"611","endLine":15,"endColumn":58},{"ruleId":"608","severity":1,"message":"609","line":23,"column":62,"nodeType":"610","messageId":"611","endLine":23,"endColumn":64},"no-native-reassign",["749"],"no-negated-in-lhs",["750"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'undraw_Updated_resume_re_q1or' is defined but never used.","'faEnvelope' is defined but never used.","'faKey' is defined but never used.","'faUser' is defined but never used.","'faUserCircle' is defined but never used.","'FormGroup' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["751"],"'handlePhoto' is assigned a value but never used.","'response' is assigned a value but never used.","'handleRoles' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'useState' is defined but never used.","'findAccountByIdAction' is defined but never used.","'useParams' is defined but never used.","'PaginationButton' is defined but never used.","React Hook useEffect has a missing dependency: 'onReload'. Either include it or remove the dependency array.",["752"],["753"],"'faCheck' is defined but never used.","'faCross' is defined but never used.","'faSave' is defined but never used.","'approval' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["754"],["755"],"'FontAwesomeIcon' is defined but never used.","'faHandshake' is defined but never used.","'faIdCard' is defined but never used.","'faMailBulk' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.",["756"],["757"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","'Button' is defined but never used.","'ButtonGroup' is defined but never used.",["758"],["759"],"'handleApproved' is assigned a value but never used.","'handleAll' is assigned a value but never used.","'handleRejected' is assigned a value but never used.",["760"],["761"],["762"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Container' is defined but never used.","'Table' is defined but never used.",["763"],["764"],"React Hook useEffect has a missing dependency: 'transaction'. Either include it or remove the dependency array.",["765"],["766"],["767"],"React Hook useEffect has a missing dependency: 'report'. Either include it or remove the dependency array.",["768"],"React Hook useEffect has a missing dependency: 'reports'. Either include it or remove the dependency array.",["769"],"'Link' is defined but never used.","'Redirect' is defined but never used.","'useHistory' is defined but never used.","'gambar' is defined but never used.","'faLock' is defined but never used.","'faLockOpen' is defined but never used.","'oldPasswordError' is assigned a value but never used.","'newPasswordError' is assigned a value but never used.","'confirmPasswordError' is assigned a value but never used.","'useEffect' is defined but never used.","'Spinner' is defined but never used.","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has missing dependencies: 'id' and 'role'. Either include them or remove the dependency array. If 'setData' needs the current value of 'role', you can also switch to useReducer instead of useState and read 'role' in the reducer.",["770"],"'ReasonRow' is defined but never used.",["771"],["772"],"'Row' is defined but never used.","'Col' is defined but never used.",["773"],["774"],"React Hook useEffect has a missing dependency: 'customer'. Either include it or remove the dependency array.",["775"],"'watchFindAllCustomerBySubmitter' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'ListCustomer' is defined but never used.","'TransactionList' is defined but never used.","'faFolderPlus' is defined but never used.","'faUserCog' is defined but never used.","'faUserPlus' is defined but never used.","'faUsers' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'faCheckDouble' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'pagination' is defined but never used.","'FIND_CUSTOMER_BY_SUBMITTER' is defined but never used.","'UPDATE_CUSTOMER' is defined but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'FIND_REPORT_BY_STAFF' is defined but never used.","'FIND_TRANSACTION_BY_STAFF_FAILURE' is defined but never used.","'FIND_TRANSACTION_BY_STAFF_SUCCESS' is defined but never used.","'FIND_TRANSACTION_BY_STAFF' is defined but never used.","'act' is defined but never used.","'SAVE_CUSTOMER' is defined but never used.","'SAVE_CUSTOMER_FAILURE' is defined but never used.","'SAVE_CUSTOMER_SUCCESS' is defined but never used.","'FaFontAwesome' is defined but never used.","'faArrowLeft' is defined but never used.","React Hook useEffect has missing dependencies: 'data', 'findCustomerByIdAction', and 'id'. Either include them or remove the dependency array. If 'findCustomerByIdAction' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["776"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["777"],["778"],["779"],"'roles' is assigned a value but never used.","'setRoles' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data.id', 'findCustomerByIdAction', and 'id'. Either include them or remove the dependency array. If 'findCustomerByIdAction' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["780"],"'uploadIdPhoto' is assigned a value but never used.","'uploadProfilePhoto' is assigned a value but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing",["781"],["782"],["783"],["784"],"React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["785"],"'faCheckCircle' is defined but never used.","'faInfoCircle' is defined but never used.","'faPencilAlt' is defined but never used.","'faTrash' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"786","fix":"787"},{"desc":"788","fix":"789"},{"desc":"790","fix":"791"},{"desc":"792","fix":"793"},{"desc":"794","fix":"795"},{"desc":"796","fix":"797"},{"desc":"796","fix":"798"},{"desc":"788","fix":"799"},{"desc":"800","fix":"801"},{"desc":"802","fix":"803"},{"desc":"790","fix":"804"},{"desc":"805","fix":"806"},{"desc":"800","fix":"807"},{"desc":"788","fix":"808"},{"desc":"809","fix":"810"},{"desc":"800","fix":"811"},{"desc":"788","fix":"812"},{"desc":"813","fix":"814"},{"desc":"815","fix":"816"},{"desc":"817","fix":"818"},{"desc":"819","fix":"820"},{"desc":"790","fix":"821"},{"desc":"800","fix":"822"},{"desc":"788","fix":"823"},{"desc":"824","fix":"825"},{"desc":"826","fix":"827"},{"desc":"800","fix":"828"},{"desc":"788","fix":"829"},{"desc":"809","fix":"830"},{"desc":"831","fix":"832"},{"desc":"800","fix":"833"},{"desc":"788","fix":"834"},{"desc":"824","fix":"835"},{"desc":"788","fix":"836"},{"desc":"837","fix":"838"},"Update the dependencies array to be: [account, id]",{"range":"839","text":"840"},"Update the dependencies array to be: [onReload]",{"range":"841","text":"842"},"Update the dependencies array to be: [isRemoved, onReload]",{"range":"843","text":"844"},"Update the dependencies array to be: [history, savedApprove]",{"range":"845","text":"846"},"Update the dependencies array to be: [id, transaction, transactionSubmitter]",{"range":"847","text":"848"},"Update the dependencies array to be: [findCustomerByIdAction, id]",{"range":"849","text":"850"},{"range":"851","text":"850"},{"range":"852","text":"842"},"Update the dependencies array to be: [onReload, pageParam, sizeParam]",{"range":"853","text":"854"},"Update the dependencies array to be: [findAllNeedAction, onReload]",{"range":"855","text":"856"},{"range":"857","text":"844"},"Update the dependencies array to be: [id, needType]",{"range":"858","text":"859"},{"range":"860","text":"854"},{"range":"861","text":"842"},"Update the dependencies array to be: [transaction, transactions]",{"range":"862","text":"863"},{"range":"864","text":"854"},{"range":"865","text":"842"},"Update the dependencies array to be: [report, reports]",{"range":"866","text":"867"},"Update the dependencies array to be: [findAllReportAction, pageParam, reports, sizeParam]",{"range":"868","text":"869"},"Update the dependencies array to be: [id, role]",{"range":"870","text":"871"},"Update the dependencies array to be: [findAllRoleAction, onReload]",{"range":"872","text":"873"},{"range":"874","text":"844"},{"range":"875","text":"854"},{"range":"876","text":"842"},"Update the dependencies array to be: [customer, customers]",{"range":"877","text":"878"},"Update the dependencies array to be: [data, findCustomerByIdAction, id]",{"range":"879","text":"880"},{"range":"881","text":"854"},{"range":"882","text":"842"},{"range":"883","text":"863"},"Update the dependencies array to be: [customer, data.id, findCustomerByIdAction, id]",{"range":"884","text":"885"},{"range":"886","text":"854"},{"range":"887","text":"842"},{"range":"888","text":"878"},{"range":"889","text":"842"},"Update the dependencies array to be: [dashboard, data]",{"range":"890","text":"891"},[1840,1849],"[account, id]",[1715,1717],"[onReload]",[1807,1818],"[isRemoved, onReload]",[2541,2555],"[history, savedApprove]",[2894,2929],"[id, transaction, transactionSubmitter]",[833,857],"[findCustomerByIdAction, id]",[948,972],[1241,1243],[1294,1316],"[onReload, pageParam, sizeParam]",[1622,1641],"[findAllNeedAction, onReload]",[1731,1742],[1544,1554],"[id, needType]",[1208,1230],[1317,1319],[1428,1442],"[transaction, transactions]",[1017,1039],[1090,1092],[1186,1195],"[report, reports]",[1460,1503],"[findAllReportAction, pageParam, reports, sizeParam]",[1806,1810],"[id, role]",[1559,1578],"[findAllRoleAction, onReload]",[1667,1678],[1168,1190],[1241,1243],[1343,1354],"[customer, customers]",[1984,1986],"[data, findCustomerByIdAction, id]",[1168,1190],[1241,1243],[1352,1366],[1639,1649],"[customer, data.id, findCustomerByIdAction, id]",[1102,1124],[1175,1177],[1278,1289],[629,631],[730,741],"[dashboard, data]"]